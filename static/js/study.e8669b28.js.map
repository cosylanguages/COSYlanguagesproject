{"version":3,"file":"static/js/study.e8669b28.js","mappings":"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","sources":["utils/speechUtils.js","../node_modules/react/jsx-runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","components/Common/TransliterableText.js","i18n/I18nContext.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","contexts/LatinizationContext.js","hooks/useLatinization.js","utils/transliteration.js","utils/exerciseDataService.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","utils/vocabularyService.js"],"sourcesContent":["// frontend/src/utils/speechUtils.js\r\n\r\n/**\r\n * Maps COSYlanguage identifiers to BCP 47 language codes for Web Speech API.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier (e.g., \"COSYenglish\").\r\n * @returns {string} The BCP 47 language code (e.g., \"en-US\").\r\n */\r\nexport function mapLanguageToSpeechCode(cosyLanguage) {\r\n  let speechCode;\r\n  let isFallback = false;\r\n  // Ensure cosyLanguage is a string before calling toLowerCase or other string methods\r\n  const langStr = String(cosyLanguage || '');\r\n\r\n  switch(langStr) {\r\n    case 'COSYenglish': speechCode = 'en-US'; break;\r\n    case 'COSYfrançais': speechCode = 'fr-FR'; break;\r\n    case 'COSYespañol': speechCode = 'es-ES'; break;\r\n    case 'COSYitaliano': speechCode = 'it-IT'; break;\r\n    case 'COSYdeutsch': speechCode = 'de-DE'; break;\r\n    case 'COSYportuguês': speechCode = 'pt-PT'; break;\r\n    case 'ΚΟΖΥελληνικά': speechCode = 'el-GR'; break;\r\n    case 'ТАКОЙрусский': speechCode = 'ru-RU'; break;\r\n    case 'ԾՈՍՅհայկական': speechCode = 'hy-AM'; break;\r\n    case 'COSYbrezhoneg': speechCode = 'fr-FR'; isFallback = true; break; // Breton uses French as a fallback\r\n    case 'COSYtatarça': speechCode = 'ru-RU'; isFallback = true; break;   // Tatar uses Russian as a fallback\r\n    case 'COSYbashkort': speechCode = 'ru-RU'; isFallback = true; break; // Bashkir uses Russian as a fallback\r\n    default: \r\n      console.warn(`SpeechUtils: Unknown COSYlanguage \"${langStr}\". Defaulting to en-US.`);\r\n      speechCode = 'en-US'; \r\n      isFallback = true; \r\n      break;\r\n  }\r\n  if (isFallback && langStr !== '') { // Avoid logging fallback for empty input\r\n    console.warn(`SpeechUtils: No direct speech synthesis voice for ${cosyLanguage}. Using fallback ${speechCode}.`);\r\n  }\r\n  return speechCode;\r\n}\r\n\r\n/**\r\n * Pronounces a given text using the Web Speech API.\r\n * @param {string} text - The text to pronounce.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier for the text's language.\r\n * @returns {Promise<void>} A promise that resolves when speaking starts or rejects on error/no support.\r\n */\r\nexport const pronounceText = (text, cosyLanguage) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof window === 'undefined' || !window.speechSynthesis) {\r\n      console.error('SpeechUtils: Speech Synthesis not supported by this browser or not in a browser environment.');\r\n      reject(new Error('Speech Synthesis not supported'));\r\n      return;\r\n    }\r\n\r\n    if (!text || String(text).trim() === '') {\r\n      console.warn('PronounceText: No text provided.');\r\n      // Resolve an empty promise as there's nothing to speak.\r\n      // Or reject, depending on desired behavior for empty text. For now, resolving.\r\n      resolve(); \r\n      return;\r\n    }\r\n\r\n    const speechLang = mapLanguageToSpeechCode(cosyLanguage);\r\n    const utterance = new SpeechSynthesisUtterance(String(text).trim());\r\n    utterance.lang = speechLang;\r\n    \r\n    // Cancel any ongoing speech before speaking a new one\r\n    window.speechSynthesis.cancel(); \r\n\r\n    utterance.onstart = () => {\r\n      console.log(`SpeechUtils: Speaking \"${text}\" in ${cosyLanguage} (mapped to ${speechLang})`);\r\n      resolve();\r\n    };\r\n\r\n    utterance.onerror = (event) => {\r\n      console.error('SpeechUtils: SpeechSynthesisUtterance.onerror - Error speaking:', event.error, 'for text:', text, 'lang:', speechLang);\r\n      reject(event.error instanceof Error ? event.error : new Error(String(event.error || 'Unknown speech error')));\r\n    };\r\n    \r\n    // Some browsers might not fire onstart immediately or reliably.\r\n    // Fallback: resolve after a short delay if onstart doesn't fire,\r\n    // but this is less ideal than relying on the event.\r\n    // For simplicity, we'll rely on onstart and onerror.\r\n\r\n    window.speechSynthesis.speak(utterance);\r\n  });\r\n};\r\n\r\n/**\r\n * Attempts to unlock audio playback in the browser.\r\n * Call this after a user interaction if speech synthesis isn't working.\r\n */\r\nexport const unlockAudioPlayback = () => {\r\n  if (typeof window !== 'undefined' && typeof Audio !== 'undefined') {\r\n    try {\r\n      const silentAudio = new Audio(\"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA\");\r\n      silentAudio.volume = 0;\r\n      const playPromise = silentAudio.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise.then(_ => {\r\n          console.log(\"SpeechUtils: Audio playback likely unlocked.\");\r\n        }).catch(error => {\r\n          console.warn(\"SpeechUtils: Audio unlock failed (this is common, user interaction might be needed for audio):\", error);\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.error(\"SpeechUtils: Error trying to unlock audio:\", e);\r\n    }\r\n  }\r\n};\r\n\r\n// Speech Recognition (STT) logic will be handled separately, likely in a custom hook.\r\nconsole.log('[SpeechUtils] Service loaded with TTS and language mapping.');\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext';\r\nimport { useLatinizationContext } from '../../contexts/LatinizationContext';\r\nimport useLatinization from '../../hooks/useLatinization'; // Import the main hook\r\n\r\nconst TransliterableText = ({ text, langOverride = null, as: Component = 'span', className = '', ...props }) => {\r\n    const { language: globalLanguage } = useI18n();\r\n    // Not using isLatinized or latinizableLanguageIds directly from here for decision,\r\n    // as useLatinization hook will handle it based on its context.\r\n    // We only need effectiveLang to pass to the hook.\r\n    useLatinizationContext(); // Ensure component is within context, but values not directly used here for logic\r\n\r\n    const effectiveLang = langOverride || globalLanguage;\r\n\r\n    let originalTextToDisplay = text;\r\n\r\n    // If text is a multilingual object (e.g., from blockData.title)\r\n    if (typeof text === 'object' && text !== null) {\r\n        // Prioritize the effective language, then English, then a 'default' field, then the first available.\r\n        originalTextToDisplay = text[effectiveLang] || text.COSYenglish || text.default || text[Object.keys(text)[0]] || '';\r\n        if (typeof originalTextToDisplay !== 'string') { \r\n            originalTextToDisplay = ''; // Ensure it's a string\r\n        }\r\n    } else if (typeof text !== 'string') {\r\n        originalTextToDisplay = String(text || ''); // Ensure it's a string\r\n    }\r\n    \r\n    // The useLatinization hook consumes the original text and its language identifier.\r\n    // It internally uses LatinizationContext to decide if latinization should apply.\r\n    const possiblyLatinizedText = useLatinization(originalTextToDisplay, effectiveLang);\r\n    const { isLatinized, latinizableLanguageIds } = useLatinizationContext(); // Get context again for specific check\r\n\r\n    const isEffectiveLanguageLatinizable = latinizableLanguageIds.includes(effectiveLang);\r\n    const actuallyLatinized = isLatinized && isEffectiveLanguageLatinizable && (possiblyLatinizedText !== originalTextToDisplay);\r\n    \r\n    const componentClassName = `transliterable-text ${className} ${actuallyLatinized ? 'latinized-text' : ''}`.trim();\r\n\r\n    return (\r\n        <Component className={componentClassName} {...props}>\r\n            {possiblyLatinizedText}\r\n        </Component>\r\n    );\r\n};\r\n\r\nexport default TransliterableText;\r\n","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport translations from './translationsData';\n\nconst I18nContext = createContext();\n\nexport function useI18n() {\n    return useContext(I18nContext);\n}\n\nexport function I18nProvider({ children }) {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [language, setLanguage] = useState(() => {\n        const savedLanguage = localStorage.getItem('cosyLanguage');\n        // Ensure savedLanguage is a valid key in translations, otherwise default to 'COSYenglish'\n        if (savedLanguage && translations[savedLanguage]) {\n            return savedLanguage;\n        }\n        return 'COSYenglish'; // Default to COSYenglish if no valid language is saved or \"null\" is stored\n    });\n\n    const [currentTranslations, setCurrentTranslations] = useState({});\n\n    /**\n     * This effect runs when the language changes. It updates the local storage,\n     * the current translations, and the lang attribute of the html tag.\n     */\n    useEffect(() => {\n        // language state should always be a valid key (e.g. 'COSYenglish') due to initialization logic.\n        if (translations[language]) {\n            localStorage.setItem('cosyLanguage', language);\n            setCurrentTranslations(translations[language]);\n            let langCode = language.toLowerCase();\n            if (translations[language].languageCode) {\n                langCode = translations[language].languageCode;\n            } else if (language.length > 2 && !['bashkir', 'breton', 'tatar'].includes(language)) {\n                langCode = language.substring(0, 2);\n            }\n            document.documentElement.lang = langCode;\n        } else {\n            // This case implies 'language' state is somehow invalid, or COSYenglish itself is missing.\n            console.error(`Critical: Translations for language key \"${language}\" not found. Attempting to default to COSYenglish.`);\n            if (translations.COSYenglish) {\n                setCurrentTranslations(translations.COSYenglish);\n                localStorage.setItem('cosyLanguage', 'COSYenglish');\n                document.documentElement.lang = translations.COSYenglish.languageCode || 'en';\n                if (language !== 'COSYenglish') { // Correct state if it was somehow invalid\n                    setLanguage('COSYenglish');\n                }\n            } else {\n                // Absolute fallback if COSYenglish is also missing (problem with translationsData.js)\n                setCurrentTranslations({});\n                localStorage.removeItem('cosyLanguage'); // Remove invalid stored key\n                document.documentElement.lang = 'en'; // Default doc lang\n                console.error(`CRITICAL: Default 'COSYenglish' translations not found in translationsData.js.`);\n            }\n        }\n    }, [language]);\n\n    /**\n     * Changes the language of the application.\n     * @param {string} langKey - The key of the language to change to.\n     */\n    const changeLanguage = useCallback((langKey) => {\n        if (translations && translations[langKey]) {\n            setLanguage(langKey);\n            if (location.pathname.startsWith('/study/')) {\n                navigate(`/study/${translations[langKey].languageCode}`);\n            }\n        } else {\n            console.warn(`Attempted to change to invalid language key \"${langKey}\". Reverting to COSYenglish.`);\n            setLanguage('COSYenglish'); // Fallback to a known good default\n        }\n    }, [location, navigate]);\n\n    /**\n     * Translates a key to the current language.\n     * @param {string} key - The key to translate.\n     * @param {string|object} [defaultValueOrOptions] - The default value or an options object.\n     * @param {object} [optionsOnly] - The options object.\n     * @returns {string} The translated string.\n     */\n    const t = useCallback((key, defaultValueOrOptions, optionsOnly) => {\n        let defaultValue = typeof defaultValueOrOptions === 'string' ? defaultValueOrOptions : key;\n        let options = typeof defaultValueOrOptions === 'object' && !Array.isArray(defaultValueOrOptions) ? defaultValueOrOptions : optionsOnly;\n        if (typeof optionsOnly === 'object' && typeof defaultValueOrOptions === 'string') {\n            options = optionsOnly;\n        }\n\n        let translationString;\n        // currentTranslations should always be populated (even with COSYenglish as fallback)\n        if (currentTranslations && currentTranslations[key] !== undefined) {\n            translationString = currentTranslations[key];\n        } else if (translations.COSYenglish && translations.COSYenglish[key] !== undefined) {\n            // Explicit fallback to COSYenglish if key is missing in current language\n            translationString = translations.COSYenglish[key];\n        }\n        else {\n            translationString = defaultValue;\n        }\n\n        if (options && typeof translationString === 'string') {\n            let tempString = translationString;\n            for (const placeholder in options) {\n                if (!placeholder || /^\\d+$/.test(placeholder)) continue;\n                const value = options[placeholder];\n                if (value === undefined || value === null) continue;\n                const escapedPlaceholder = placeholder.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // Corrected regex\n                try {\n                    tempString = tempString.replace(new RegExp(`{${escapedPlaceholder}}`, 'g'), String(value));\n                } catch (e) {\n                    continue;\n                }\n            }\n            translationString = tempString;\n        }\n        return translationString;\n    }, [currentTranslations]); // Removed 'language' dependency\n\n    /**\n     * Gets the translations for a specific language.\n     * @param {string} langKey - The key of the language.\n     * @param {string} translationKey - The key of the translation.\n     * @returns {object} The translations for the specified language.\n     */\n    const getTranslationsForLang = useCallback((langKey, translationKey) => {\n        if (translations && translations[langKey] && translations[langKey][translationKey] !== undefined) {\n            return translations[langKey][translationKey];\n        } else if (translations && translations.english && translations.english[translationKey] !== undefined) {\n            // Fallback to English (using standardized key 'english')\n            return translations.english[translationKey];\n        }\n        return {}; // Return empty object or specific default if key not found in target or English\n    }, []);\n\n    const popularLanguageOrder = [\n        'COSYenglish',\n        'COSYspanish',\n        'COSYfrench',\n        'COSYportuguese',\n        'COSYrussian',\n        'COSYgerman',\n        'COSYitalian',\n    ];\n\n    const sortedLanguages = Object.keys(translations)\n        .filter(langKey => langKey !== 'null' && translations[langKey])\n        .sort((a, b) => {\n            const indexA = popularLanguageOrder.indexOf(a);\n            const indexB = popularLanguageOrder.indexOf(b);\n\n            if (indexA !== -1 && indexB !== -1) {\n                return indexA - indexB;\n            }\n            if (indexA !== -1) {\n                return -1;\n            }\n            if (indexB !== -1) {\n                return 1;\n            }\n            const langA = translations[a];\n            const langB = translations[b];\n            return (langA.languageNameNative || a).localeCompare(langB.languageNameNative || b);\n        });\n\n    const sortedTranslations = {};\n    sortedLanguages.forEach(langKey => {\n        sortedTranslations[langKey] = translations[langKey];\n    });\n\n    const value = {\n        language, // This can be null now\n        currentLangKey: language,\n        changeLanguage,\n        t,\n        allTranslations: sortedTranslations,\n        getTranslationsForLang\n    };\n\n    return (\n        <I18nContext.Provider value={value}>\n            {children}\n        </I18nContext.Provider>\n    );\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\r\n\r\n// This list should be the single source of truth for which languages can be latinized.\r\n// It should align with languages having transliteration rules in transliteration.js\r\n// and ideally use keys consistent with translationsData.js for easier management.\r\nexport const LATINIZABLE_LANGUAGE_IDS = [\r\n    'COSYgreek',    // Greek\r\n    'COSYrussian',  // Russian\r\n    'COSYarmenian', // Armenian\r\n    'COSYtatar',    // Tatar\r\n    'COSYbachkir'   // Bashkir\r\n];\r\n\r\nconst LatinizationContext = createContext();\r\n\r\nexport const useLatinizationContext = () => {\r\n  const context = useContext(LatinizationContext);\r\n  if (!context) {\r\n    throw new Error('useLatinizationContext must be used within a LatinizationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LatinizationProvider = ({ children }) => {\r\n  const [isLatinized, setIsLatinized] = useState(() => {\r\n    // Initialize state from localStorage if available\r\n    const storedState = localStorage.getItem('latinizeStateReact');\r\n    return storedState ? JSON.parse(storedState) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Persist state to localStorage whenever it changes\r\n    localStorage.setItem('latinizeStateReact', JSON.stringify(isLatinized));\r\n  }, [isLatinized]);\r\n\r\n  const toggleLatinization = useCallback(() => {\r\n    setIsLatinized(prev => !prev);\r\n  }, []);\r\n\r\n  const value = {\r\n    isLatinized,\r\n    toggleLatinization,\r\n    latinizableLanguageIds: LATINIZABLE_LANGUAGE_IDS, // Provide the list through context\r\n  };\r\n\r\n  return (\r\n    <LatinizationContext.Provider value={value}>\r\n      {children}\r\n    </LatinizationContext.Provider>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\nimport { useLatinizationContext } from '../contexts/LatinizationContext';\r\nimport { getLatinization as utilGetLatinization } from '../utils/transliteration'; // Corrected import path\r\n\r\n/**\r\n * Custom hook to get transliterated text based on LatinizationContext.\r\n * @param {string} originalText The original text to potentially transliterate.\r\n * @param {string} textLanguageIdentifier The language identifier for the text (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The transliterated text if latinization is active and applicable, otherwise original text.\r\n */\r\nconst useLatinization = (originalText, textLanguageIdentifier) => {\r\n  const { isLatinized, latinizableLanguageIds } = useLatinizationContext();\r\n\r\n  const displayText = useMemo(() => {\r\n    if (!isLatinized || !originalText || !textLanguageIdentifier) {\r\n      return originalText;\r\n    }\r\n\r\n    // Check if the text's language is in the list of latinizable languages from the context\r\n    // This logic might need to be more robust if languageIdentifier formats vary greatly.\r\n    // For now, it relies on the context's latinizableLanguageIds being the COSY-style IDs.\r\n    const isTextLanguageLatinizable = latinizableLanguageIds.includes(textLanguageIdentifier);\r\n\r\n    // The previous check was more complex:\r\n    // const isTextLanguageLatinizable = latinizableLanguageIds.some(id =>\r\n    //   textLanguageIdentifier.toLowerCase().includes(id.toLowerCase()) ||\r\n    //   (id === 'ΚΟΖΥελληνικά' && textLanguageIdentifier.toLowerCase().includes('greek')) ||\r\n    //   (id === 'ТАКОЙрусский' && textLanguageIdentifier.toLowerCase().includes('russian')) ||\r\n    //   (id === 'ԾՈՍՅհայկական' && textLanguageIdentifier.toLowerCase().includes('armenian'))\r\n    // );\r\n    // Reverting to simpler check based on context providing the exact IDs.\r\n    // If textLanguageIdentifier can be 'russian' instead of 'ТАКОЙрусский', the old logic was better.\r\n    // For now, assuming textLanguageIdentifier will be the COSY ID from the data.\r\n\r\n    if (isTextLanguageLatinizable) {\r\n      return utilGetLatinization(originalText, textLanguageIdentifier);\r\n    }\r\n\r\n    return originalText;\r\n  }, [originalText, textLanguageIdentifier, isLatinized, latinizableLanguageIds]);\r\n\r\n  return displayText;\r\n};\r\n\r\nexport default useLatinization;\r\n","// frontend/src/utils/transliteration.js\r\n\r\n// Function to latinize Russian text\r\nfunction latinizeRussian(text) {\r\n  const russianToLatinMap = {\r\n    'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V', 'в': 'v',\r\n    'Г': 'G', 'г': 'g', 'Д': 'D', 'д': 'd', 'Е': 'E', 'е': 'e',\r\n    'Ё': 'YO', 'ё': 'yo', 'Ж': 'ZH', 'ж': 'zh', 'З': 'Z', 'з': 'z',\r\n    'И': 'I', 'и': 'i', 'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k',\r\n    'Л': 'L', 'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n',\r\n    'О': 'O', 'о': 'o', 'П': 'P', 'п': 'p', 'Р': 'R', 'р': 'r',\r\n    'С': 'S', 'с': 's', 'Т': 'T', 'т': 't', 'У': 'U', 'у': 'u',\r\n    'Ф': 'F', 'ф': 'f', 'Х': 'KH', 'х': 'kh', 'Ц': 'TS', 'ц': 'ts',\r\n    'Ч': 'CH', 'ч': 'ch', 'Ш': 'SH', 'ш': 'sh', 'Щ': 'SHCH', 'щ': 'shch',\r\n    'Ъ': '', 'ъ': '', // Hard sign often omitted or handled by context in some systems\r\n    'Ы': 'Y', 'ы': 'y',\r\n    'Ь': '', 'ь': '', // Soft sign often omitted or handled by context\r\n    'Э': 'E', 'э': 'e', 'Ю': 'YU', 'ю': 'yu', 'Я': 'YA', 'я': 'ya'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += russianToLatinMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Armenian text\r\nfunction latinizeArmenian(text) {\r\n  const simplerArmenianMap = {\r\n    'Ա': 'A', 'Բ': 'B', 'Գ': 'G', 'Դ': 'D', 'Ե': 'YE', 'Զ': 'Z', 'Է': 'E', 'Ը': 'E',\r\n    'Թ': 'T\\'', 'Ժ': 'ZH', 'Ի': 'I', 'Լ': 'L', 'Խ': 'KH', 'Ծ': 'TS', 'Կ': 'K', 'Հ': 'H',\r\n    'Ձ': 'DZ', 'Ղ': 'GH', 'Ճ': 'CH', 'Մ': 'M', 'Յ': 'Y', 'Ն': 'N', 'Շ': 'SH', 'Ո': 'VO',\r\n    'Չ': 'CH\\'', 'Պ': 'P', 'Ջ': 'J', 'Ռ': 'R', 'Ս': 'S', 'Վ': 'V', 'Տ': 'T', 'Ր': 'R',\r\n    'Ց': 'TS\\'', 'Ւ': 'V', 'Փ': 'P\\'', 'Ք': 'K\\'', 'Օ': 'O', 'Ֆ': 'F',\r\n    'ա': 'a', 'բ': 'b', 'գ': 'g', 'դ': 'd', 'ե': 'ye', 'զ': 'z', 'է': 'e', 'ը': 'e',\r\n    'թ': 't\\'', 'ժ': 'zh', 'ի': 'i', 'լ': 'l', 'խ': 'kh', 'ծ': 'ts', 'կ': 'k', 'հ': 'h',\r\n    'ձ': 'dz', 'ղ': 'gh', 'ճ': 'ch', 'մ': 'm', 'յ': 'y', 'ն': 'n', 'շ': 'sh', 'ո': 'vo',\r\n    'չ': 'ch\\'', 'պ': 'p', 'ջ': 'j', 'ռ': 'r', 'ս': 's', 'վ': 'v', 'տ': 't', 'ր': 'r',\r\n    'ց': 'ts\\'', 'ւ': 'v', 'փ': 'p\\'', 'ք': 'k\\'', 'օ': 'o', 'ֆ': 'f',\r\n    'և': 'ev'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += simplerArmenianMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Greek text\r\nfunction latinizeGreek(text) {\r\n  const greekToLatinMap = {\r\n    // Uppercase\r\n    'Α': 'A', 'Β': 'V', 'Γ': 'G', 'Δ': 'D', 'Ε': 'E', 'Ζ': 'Z', 'Η': 'I', 'Θ': 'TH',\r\n    'Ι': 'I', 'Κ': 'K', 'Λ': 'L', 'Μ': 'M', 'Ν': 'N', 'Ξ': 'X', 'Ο': 'O', 'Π': 'P',\r\n    'Ρ': 'R', 'Σ': 'S', 'Τ': 'T', 'Υ': 'Y', 'Φ': 'F', 'Χ': 'CH', 'Ψ': 'PS', 'Ω': 'O',\r\n    // Lowercase\r\n    'α': 'a', 'β': 'v', 'γ': 'g', 'δ': 'd', 'ε': 'e', 'ζ': 'z', 'η': 'i', 'θ': 'th',\r\n    'ι': 'i', 'κ': 'k', 'λ': 'l', 'μ': 'm', 'ν': 'n', 'ξ': 'x', 'ο': 'o', 'π': 'p',\r\n    'ρ': 'r', 'σ': 's', 'ς': 's', 'τ': 't', 'υ': 'y', 'φ': 'f', 'χ': 'ch', 'ψ': 'ps', 'ω': 'o',\r\n    // Accented Uppercase\r\n    'Ά': 'A', 'Έ': 'E', 'Ή': 'I', 'Ί': 'I', 'Ό': 'O', 'Ύ': 'Y', 'Ώ': 'O',\r\n    // Accented Lowercase\r\n    'ά': 'a', 'έ': 'e', 'ή': 'i', 'ί': 'i', 'ό': 'o', 'ύ': 'y', 'ώ': 'o',\r\n    // Lowercase with diaeresis\r\n    'ϊ': 'i', 'ϋ': 'y',\r\n    // Accented with diaeresis\r\n    'ΐ': 'i', 'ΰ': 'y',\r\n    // Digraphs\r\n    'αι': 'ai', 'ει': 'ei', 'οι': 'oi', 'ου': 'ou', 'γγ': 'ng', 'γκ': 'gk', 'γχ': 'nch', 'τσ': 'ts',\r\n    'μπ': 'b', 'ντ': 'd',\r\n    // Uppercase Digraphs\r\n    'ΑΙ': 'AI', 'ΕΙ': 'EI', 'ΟΙ': 'OI', 'ΟΥ': 'OU', 'ΓΓ': 'NG', 'ΓΚ': 'GK', 'ΓΧ': 'NCH', 'ΤΣ': 'TS',\r\n    'ΜΠ': 'B', 'ΝΤ': 'D',\r\n    // Accented Digraphs\r\n    'άι': 'ai', 'έι': 'ei', 'όι': 'oi', 'ού': 'ou'\r\n  };\r\n\r\n  let latinizedText = \"\";\r\n  let i = 0;\r\n  while (i < text.length) {\r\n    let foundDigraph = false;\r\n    // Check for 2-character digraphs\r\n    if (i + 1 < text.length) {\r\n      const digraph = text.substring(i, i + 2);\r\n      if (greekToLatinMap.hasOwnProperty(digraph)) {\r\n        latinizedText += greekToLatinMap[digraph];\r\n        i += 2;\r\n        foundDigraph = true;\r\n      }\r\n    }\r\n    \r\n    if (!foundDigraph) {\r\n      const char = text[i];\r\n      if (greekToLatinMap.hasOwnProperty(char)) {\r\n        latinizedText += greekToLatinMap[char];\r\n      } else {\r\n        latinizedText += char; // Append original character if not in map\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Add other specific latinization functions here if needed (e.g., Tatar, Bashkir)\r\n// For now, they will fall through in getLatinization\r\n\r\n/**\r\n * Main latinization dispatcher function.\r\n * @param {string} text - The text to latinize.\r\n * @param {string} languageIdentifier - The COSYlanguages internal code (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The latinized text or original text if no specific latinizer is found.\r\n */\r\nexport function getLatinization(text, languageIdentifier) {\r\n  if (!text || typeof text.trim !== 'function' || text.trim() === '') {\r\n    return text;\r\n  }\r\n\r\n  const normalizedIdentifier = (languageIdentifier || '').toLowerCase();\r\n\r\n  if (normalizedIdentifier.includes('русский') || normalizedIdentifier.includes('russian') || languageIdentifier === 'ТАКОЙрусский') {\r\n    return latinizeRussian(text);\r\n  } else if (normalizedIdentifier.includes('ελληνικά') || normalizedIdentifier.includes('greek') || languageIdentifier === 'ΚΟΖΥελληνικά') {\r\n    return latinizeGreek(text);\r\n  } else if (normalizedIdentifier.includes('հայկական') || normalizedIdentifier.includes('armenian') || languageIdentifier === 'ԾՈՍՅհայկական') {\r\n    return latinizeArmenian(text);\r\n  }\r\n  // Add more language conditions here:\r\n  // else if (languageIdentifier === 'COSYtatarça') { return latinizeTatar(text); }\r\n  // else if (languageIdentifier === 'COSYbashkort') { return latinizeBashkir(text); }\r\n  \r\n  return text; // Return original text if no specific latinizer matches\r\n}\r\n","// frontend/src/utils/exerciseDataService.js\n\n/**\n * Generic function to fetch JSON data from a given file path.\n * Assumes paths are relative to the public folder or served from the root.\n * @param {string} filePath - The path to the JSON file.\n * @returns {Promise<{data: any, error: string|null, errorType: string|null}>}\n */\nasync function fetchJsonData(filePath) {\n  try {\n    // Prepend PUBLIC_URL to ensure correct pathing, especially in production builds or subfolder deployments.\n    // filePath is expected to start with a leading slash like '/data/...'\n    const fullPath = `${process.env.PUBLIC_URL || ''}${filePath}`;\n    const response = await fetch(fullPath);\n    if (response.ok) {\n      try {\n        const data = await response.json();\n        return { data, error: null, errorType: null };\n      } catch (jsonError) {\n        console.error(`Error parsing JSON from ${filePath}:`, jsonError);\n        return { data: null, error: 'Invalid JSON format', errorType: 'jsonError' };\n      }\n    } else {\n      const errorContext = `HTTP error ${response.status} while fetching ${filePath}`;\n      console.error(errorContext);\n      if (response.status === 404) {\n        return { data: null, error: `File not found: ${filePath}`, errorType: 'fileNotFound' };\n      }\n      return { data: null, error: `Failed to load data: ${errorContext}`, errorType: 'httpError' };\n    }\n  } catch (networkError) {\n    console.error(`Network error or other exception while loading data from ${filePath}:`, networkError);\n    return { data: null, error: `Network error: ${networkError.message}`, errorType: 'networkError' };\n  }\n}\n\n// Corrected langFileMap to align with keys from translationsData.js / I18nContext\nconst langFileMap = {\n  'COSYenglish': 'en',\n  'COSYfrench': 'fr',\n  'COSYespañol': 'es',\n  'COSYitalian': 'it',\n  'COSYdeutsch': 'de',\n  'COSYportugese': 'pt',\n  'COSYgreek': 'el',\n  'COSYrussian': 'ru',\n  'COSYarmenian': 'hy',\n  'COSYbrezhoneg': 'br',\n  'COSYtatar': 'tt',\n  'COSYbachkir': 'ba'\n};\n\nexport function getLanguageFileKey(languageIdentifier) {\n  return langFileMap[languageIdentifier] || 'english'; // Default to English\n}\n\n/**\n * Processes fetched data based on selected day(s).\n * @param {object} allData - The entire data object fetched from JSON.\n * @param {string|string[]} days - The selected day or array of days.\n * @returns {Array|Object} - The filtered data for the selected day(s).\n */\nfunction filterDataByDays(allData, days) {\n  if (!allData) return Array.isArray(days) ? [] : {}; // Return empty array for multiple days, object for single/opposites\n\n  let dayData;\n  if (Array.isArray(days)) {\n    dayData = [];\n    days.forEach(d => {\n      if (allData[d]) dayData = dayData.concat(allData[d]);\n    });\n  } else { // Single day or data structure not an array (like opposites)\n    if (typeof days === 'string' || typeof days === 'number') { // Ensure 'days' is a valid key\n        dayData = allData[days] || (typeof allData === 'object' && !Array.isArray(allData) ? {} : []);\n    } else { // If days is not a string/number (e.g. undefined, null), return all data or empty if not applicable\n        dayData = allData; // This might be the case for data not structured by day, like images.json root\n    }\n  }\n  return dayData;\n}\n\n\nexport async function loadVocabularyData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/vocabulary/words/${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: [], error, errorType }; // Ensure consistent error structure\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadImageData(languageIdentifier, days) {\n  const filePath = `/data/vocabulary/images/images.json`; // Single file for all image metadata\n  const { data: allImageData, error, errorType } = await fetchJsonData(filePath);\n\n  if (error) return { data: [], error, errorType };\n\n  const imageDataForDays = filterDataByDays(allImageData, days);\n\n  // Filter images that have a translation for the current language\n  const filteredImages = Array.isArray(imageDataForDays)\n    ? imageDataForDays.filter(img => img.translations && img.translations[languageIdentifier])\n    : []; // If not an array (e.g. error or unexpected structure), return empty\n\n  return { data: filteredImages, error: null, errorType: null };\n}\n\nexport async function loadOppositesData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/vocabulary/opposites/${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: {}, error, errorType };\n  const dayData = filterDataByDays(data, days);\n  if (Array.isArray(days) && Array.isArray(dayData)) {\n    const mergedOpposites = dayData.reduce((acc, dayObj) => ({ ...acc, ...dayObj }), {});\n    return { data: mergedOpposites, error: null, errorType: null };\n  }\n  return { data: dayData, error: null, errorType: null };\n}\n\nexport async function loadGenderGrammarData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/grammar/gender/grammar_gender_${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: [], error, errorType };\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadPossessivesData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filenameLangKey = langKey === 'french' ? 'francais' : langKey;\n  const filePath = `/data/grammar/possessives/${filenameLangKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: {}, error, errorType };\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadVerbGrammarData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/grammar/verbs/grammar_verbs_${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: [], error, errorType };\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadReadingData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/reading/reading_${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: [], error, errorType };\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadSpeakingPromptsData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/speaking/question/question_${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  if (error) return { data: [], error, errorType };\n  return { data: filterDataByDays(data, days), error: null, errorType: null };\n}\n\nexport async function loadWritingPromptsData(languageIdentifier, days) {\n  const langKey = getLanguageFileKey(languageIdentifier);\n  const filePath = `/data/writing/story_prompts_${langKey}.json`;\n  const { data, error, errorType } = await fetchJsonData(filePath);\n  const defaultData = { what_happens_next: [], what_happened_before: [] };\n  if (error) return { data: defaultData, error, errorType };\n  const dayFilteredData = filterDataByDays(data, days);\n  if (Array.isArray(days) && Array.isArray(dayFilteredData)) {\n    const mergedPrompts = { what_happens_next: [], what_happened_before: [] };\n    dayFilteredData.forEach(dayObj => {\n      if (dayObj && dayObj.what_happens_next) mergedPrompts.what_happens_next.push(...dayObj.what_happens_next);\n      if (dayObj && dayObj.what_happened_before) mergedPrompts.what_happened_before.push(...dayObj.what_happened_before);\n    });\n    return { data: mergedPrompts, error: null, errorType: null };\n  }\n  return {\n    data: (dayFilteredData && typeof dayFilteredData === 'object' && !Array.isArray(dayFilteredData)) ? dayFilteredData : defaultData,\n    error: null,\n    errorType: null\n  };\n}\n\nexport async function loadSentenceUnscrambleData(languageIdentifier) {\n  const filePath = `/data/exercises/sentenceUnscramble.json`;\n  const { data: allLanguageData, error, errorType } = await fetchJsonData(filePath);\n  if (error) {\n    return { data: [], error, errorType };\n  }\n  if (allLanguageData && allLanguageData[languageIdentifier]) {\n    return { data: allLanguageData[languageIdentifier], error: null, errorType: null };\n  } else {\n    console.warn(`Sentence unscramble data for language ${languageIdentifier} not found in ${filePath}.`);\n    return { data: [], error: `No sentence unscramble data for ${languageIdentifier}.`, errorType: 'dataNotFound' };\n  }\n}\n\n/**\n * Loads Fill in the Blanks exercise data for a given language.\n * Data is expected to be an object where keys are language codes (e.g., \"COSYfrench\")\n * and values are arrays of exercise items for that language.\n * @param {string} languageIdentifier - The language identifier (e.g., \"COSYfrench\").\n * @returns {Promise<{data: Array, error: string|null, errorType: string|null}>}\n */\nexport async function loadFillInTheBlanksData(languageIdentifier) {\n  const filePath = `/data/exercises/fillInTheBlanks.json`;\n  const { data: allLanguageData, error, errorType } = await fetchJsonData(filePath);\n\n  if (error) {\n    return { data: [], error, errorType };\n  }\n\n  if (allLanguageData && allLanguageData[languageIdentifier]) {\n    return { data: allLanguageData[languageIdentifier], error: null, errorType: null };\n  } else {\n    console.warn(`Fill in the Blanks data for language ${languageIdentifier} not found in ${filePath}.`);\n    return { data: [], error: `No Fill in the Blanks data for ${languageIdentifier}.`, errorType: 'dataNotFound' };\n  }\n}\n\nexport { fetchJsonData };\n\nconsole.log('[ExerciseDataService] Service loaded.');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// src/utils/vocabularyService.js\n\n/**\n * @module vocabularyService\n * @description Service for loading and managing vocabulary data.\n * Vocabulary files are expected to be in: public/data/vocabulary/dictionary/{lang}/{level}.js\n * Each .js file should export a const named 'vocabulary' which is an object,\n * where keys are themes and values are arrays of vocabulary items.\n * Example el/a0.js:\n * export const vocabulary = {\n *   \"Greetings\": [ { id: \"greet001\", term: \"Γεια\", ... } ],\n *   \"Numbers\": [ { id: \"num001\", term: \"Ένα\", ... } ]\n * };\n */\n\nexport const CEFR_LEVELS = ['a0', 'a1', 'a2', 'b1', 'b2', 'c1', 'c2'];\nconst vocabularyCache = new Map(); // Cache to store loaded vocabulary data: Map<\"lang-level\", themedVocabularyObject>\n\n/**\n * Loads vocabulary data for a specific language and CEFR level.\n * Uses dynamic import() to load the .js vocabulary files.\n * Handles caching to avoid redundant loads.\n *\n * @param {string} lang - The language code (e.g., 'el', 'en', 'fr').\n * @param {string} level - The CEFR level (e.g., 'a0', 'a1').\n * @returns {Promise<object|null>} A promise that resolves to the themed vocabulary object \n *                                (e.g., { \"Theme1\": [item1, item2], \"Theme2\": [...] }) \n *                                or null if loading fails or file doesn't exist.\n * @throws {Error} If language or level is not provided.\n */\nexport async function loadVocabularyForLanguageLevel(lang, level) {\n    if (!lang || !level) {\n        console.error('VocabularyService: Language and level are required.');\n        throw new Error('Language and level are required.');\n    }\n\n    const langLower = lang.toLowerCase();\n    const levelLower = level.toLowerCase();\n    const cacheKey = `${langLower}-${levelLower}`;\n\n    if (vocabularyCache.has(cacheKey)) {\n        // console.log(`VocabularyService: Returning cached data for ${langLower} ${levelLower}`);\n        return vocabularyCache.get(cacheKey);\n    }\n\n    // console.log(`VocabularyService: Attempting to load vocabulary for ${langLower} ${levelLower}`);\n\n    // First, try to fetch .json file\n    try {\n        const jsonResponse = await fetch(`/data/vocabulary/dictionary/${langLower}/${levelLower}.json`);\n        if (jsonResponse.ok) {\n            const jsonData = await jsonResponse.json();\n            // console.log(`VocabularyService: Successfully loaded JSON data for ${langLower} ${levelLower}`);\n            vocabularyCache.set(cacheKey, jsonData);\n            return jsonData;\n        } else {\n            // console.warn(`VocabularyService: Failed to fetch .json for ${langLower} ${levelLower}. Status: ${jsonResponse.status}. Trying .js...`);\n        }\n    } catch (jsonError) {\n        // console.warn(`VocabularyService: Error fetching or parsing .json for ${langLower} ${levelLower} (${jsonError.message}). Trying .js...`);\n    }\n\n    // If .json failed or not found, try to fetch and parse .js file\n    try {\n        const jsResponse = await fetch(`/data/vocabulary/dictionary/${langLower}/${levelLower}.js`);\n        if (jsResponse.ok) {\n            const jsText = await jsResponse.text();\n            // Attempt to parse the .js file content\n            // Assuming format: export const vocabulary = { ... }; (optional semicolon)\n            let parsableText = jsText.replace(/^\\s*export\\s+const\\s+vocabulary\\s*=\\s*/, '');\n            // Remove trailing semicolon if present, and any potential comments after it\n            parsableText = parsableText.replace(/;\\s*(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)?\\s*$/, '');\n\n            try {\n                const vocabularyData = JSON.parse(parsableText);\n                // console.log(`VocabularyService: Successfully fetched and parsed JS data for ${langLower} ${levelLower}`);\n                vocabularyCache.set(cacheKey, vocabularyData);\n                return vocabularyData;\n            } catch (parseError) {\n                // console.error(`VocabularyService: Failed to parse JS data for ${langLower} ${levelLower}. Content might not be valid JSON after stripping export. Error: ${parseError.message}`);\n                // console.error('Problematic text (first 500 chars):', parsableText.substring(0, 500));\n            }\n        } else {\n            // console.warn(`VocabularyService: Failed to fetch .js for ${langLower} ${levelLower}. Status: ${jsResponse.status}`);\n        }\n    } catch (jsFetchError) {\n        // console.warn(`VocabularyService: Error fetching .js for ${langLower} ${levelLower} (${jsFetchError.message})`);\n    }\n\n    // If both .json and .js attempts fail\n    // console.warn(`VocabularyService: All attempts to load vocabulary for ${langLower} ${levelLower} failed.`);\n    vocabularyCache.set(cacheKey, null); // Cache null if all attempts fail\n    return null;\n}\n\n/**\n * Retrieves all vocabulary items for a given language and level, flattened into a single list.\n * Each item in the list is augmented with 'level' and 'theme' properties.\n *\n * @param {string} lang - The language code.\n * @param {string} level - The CEFR level.\n * @returns {Promise<Array<object>>} A promise that resolves to a flat array of vocabulary items.\n *                                    Returns an empty array if loading fails or no data.\n */\nexport async function getAllVocabularyAsFlatList(lang, level) {\n    const themedVocabulary = await loadVocabularyForLanguageLevel(lang, level);\n    if (!themedVocabulary) {\n        return [];\n    }\n\n    const flatList = [];\n    for (const theme in themedVocabulary) {\n        if (Object.hasOwnProperty.call(themedVocabulary, theme)) {\n            const items = themedVocabulary[theme];\n            if (Array.isArray(items)) {\n                items.forEach(item => {\n                    flatList.push({\n                        ...item,\n                        level: item.level || level.toUpperCase(), // Ensure level is present\n                        theme: item.theme || theme, // Ensure theme is present\n                    });\n                });\n            }\n        }\n    }\n    return flatList;\n}\n\n/**\n * Retrieves all vocabulary items for a specific theme within a given language and level.\n *\n * @param {string} lang - The language code.\n * @param {string} level - The CEFR level.\n * @param {string} themeName - The name of the theme.\n * @returns {Promise<Array<object>|null>} A promise that resolves to an array of vocabulary items for the theme,\n *                                         or null if the theme or level data is not found.\n */\nexport async function getVocabularyByTheme(lang, level, themeName) {\n    const themedVocabulary = await loadVocabularyForLanguageLevel(lang, level);\n    if (!themedVocabulary || !themedVocabulary[themeName]) {\n        // console.warn(`VocabularyService: Theme \"${themeName}\" not found for ${lang} ${level}.`);\n        return null;\n    }\n    return themedVocabulary[themeName].map(item => ({\n        ...item,\n        level: item.level || level.toUpperCase(),\n        theme: item.theme || themeName,\n    }));\n}\n\n/**\n * Loads and flattens vocabulary for all CEFR levels for a given language.\n * Primarily intended for tools like a comprehensive dictionary.\n *\n * @param {string} lang - The language code.\n * @returns {Promise<Array<object>>} A promise that resolves to a flat array of all vocabulary items\n *                                    for the language across all levels.\n */\nexport async function loadAllLevelsForLanguageAsFlatList(lang) {\n    let combinedVocabulary = [];\n    // console.log(`VocabularyService: Loading all levels for language ${lang}`);\n    const levelsToTry = [...CEFR_LEVELS, 'verbs']; // Add 'verbs' to the list of things to try\n\n    for (const level of levelsToTry) {\n        try {\n            // console.log(`VocabularyService: - Attempting level/file ${level} for ${lang}`);\n            const levelVocab = await getAllVocabularyAsFlatList(lang, level);\n            if (levelVocab && levelVocab.length > 0) {\n                combinedVocabulary = [...combinedVocabulary, ...levelVocab];\n                // console.log(`VocabularyService: - Loaded ${levelVocab.length} items for ${lang} ${level}. Total so far: ${combinedVocabulary.length}`);\n            } else {\n                // This is expected if a file for a level doesn't exist, so no warning is needed here.\n                // console.log(`VocabularyService: - No vocabulary found for ${lang} ${level}.`);\n            }\n        } catch (error) {\n            // Errors are logged by the called functions, so just a warning here is sufficient.\n            // console.warn(`VocabularyService: Error processing level ${level} for language ${lang}: ${error.message}`);\n        }\n    }\n\n    // console.log(`VocabularyService: Finished loading all levels and special files for ${lang}. Total items: ${combinedVocabulary.length}`);\n    return combinedVocabulary;\n}\n\n/**\n * Clears the vocabulary cache.\n */\nexport function clearVocabularyCache() {\n    vocabularyCache.clear();\n    // console.log(\"VocabularyService: Cache cleared.\");\n}\n\n// Example Usage (for testing in browser console or if run directly with a test harness)\n/*\nasync function testService() {\n    console.log(\"Testing Vocabulary Service...\");\n\n    try {\n        console.log(\"\\\\n--- Loading Greek A0 ---\");\n        const grA0 = await loadVocabularyForLanguageLevel('el', 'a0');\n        if (grA0) console.log(\"Greek A0 Themed:\", JSON.stringify(Object.keys(grA0), null, 2));\n        \n        console.log(\"\\\\n--- Loading Greek A0 (cached) ---\");\n        await loadVocabularyForLanguageLevel('el', 'a0');\n\n\n        console.log(\"\\\\n--- Loading Greek A1 Flat List ---\");\n        const grA1Flat = await getAllVocabularyAsFlatList('el', 'a1');\n        if (grA1Flat.length > 0) console.log(\"Greek A1 Flat (first 2):\", JSON.stringify(grA1Flat.slice(0, 2), null, 2));\n        else console.log(\"Greek A1 Flat: No items found or error.\");\n\n        console.log(\"\\\\n--- Loading Greek A0, Theme 'Greetings' ---\");\n        const grA0Greetings = await getVocabularyByTheme('el', 'a0', 'Greetings');\n        if (grA0Greetings) console.log(\"Greek A0 Greetings:\", JSON.stringify(grA0Greetings, null, 2));\n        else console.log(\"Greek A0 Greetings: Theme not found or error.\");\n        \n        console.log(\"\\\\n--- Loading all levels for Greek (flat list) ---\");\n        const allGreek = await loadAllLevelsForLanguageAsFlatList('el');\n        console.log(`Total Greek vocabulary items loaded: ${allGreek.length}`);\n        if (allGreek.length > 0) console.log(\"Sample all Greek (first 2):\", JSON.stringify(allGreek.slice(0,2), null, 2));\n\n        console.log(\"\\\\n--- Loading non-existent level (el, c5) ---\");\n        const elC5 = await loadVocabularyForLanguageLevel('el', 'c5');\n        if (!elC5) console.log(\"Correctly returned null for el-c5\");\n\n        console.log(\"\\\\n--- Clearing cache ---\");\n        clearVocabularyCache();\n        const grA0_after_clear = await loadVocabularyForLanguageLevel('el', 'a0'); // Should re-fetch\n        if (grA0_after_clear) console.log(\"Greek A0 Themed (after clear):\", !!grA0_after_clear);\n\n\n    } catch (error) {\n        console.error(\"Error during service test:\", error);\n    }\n}\n\n// testService(); // Uncomment to run test in browser console after ensuring files exist\n*/\n"],"names":["pronounceText","text","cosyLanguage","Promise","resolve","reject","window","speechSynthesis","console","error","Error","String","trim","warn","speechLang","speechCode","isFallback","langStr","mapLanguageToSpeechCode","utterance","SpeechSynthesisUtterance","lang","cancel","onstart","log","onerror","event","speak","module","exports","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","_ref","langOverride","as","Component","className","language","globalLanguage","useI18n","useLatinizationContext","effectiveLang","originalTextToDisplay","COSYenglish","default","keys","possiblyLatinizedText","useLatinization","isLatinized","latinizableLanguageIds","isEffectiveLanguageLatinizable","includes","componentClassName","_jsx","children","I18nContext","createContext","useContext","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","arguments","length","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","join","S","T","_status","_result","then","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","map","forEach","apply","count","toArray","only","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","LatinizationContext","originalText","textLanguageIdentifier","languageIdentifier","normalizedIdentifier","toLowerCase","russianToLatinMap","latinizedText","i","char","latinizeRussian","greekToLatinMap","foundDigraph","digraph","substring","latinizeGreek","simplerArmenianMap","latinizeArmenian","utilGetLatinization","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","defineProperty","enumerable","get","obj","prop","Map"],"sourceRoot":""}