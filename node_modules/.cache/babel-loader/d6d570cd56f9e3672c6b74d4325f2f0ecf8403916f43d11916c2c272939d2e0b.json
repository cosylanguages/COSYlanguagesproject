{"ast":null,"code":"import _objectSpread from\"/workspaces/COSYlanguagesproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useRef}from'react';import{loadOppositesData}from'../../../../utils/exerciseDataService';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{shuffleArray}from'../../../../utils/arrayUtils';import{useProgress}from'../../../../contexts/ProgressContext';import{normalizeString}from'../../../../utils/stringUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MatchOppositesExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[pairs,setPairs]=useState([]);const[wordsColumn,setWordsColumn]=useState([]);const[oppositesColumn,setOppositesColumn]=useState([]);const[selectedWord,setSelectedWord]=useState(null);// { value: string, element: HTMLElement }\nconst[selectedOpposite,setSelectedOpposite]=useState(null);// { value: string, element: HTMLElement }\nconst[matchedItems,setMatchedItems]=useState({});// { [itemValue]: true }\nconst[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[numCorrectMatches,setNumCorrectMatches]=useState(0);const[isRevealed,setIsRevealed]=useState(false);const[lines,setLines]=useState([]);// For drawing lines between matched items\nconst{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const progress=useProgress();const itemRefs=useRef({});// To store refs for each matchable item\nconst columnsContainerRef=useRef(null);// Ref for the div containing both columns\nconst NUM_PAIRS_TO_DISPLAY=4;const setupExercise=useCallback(async()=>{setIsLoading(true);setError(null);setFeedback({message:'',type:''});setSelectedWord(null);setSelectedOpposite(null);setMatchedItems({});setNumCorrectMatches(0);setIsRevealed(false);setLines([]);// Clear lines\nitemRefs.current={};// Clear old refs\ntry{const{data:oppositesMap,error:fetchError}=await loadOppositesData(language,days);if(fetchError){throw new Error(fetchError.message||fetchError.error||'Failed to load opposites data.');}if(!oppositesMap||Object.keys(oppositesMap).length<NUM_PAIRS_TO_DISPLAY/2){setError(\"Not enough opposites data (found \".concat(Object.keys(oppositesMap).length,\") for this exercise. Need at least \").concat(NUM_PAIRS_TO_DISPLAY/2,\" base pairs.\"));setPairs([]);setIsLoading(false);return;}const allPossiblePairs=Object.entries(oppositesMap).map(_ref2=>{let[word,opposite]=_ref2;return{word,opposite};});const shuffledPossiblePairs=shuffleArray(allPossiblePairs);const selectedPairs=shuffledPossiblePairs.slice(0,NUM_PAIRS_TO_DISPLAY);if(selectedPairs.length<1){setError('Could not select enough unique pairs for the exercise.');setPairs([]);setIsLoading(false);return;}setPairs(selectedPairs);setWordsColumn(shuffleArray(selectedPairs.map(p=>p.word)));setOppositesColumn(shuffleArray(selectedPairs.map(p=>p.opposite)));}catch(err){console.error(\"MatchOppositesExercise - Error setting up exercise:\",err);setError(err.message||'An unexpected error occurred.');setPairs([]);}finally{setIsLoading(false);}},[language,days]);useEffect(()=>{if(language&&days&&days.length>0){setupExercise();}else{setIsLoading(false);setError(\"Please select a language and day(s).\");}},[setupExercise,exerciseKey,language,days]);const handleItemClick=(itemValue,type,event)=>{if(matchedItems[itemValue]||isRevealed)return;const currentSelection={value:itemValue,element:event.target};if(type==='word'){if(selectedWord&&selectedWord.element===event.target){setSelectedWord(null);// Deselect if clicking the same selected item\n// event.target.classList.remove('selected'); // classList managed by style logic\nreturn;}// if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('selected');\nsetSelectedWord(currentSelection);// event.target.classList.add('selected');\n}else if(type==='opposite'){if(selectedOpposite&&selectedOpposite.element===event.target){setSelectedOpposite(null);// Deselect\n// event.target.classList.remove('selected');\nreturn;}// if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('selected');\nsetSelectedOpposite(currentSelection);// event.target.classList.add('selected');\n}};const drawLine=useCallback((el1,el2)=>{if(!el1||!el2||!columnsContainerRef.current)return;const containerRect=columnsContainerRef.current.getBoundingClientRect();const rect1=el1.getBoundingClientRect();const rect2=el2.getBoundingClientRect();const x1=rect1.left+rect1.width/2-containerRect.left+columnsContainerRef.current.scrollLeft;const y1=rect1.top+rect1.height/2-containerRect.top+columnsContainerRef.current.scrollTop;const x2=rect2.left+rect2.width/2-containerRect.left+columnsContainerRef.current.scrollLeft;const y2=rect2.top+rect2.height/2-containerRect.top+columnsContainerRef.current.scrollTop;const lineKey=\"line-\".concat(normalizeString(el1.textContent),\"-\").concat(normalizeString(el2.textContent));setLines(prevLines=>[...prevLines,{x1,y1,x2,y2,key:lineKey}]);},[]);useEffect(()=>{if(selectedWord&&selectedOpposite){const currentWordValue=selectedWord.value;const currentOppositeValue=selectedOpposite.value;const isCorrectMatch=pairs.some(pair=>pair.word===currentWordValue&&pair.opposite===currentOppositeValue);const itemId=\"matchopposite_\".concat(normalizeString(currentWordValue),\"_\").concat(normalizeString(currentOppositeValue));if(isCorrectMatch){setFeedback({message:'Correct Match!',type:'correct'});setMatchedItems(prev=>_objectSpread(_objectSpread({},prev),{},{[currentWordValue]:true,[currentOppositeValue]:true}));if(selectedWord.element&&selectedOpposite.element){drawLine(selectedWord.element,selectedOpposite.element);}setNumCorrectMatches(prev=>prev+1);progress.awardCorrectAnswer(itemId,'vocab-match-opposites',language);setSelectedWord(null);// Clear selections immediately after correct match\nsetSelectedOpposite(null);}else{setFeedback({message:'Incorrect Match. Try again.',type:'incorrect'});progress.awardIncorrectAnswer(itemId,'vocab-match-opposites',language);// Visual feedback for incorrect (e.g., flash border red)\nif(selectedWord.element)selectedWord.element.classList.add('incorrect-flash');if(selectedOpposite.element)selectedOpposite.element.classList.add('incorrect-flash');setTimeout(()=>{if(selectedWord&&selectedWord.element)selectedWord.element.classList.remove('incorrect-flash');if(selectedOpposite&&selectedOpposite.element)selectedOpposite.element.classList.remove('incorrect-flash');setSelectedWord(null);setSelectedOpposite(null);},1000);}}},[selectedWord,selectedOpposite,pairs,progress,language,drawLine]);useEffect(()=>{if(pairs.length>0&&numCorrectMatches===pairs.length&&!isRevealed){setFeedback({message:'All pairs matched! Well done!',type:'success'});}},[numCorrectMatches,pairs.length,isRevealed]);const showHint=()=>{if(isRevealed||numCorrectMatches===pairs.length)return;const unMatchedPairs=pairs.filter(p=>!matchedItems[p.word]&&!matchedItems[p.opposite]);if(unMatchedPairs.length>0){const hintPair=unMatchedPairs[0];setFeedback({message:\"Hint: Try matching \\\"\".concat(getLatinizedText(hintPair.word,language),\"\\\" or \\\"\").concat(getLatinizedText(hintPair.opposite,language),\"\\\".\"),type:'hint'});}else{setFeedback({message:\"No more hints available.\",type:'info'});}};const revealAllAnswers=()=>{setIsRevealed(true);const allCurrentlyMatched={};const newLines=[];pairs.forEach(pair=>{allCurrentlyMatched[pair.word]=true;allCurrentlyMatched[pair.opposite]=true;const itemId=\"matchopposite_\".concat(normalizeString(pair.word),\"_\").concat(normalizeString(pair.opposite));progress.scheduleReview(itemId,'vocab-match-opposites',language,false);// Mark as incorrect for review if revealed\nconst el1=itemRefs.current[\"word-\".concat(pair.word)];const el2=itemRefs.current[\"opposite-\".concat(pair.opposite)];if(el1&&el2&&columnsContainerRef.current){const containerRect=columnsContainerRef.current.getBoundingClientRect();const rect1=el1.getBoundingClientRect();const rect2=el2.getBoundingClientRect();const x1=rect1.left+rect1.width/2-containerRect.left+columnsContainerRef.current.scrollLeft;const y1=rect1.top+rect1.height/2-containerRect.top+columnsContainerRef.current.scrollTop;const x2=rect2.left+rect2.width/2-containerRect.left+columnsContainerRef.current.scrollLeft;const y2=rect2.top+rect2.height/2-containerRect.top+columnsContainerRef.current.scrollTop;newLines.push({x1,y1,x2,y2,key:\"line-\".concat(normalizeString(pair.word),\"-\").concat(normalizeString(pair.opposite))});}});setMatchedItems(allCurrentlyMatched);setLines(newLines);setNumCorrectMatches(pairs.length);setFeedback({message:\"All pairs revealed.\",type:'info'});};if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading matching exercise...\"});if(error)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});if(pairs.length===0&&!isLoading)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:\"No pairs available for this exercise.\",type:\"info\"});const columnStyle={display:'flex',flexDirection:'column',gap:'8px',alignItems:'center',margin:'0 15px',flex:1};const itemStyle=(value,type)=>{let base={padding:'12px 18px',border:'2px solid #ddd',borderRadius:'8px',cursor:'pointer',minWidth:'150px',textAlign:'center',backgroundColor:'#fff',transition:'background-color 0.2s, border-color 0.2s, transform 0.1s',boxShadow:'0 1px 3px rgba(0,0,0,0.05)'};if(matchedItems[value]){base.backgroundColor='#e6ffed';base.borderColor='#b7eac9';base.cursor='default';base.fontWeight='bold';}else if(type==='word'&&(selectedWord===null||selectedWord===void 0?void 0:selectedWord.value)===value||type==='opposite'&&(selectedOpposite===null||selectedOpposite===void 0?void 0:selectedOpposite.value)===value){base.backgroundColor='#e0efff';base.borderColor='#90caf9';base.transform='scale(1.03)';}return base;};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'20px',border:'1px solid #eee',borderRadius:'8px',maxWidth:'600px',margin:'auto'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Match the Opposites\"}),/*#__PURE__*/_jsxs(\"div\",{ref:columnsContainerRef,style:{display:'flex',justifyContent:'center',margin:'20px 0',position:'relative'},children:[/*#__PURE__*/_jsx(\"svg\",{style:{position:'absolute',top:0,left:0,width:'100%',height:'100%',pointerEvents:'none',zIndex:0},children:lines.map(line=>/*#__PURE__*/_jsx(\"line\",{x1:line.x1,y1:line.y1,x2:line.x2,y2:line.y2,stroke:\"#28a745\",strokeWidth:\"3\",opacity:\"0.7\"},line.key))}),/*#__PURE__*/_jsxs(\"div\",{style:_objectSpread(_objectSpread({},columnStyle),{},{zIndex:1}),children:[\" \",/*#__PURE__*/_jsx(\"h4\",{children:\"Words\"}),wordsColumn.map(word=>/*#__PURE__*/_jsx(\"button\",{ref:el=>itemRefs.current[\"word-\".concat(word)]=el,style:itemStyle(word,'word'),onClick:e=>handleItemClick(word,'word',e),disabled:matchedItems[word]||isRevealed,className:(selectedWord===null||selectedWord===void 0?void 0:selectedWord.value)===word&&!matchedItems[word]?'selected-match-item':'',children:getLatinizedText(word,language)},\"word-\".concat(word)))]}),/*#__PURE__*/_jsxs(\"div\",{style:_objectSpread(_objectSpread({},columnStyle),{},{zIndex:1}),children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Opposites\"}),oppositesColumn.map(opposite=>/*#__PURE__*/_jsx(\"button\",{ref:el=>itemRefs.current[\"opposite-\".concat(opposite)]=el,style:itemStyle(opposite,'opposite'),onClick:e=>handleItemClick(opposite,'opposite',e),disabled:matchedItems[opposite]||isRevealed,className:(selectedOpposite===null||selectedOpposite===void 0?void 0:selectedOpposite.value)===opposite&&!matchedItems[opposite]?'selected-match-item':'',children:getLatinizedText(opposite,language)},\"opp-\".concat(opposite)))]})]}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type,language:language}),/*#__PURE__*/_jsx(ExerciseControls,{onShowHint:!isRevealed&&numCorrectMatches<pairs.length?showHint:undefined,onRevealAnswer:!isRevealed&&numCorrectMatches<pairs.length?revealAllAnswers:undefined,onNextExercise:setupExercise,config:{showCheck:false,showHint:!isRevealed&&numCorrectMatches<pairs.length&&pairs.length>0,showReveal:!isRevealed&&numCorrectMatches<pairs.length&&pairs.length>0,showNext:true}})]});};export default MatchOppositesExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","loadOppositesData","FeedbackDisplay","ExerciseControls","useLatinizationContext","useLatinization","shuffleArray","useProgress","normalizeString","jsx","_jsx","jsxs","_jsxs","MatchOppositesExercise","_ref","language","days","exerciseKey","pairs","setPairs","wordsColumn","setWordsColumn","oppositesColumn","setOppositesColumn","selectedWord","setSelectedWord","selectedOpposite","setSelectedOpposite","matchedItems","setMatchedItems","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","numCorrectMatches","setNumCorrectMatches","isRevealed","setIsRevealed","lines","setLines","isLatinized","getLatinizedText","progress","itemRefs","columnsContainerRef","NUM_PAIRS_TO_DISPLAY","setupExercise","current","data","oppositesMap","fetchError","Error","Object","keys","length","concat","allPossiblePairs","entries","map","_ref2","word","opposite","shuffledPossiblePairs","selectedPairs","slice","p","err","console","handleItemClick","itemValue","event","currentSelection","value","element","target","drawLine","el1","el2","containerRect","getBoundingClientRect","rect1","rect2","x1","left","width","scrollLeft","y1","top","height","scrollTop","x2","y2","lineKey","textContent","prevLines","key","currentWordValue","currentOppositeValue","isCorrectMatch","some","pair","itemId","prev","_objectSpread","awardCorrectAnswer","awardIncorrectAnswer","classList","add","setTimeout","remove","showHint","unMatchedPairs","filter","hintPair","revealAllAnswers","allCurrentlyMatched","newLines","forEach","scheduleReview","push","children","columnStyle","display","flexDirection","gap","alignItems","margin","flex","itemStyle","base","padding","border","borderRadius","cursor","minWidth","textAlign","backgroundColor","transition","boxShadow","borderColor","fontWeight","transform","style","maxWidth","ref","justifyContent","position","pointerEvents","zIndex","line","stroke","strokeWidth","opacity","el","onClick","e","disabled","className","onShowHint","undefined","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/MatchOppositesExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { loadOppositesData } from '../../../../utils/exerciseDataService';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\nimport { useProgress } from '../../../../contexts/ProgressContext'; \r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\n\r\nconst MatchOppositesExercise = ({ language, days, exerciseKey }) => {\r\n  const [pairs, setPairs] = useState([]);\r\n  const [wordsColumn, setWordsColumn] = useState([]);\r\n  const [oppositesColumn, setOppositesColumn] = useState([]);\r\n  const [selectedWord, setSelectedWord] = useState(null); // { value: string, element: HTMLElement }\r\n  const [selectedOpposite, setSelectedOpposite] = useState(null); // { value: string, element: HTMLElement }\r\n  const [matchedItems, setMatchedItems] = useState({}); // { [itemValue]: true }\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [numCorrectMatches, setNumCorrectMatches] = useState(0);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [lines, setLines] = useState([]); // For drawing lines between matched items\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const progress = useProgress();\r\n\r\n  const itemRefs = useRef({}); // To store refs for each matchable item\r\n  const columnsContainerRef = useRef(null); // Ref for the div containing both columns\r\n\r\n  const NUM_PAIRS_TO_DISPLAY = 4;\r\n\r\n  const setupExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setSelectedWord(null);\r\n    setSelectedOpposite(null);\r\n    setMatchedItems({});\r\n    setNumCorrectMatches(0);\r\n    setIsRevealed(false);\r\n    setLines([]); // Clear lines\r\n    itemRefs.current = {}; // Clear old refs\r\n\r\n    try {\r\n      const { data: oppositesMap, error: fetchError } = await loadOppositesData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load opposites data.');\r\n      }\r\n\r\n      if (!oppositesMap || Object.keys(oppositesMap).length < NUM_PAIRS_TO_DISPLAY / 2) {\r\n        setError(`Not enough opposites data (found ${Object.keys(oppositesMap).length}) for this exercise. Need at least ${NUM_PAIRS_TO_DISPLAY / 2} base pairs.`);\r\n        setPairs([]);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allPossiblePairs = Object.entries(oppositesMap).map(([word, opposite]) => ({ word, opposite }));\r\n      const shuffledPossiblePairs = shuffleArray(allPossiblePairs);\r\n      const selectedPairs = shuffledPossiblePairs.slice(0, NUM_PAIRS_TO_DISPLAY);\r\n\r\n      if (selectedPairs.length < 1) {\r\n        setError('Could not select enough unique pairs for the exercise.');\r\n        setPairs([]);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      setPairs(selectedPairs);\r\n      setWordsColumn(shuffleArray(selectedPairs.map(p => p.word)));\r\n      setOppositesColumn(shuffleArray(selectedPairs.map(p => p.opposite)));\r\n\r\n    } catch (err) {\r\n      console.error(\"MatchOppositesExercise - Error setting up exercise:\", err);\r\n      setError(err.message || 'An unexpected error occurred.');\r\n      setPairs([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      setupExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(\"Please select a language and day(s).\");\r\n    }\r\n  }, [setupExercise, exerciseKey, language, days]);\r\n\r\n  const handleItemClick = (itemValue, type, event) => {\r\n    if (matchedItems[itemValue] || isRevealed) return;\r\n\r\n    const currentSelection = { value: itemValue, element: event.target };\r\n\r\n    if (type === 'word') {\r\n      if (selectedWord && selectedWord.element === event.target) {\r\n        setSelectedWord(null); // Deselect if clicking the same selected item\r\n        // event.target.classList.remove('selected'); // classList managed by style logic\r\n        return;\r\n      }\r\n      // if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('selected');\r\n      setSelectedWord(currentSelection);\r\n      // event.target.classList.add('selected');\r\n    } else if (type === 'opposite') {\r\n      if (selectedOpposite && selectedOpposite.element === event.target) {\r\n        setSelectedOpposite(null); // Deselect\r\n        // event.target.classList.remove('selected');\r\n        return;\r\n      }\r\n      // if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('selected');\r\n      setSelectedOpposite(currentSelection);\r\n      // event.target.classList.add('selected');\r\n    }\r\n  };\r\n\r\n  const drawLine = useCallback((el1, el2) => {\r\n    if (!el1 || !el2 || !columnsContainerRef.current) return;\r\n\r\n    const containerRect = columnsContainerRef.current.getBoundingClientRect();\r\n    const rect1 = el1.getBoundingClientRect();\r\n    const rect2 = el2.getBoundingClientRect();\r\n\r\n    const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n    const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n    const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n    const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n    \r\n    const lineKey = `line-${normalizeString(el1.textContent)}-${normalizeString(el2.textContent)}`;\r\n    setLines(prevLines => [...prevLines, { x1, y1, x2, y2, key: lineKey }]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedWord && selectedOpposite) {\r\n      const currentWordValue = selectedWord.value;\r\n      const currentOppositeValue = selectedOpposite.value;\r\n      const isCorrectMatch = pairs.some(pair =>\r\n        (pair.word === currentWordValue && pair.opposite === currentOppositeValue)\r\n      );\r\n      const itemId = `matchopposite_${normalizeString(currentWordValue)}_${normalizeString(currentOppositeValue)}`;\r\n\r\n      if (isCorrectMatch) {\r\n        setFeedback({ message: 'Correct Match!', type: 'correct' });\r\n        setMatchedItems(prev => ({ ...prev, [currentWordValue]: true, [currentOppositeValue]: true }));\r\n        \r\n        if (selectedWord.element && selectedOpposite.element) {\r\n          drawLine(selectedWord.element, selectedOpposite.element);\r\n        }\r\n        \r\n        setNumCorrectMatches(prev => prev + 1);\r\n        progress.awardCorrectAnswer(itemId, 'vocab-match-opposites', language);\r\n        \r\n        setSelectedWord(null); // Clear selections immediately after correct match\r\n        setSelectedOpposite(null);\r\n\r\n      } else {\r\n        setFeedback({ message: 'Incorrect Match. Try again.', type: 'incorrect' });\r\n        progress.awardIncorrectAnswer(itemId, 'vocab-match-opposites', language);\r\n        \r\n        // Visual feedback for incorrect (e.g., flash border red)\r\n        if(selectedWord.element) selectedWord.element.classList.add('incorrect-flash');\r\n        if(selectedOpposite.element) selectedOpposite.element.classList.add('incorrect-flash');\r\n        \r\n        setTimeout(() => {\r\n            if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('incorrect-flash');\r\n            if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('incorrect-flash');\r\n            setSelectedWord(null);\r\n            setSelectedOpposite(null);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [selectedWord, selectedOpposite, pairs, progress, language, drawLine]);\r\n\r\n  useEffect(() => {\r\n    if (pairs.length > 0 && numCorrectMatches === pairs.length && !isRevealed) {\r\n      setFeedback({ message: 'All pairs matched! Well done!', type: 'success' });\r\n    }\r\n  }, [numCorrectMatches, pairs.length, isRevealed]);\r\n\r\n  const showHint = () => {\r\n    if (isRevealed || numCorrectMatches === pairs.length) return;\r\n    const unMatchedPairs = pairs.filter(p => !matchedItems[p.word] && !matchedItems[p.opposite]);\r\n    if (unMatchedPairs.length > 0) {\r\n      const hintPair = unMatchedPairs[0];\r\n      setFeedback({ message: `Hint: Try matching \"${getLatinizedText(hintPair.word, language)}\" or \"${getLatinizedText(hintPair.opposite, language)}\".`, type: 'hint' });\r\n    } else {\r\n      setFeedback({ message: \"No more hints available.\", type: 'info' });\r\n    }\r\n  };\r\n\r\n  const revealAllAnswers = () => {\r\n    setIsRevealed(true);\r\n    const allCurrentlyMatched = {};\r\n    const newLines = [];\r\n    pairs.forEach(pair => {\r\n      allCurrentlyMatched[pair.word] = true;\r\n      allCurrentlyMatched[pair.opposite] = true;\r\n      const itemId = `matchopposite_${normalizeString(pair.word)}_${normalizeString(pair.opposite)}`;\r\n      progress.scheduleReview(itemId, 'vocab-match-opposites', language, false); // Mark as incorrect for review if revealed\r\n\r\n      const el1 = itemRefs.current[`word-${pair.word}`];\r\n      const el2 = itemRefs.current[`opposite-${pair.opposite}`];\r\n      if (el1 && el2 && columnsContainerRef.current) {\r\n        const containerRect = columnsContainerRef.current.getBoundingClientRect();\r\n        const rect1 = el1.getBoundingClientRect();\r\n        const rect2 = el2.getBoundingClientRect();\r\n        const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n        const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n        const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n        const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n        newLines.push({ x1, y1, x2, y2, key: `line-${normalizeString(pair.word)}-${normalizeString(pair.opposite)}` });\r\n      }\r\n    });\r\n    setMatchedItems(allCurrentlyMatched);\r\n    setLines(newLines);\r\n    setNumCorrectMatches(pairs.length);\r\n    setFeedback({ message: \"All pairs revealed.\", type: 'info' });\r\n  };\r\n\r\n  if (isLoading) return <p>Loading matching exercise...</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (pairs.length === 0 && !isLoading) return <FeedbackDisplay message=\"No pairs available for this exercise.\" type=\"info\" />;\r\n\r\n  const columnStyle = { display: 'flex', flexDirection: 'column', gap: '8px', alignItems: 'center', margin: '0 15px', flex: 1 };\r\n  const itemStyle = (value, type) => {\r\n    let base = {\r\n      padding: '12px 18px',\r\n      border: '2px solid #ddd',\r\n      borderRadius: '8px',\r\n      cursor: 'pointer',\r\n      minWidth: '150px',\r\n      textAlign: 'center',\r\n      backgroundColor: '#fff',\r\n      transition: 'background-color 0.2s, border-color 0.2s, transform 0.1s',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\r\n    };\r\n    if (matchedItems[value]) {\r\n      base.backgroundColor = '#e6ffed';\r\n      base.borderColor = '#b7eac9';\r\n      base.cursor = 'default';\r\n      base.fontWeight = 'bold';\r\n    } else if ((type === 'word' && selectedWord?.value === value) || (type === 'opposite' && selectedOpposite?.value === value)) {\r\n      base.backgroundColor = '#e0efff';\r\n      base.borderColor = '#90caf9';\r\n      base.transform = 'scale(1.03)';\r\n    }\r\n    return base;\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '600px', margin: 'auto' }}>\r\n      <h3>Match the Opposites</h3>\r\n      <div \r\n        ref={columnsContainerRef} \r\n        style={{ display: 'flex', justifyContent: 'center', margin: '20px 0', position: 'relative' }}\r\n      >\r\n        <svg \r\n          style={{ \r\n            position: 'absolute', top: 0, left: 0, \r\n            width: '100%', height: '100%', \r\n            pointerEvents: 'none', zIndex: 0 \r\n          }}\r\n        >\r\n          {lines.map(line => (\r\n            <line \r\n              key={line.key} \r\n              x1={line.x1} y1={line.y1} \r\n              x2={line.x2} y2={line.y2} \r\n              stroke=\"#28a745\" strokeWidth=\"3\" opacity=\"0.7\"\r\n            />\r\n          ))}\r\n        </svg>\r\n        <div style={{...columnStyle, zIndex: 1}}> {/* Ensure columns are above SVG lines */}\r\n          <h4>Words</h4>\r\n          {wordsColumn.map(word => (\r\n            <button\r\n              key={`word-${word}`}\r\n              ref={el => itemRefs.current[`word-${word}`] = el}\r\n              style={itemStyle(word, 'word')}\r\n              onClick={(e) => handleItemClick(word, 'word', e)}\r\n              disabled={matchedItems[word] || isRevealed}\r\n              className={ (selectedWord?.value === word && !matchedItems[word]) ? 'selected-match-item' : '' }\r\n            >\r\n              {getLatinizedText(word, language)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div style={{...columnStyle, zIndex: 1}}>\r\n          <h4>Opposites</h4>\r\n          {oppositesColumn.map(opposite => (\r\n            <button\r\n              key={`opp-${opposite}`}\r\n              ref={el => itemRefs.current[`opposite-${opposite}`] = el}\r\n              style={itemStyle(opposite, 'opposite')}\r\n              onClick={(e) => handleItemClick(opposite, 'opposite', e)}\r\n              disabled={matchedItems[opposite] || isRevealed}\r\n              className={ (selectedOpposite?.value === opposite && !matchedItems[opposite]) ? 'selected-match-item' : '' }\r\n            >\r\n              {getLatinizedText(opposite, language)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      <ExerciseControls\r\n        onShowHint={!isRevealed && numCorrectMatches < pairs.length ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && numCorrectMatches < pairs.length ? revealAllAnswers : undefined}\r\n        onNextExercise={setupExercise}\r\n        config={{\r\n          showCheck: false,\r\n          showHint: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\r\n          showReveal: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchOppositesExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}