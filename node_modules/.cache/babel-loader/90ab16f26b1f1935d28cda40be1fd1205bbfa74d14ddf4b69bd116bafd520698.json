{"ast":null,"code":"import _objectSpread from\"/workspaces/COSYlanguagesproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{loadOppositesData}from'../../../../utils/exerciseDataService';import{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{pronounceText}from'../../../../utils/speechUtils';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{useProgress}from'../../../../contexts/ProgressContext';import{normalizeString}from'../../../../utils/stringUtils';import{useI18n}from'../../../../i18n/I18nContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TypeOppositeExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[currentWord,setCurrentWord]=useState('');const[correctOpposite,setCorrectOpposite]=useState('');const[userInput,setUserInput]=useState('');const[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[isRevealed,setIsRevealed]=useState(false);const[isAnsweredCorrectly,setIsAnsweredCorrectly]=useState(false);// To manage post-correct state\nconst{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const progress=useProgress();const{t}=useI18n();const displayCurrentWord=getLatinizedText(currentWord,language);const displayCorrectOpposite=getLatinizedText(correctOpposite,language);const fetchNewOppositePair=useCallback(async()=>{setIsLoading(true);setError(null);setFeedback({message:'',type:''});setUserInput('');setIsRevealed(false);setCurrentWord('');setCorrectOpposite('');setIsAnsweredCorrectly(false);// Reset for new pair\ntry{const{data:oppositesMap,error:oppositesError}=await loadOppositesData(language,days);if(oppositesError){throw new Error(oppositesError.message||oppositesError.error||'Failed to load opposites data.');}if(!oppositesMap||Object.keys(oppositesMap).length===0){setError(t('exercises.noOppositesData','No opposites data found for the selected criteria.'));setIsLoading(false);return;}const wordsWithOpposites=Object.keys(oppositesMap);if(wordsWithOpposites.length===0){setError(t('exercises.noWordsWithOpposites','No words with opposites found in the data.'));setIsLoading(false);return;}const randomWord=wordsWithOpposites[Math.floor(Math.random()*wordsWithOpposites.length)];setCurrentWord(randomWord);setCorrectOpposite(oppositesMap[randomWord]);}catch(err){console.error(\"TypeOppositeExercise - Error fetching data:\",err);setError(err.message||t('errors.unexpectedError','An unexpected error occurred.'));}finally{setIsLoading(false);}},[language,days,t]);useEffect(()=>{if(language&&days&&days.length>0){fetchNewOppositePair();}else{setIsLoading(false);setError(t('errors.selectLangDay',\"Please select a language and day(s).\"));}},[fetchNewOppositePair,exerciseKey,language,days,t]);const handleInputChange=e=>{setUserInput(e.target.value);if(feedback.message)setFeedback({message:'',type:''});};const checkAnswer=()=>{if(!correctOpposite||isRevealed||!currentWord||isAnsweredCorrectly)return;const itemId=\"typeopposite_\".concat(normalizeString(currentWord),\"_\").concat(normalizeString(correctOpposite));const isCorrect=normalizeString(userInput)===normalizeString(correctOpposite);if(isCorrect){setFeedback({message:t('feedback.correct','Correct!'),type:'correct'});progress.awardCorrectAnswer(itemId,'vocab-type-opposite',language);setIsAnsweredCorrectly(true);// Mark as correctly answered\n// Auto-progress after a short delay\nsetTimeout(()=>{fetchNewOppositePair();},1500);// 1.5-second delay\n}else{setFeedback({message:t('feedback.incorrectOpposite',\"Incorrect. The opposite of \\\"\".concat(displayCurrentWord,\"\\\" is \\\"\").concat(displayCorrectOpposite,\"\\\".\"),{word:displayCurrentWord,opposite:displayCorrectOpposite}),type:'incorrect'});progress.awardIncorrectAnswer(itemId,'vocab-type-opposite',language);}};const showHint=()=>{if(!correctOpposite||isRevealed||isAnsweredCorrectly)return;const hintLetter=getLatinizedText(correctOpposite[0],language);setFeedback({message:t('feedback.hintStartsWith',\"Hint: The opposite starts with '\".concat(hintLetter,\"'.\"),{letter:hintLetter}),type:'hint'});};const revealAnswer=()=>{if(!correctOpposite||!currentWord||isAnsweredCorrectly)return;const itemId=\"typeopposite_\".concat(normalizeString(currentWord),\"_\").concat(normalizeString(correctOpposite));setUserInput(correctOpposite);setFeedback({message:t('feedback.revealedOpposite',\"The opposite of \\\"\".concat(displayCurrentWord,\"\\\" is \\\"\").concat(displayCorrectOpposite,\"\\\".\"),{word:displayCurrentWord,opposite:displayCorrectOpposite}),type:'info'});setIsRevealed(true);progress.scheduleReview(itemId,'vocab-type-opposite',language,false);// Ensure language is passed\n// Auto-progress after showing revealed answer\nsetTimeout(()=>{fetchNewOppositePair();},2000);// Slightly longer delay for revealed answers\n};const handleNext=()=>{// Manual next button action\nfetchNewOppositePair();};const handlePronounceWord=wordToPronounce=>{if(wordToPronounce&&language){pronounceText(wordToPronounce,language).catch(err=>{console.error(\"Pronunciation error:\",err);setFeedback({message:t('errors.pronunciationError','Could not pronounce the word.'),type:'error'});});}};if(isLoading){return/*#__PURE__*/_jsx(\"p\",{children:t('loading.oppositesExercise','Loading opposites exercise...')});}if(error){return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});}if(!currentWord||!correctOpposite){return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noOppositesPair','No opposites pair available. Try different selections.'),type:\"info\"});}return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'20px',border:'1px solid #eee',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:t('titles.whatIsTheOpposite','What is the opposite of:')}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"div\",{style:_objectSpread({fontSize:'2rem',padding:'10px'},isLatinized&&currentWord!==displayCurrentWord&&{fontStyle:'italic'}),children:displayCurrentWord}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePronounceWord(currentWord),disabled:!currentWord,title:t('tooltips.pronounceWord',\"Pronounce word\"),style:{background:'none',border:'none',fontSize:'1.5rem',cursor:'pointer',marginLeft:'5px'},children:\"\\uD83D\\uDD0A\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:handleInputChange,placeholder:t('placeholders.typeTheOpposite',\"Type the opposite...\"),disabled:isRevealed||isAnsweredCorrectly// Disable input after correct answer or reveal\n,style:{padding:'10px',fontSize:'1rem',width:'250px',marginBottom:'10px',border:'1px solid #ccc',borderRadius:'4px'},onKeyPress:event=>{if(event.key==='Enter'&&!isRevealed&&!isAnsweredCorrectly){checkAnswer();}}}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type,language:language}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:!isRevealed&&!isAnsweredCorrectly&&currentWord?checkAnswer:undefined,onShowHint:!isRevealed&&!isAnsweredCorrectly&&currentWord?showHint:undefined,onRevealAnswer:!isRevealed&&!isAnsweredCorrectly&&currentWord?revealAnswer:undefined,onNextExercise:handleNext// Manual next still available\n,config:{showCheck:!isRevealed&&!isAnsweredCorrectly&&!!currentWord,showHint:!isRevealed&&!isAnsweredCorrectly&&!!currentWord,showReveal:!isRevealed&&!isAnsweredCorrectly&&!!currentWord,showNext:true}})]});};export default TypeOppositeExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadOppositesData","useLatinizationContext","useLatinization","pronounceText","FeedbackDisplay","ExerciseControls","useProgress","normalizeString","useI18n","jsx","_jsx","jsxs","_jsxs","TypeOppositeExercise","_ref","language","days","exerciseKey","currentWord","setCurrentWord","correctOpposite","setCorrectOpposite","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","isAnsweredCorrectly","setIsAnsweredCorrectly","isLatinized","getLatinizedText","progress","t","displayCurrentWord","displayCorrectOpposite","fetchNewOppositePair","data","oppositesMap","oppositesError","Error","Object","keys","length","wordsWithOpposites","randomWord","Math","floor","random","err","console","handleInputChange","e","target","value","checkAnswer","itemId","concat","isCorrect","awardCorrectAnswer","setTimeout","word","opposite","awardIncorrectAnswer","showHint","hintLetter","letter","revealAnswer","scheduleReview","handleNext","handlePronounceWord","wordToPronounce","catch","children","style","textAlign","padding","border","borderRadius","display","justifyContent","alignItems","margin","_objectSpread","fontSize","fontStyle","onClick","disabled","title","background","cursor","marginLeft","onChange","placeholder","width","marginBottom","onKeyPress","event","key","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/TypeOppositeExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadOppositesData } from '../../../../utils/exerciseDataService'; \r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { pronounceText } from '../../../../utils/speechUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useProgress } from '../../../../contexts/ProgressContext';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\n\r\nconst TypeOppositeExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentWord, setCurrentWord] = useState('');\r\n  const [correctOpposite, setCorrectOpposite] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [isAnsweredCorrectly, setIsAnsweredCorrectly] = useState(false); // To manage post-correct state\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const progress = useProgress();\r\n  const { t } = useI18n();\r\n\r\n  const displayCurrentWord = getLatinizedText(currentWord, language);\r\n  const displayCorrectOpposite = getLatinizedText(correctOpposite, language);\r\n\r\n  const fetchNewOppositePair = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setUserInput('');\r\n    setIsRevealed(false);\r\n    setCurrentWord('');\r\n    setCorrectOpposite('');\r\n    setIsAnsweredCorrectly(false); // Reset for new pair\r\n\r\n    try {\r\n      const { data: oppositesMap, error: oppositesError } = await loadOppositesData(language, days);\r\n      if (oppositesError) {\r\n        throw new Error(oppositesError.message || oppositesError.error || 'Failed to load opposites data.');\r\n      }\r\n\r\n      if (!oppositesMap || Object.keys(oppositesMap).length === 0) {\r\n        setError(t('exercises.noOppositesData', 'No opposites data found for the selected criteria.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const wordsWithOpposites = Object.keys(oppositesMap);\r\n      if (wordsWithOpposites.length === 0) {\r\n        setError(t('exercises.noWordsWithOpposites', 'No words with opposites found in the data.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const randomWord = wordsWithOpposites[Math.floor(Math.random() * wordsWithOpposites.length)];\r\n      setCurrentWord(randomWord);\r\n      setCorrectOpposite(oppositesMap[randomWord]);\r\n\r\n    } catch (err) {\r\n      console.error(\"TypeOppositeExercise - Error fetching data:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchNewOppositePair();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewOppositePair, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!correctOpposite || isRevealed || !currentWord || isAnsweredCorrectly) return;\r\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\r\n    const isCorrect = normalizeString(userInput) === normalizeString(correctOpposite);\r\n\r\n    if (isCorrect) {\r\n      setFeedback({ message: t('feedback.correct', 'Correct!'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'vocab-type-opposite', language);\r\n      setIsAnsweredCorrectly(true); // Mark as correctly answered\r\n      // Auto-progress after a short delay\r\n      setTimeout(() => {\r\n        fetchNewOppositePair();\r\n      }, 1500); // 1.5-second delay\r\n    } else {\r\n      setFeedback({ message: t('feedback.incorrectOpposite', `Incorrect. The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, { word: displayCurrentWord, opposite: displayCorrectOpposite }), type: 'incorrect' });\r\n      progress.awardIncorrectAnswer(itemId, 'vocab-type-opposite', language);\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!correctOpposite || isRevealed || isAnsweredCorrectly) return;\r\n    const hintLetter = getLatinizedText(correctOpposite[0], language);\r\n    setFeedback({ message: t('feedback.hintStartsWith', `Hint: The opposite starts with '${hintLetter}'.`, { letter: hintLetter }), type: 'hint' });\r\n  };\r\n\r\n  const revealAnswer = () => {\r\n    if (!correctOpposite || !currentWord || isAnsweredCorrectly) return;\r\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\r\n    setUserInput(correctOpposite);\r\n    setFeedback({ message: t('feedback.revealedOpposite', `The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, { word: displayCurrentWord, opposite: displayCorrectOpposite }), type: 'info' });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'vocab-type-opposite', language, false); // Ensure language is passed\r\n     // Auto-progress after showing revealed answer\r\n    setTimeout(() => {\r\n        fetchNewOppositePair();\r\n    }, 2000); // Slightly longer delay for revealed answers\r\n  };\r\n\r\n  const handleNext = () => { // Manual next button action\r\n    fetchNewOppositePair();\r\n  };\r\n\r\n  const handlePronounceWord = (wordToPronounce) => {\r\n    if (wordToPronounce && language) {\r\n      pronounceText(wordToPronounce, language).catch(err => {\r\n          console.error(\"Pronunciation error:\", err);\r\n          setFeedback({message: t('errors.pronunciationError', 'Could not pronounce the word.'), type: 'error'});\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>{t('loading.oppositesExercise', 'Loading opposites exercise...')}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <FeedbackDisplay message={error} type=\"error\" />;\r\n  }\r\n\r\n  if (!currentWord || !correctOpposite) {\r\n    return <FeedbackDisplay message={t('exercises.noOppositesPair', 'No opposites pair available. Try different selections.')} type=\"info\"/>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}>\r\n      <h3>{t('titles.whatIsTheOpposite', 'What is the opposite of:')}</h3>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '20px 0' }}>\r\n        <div style={{ fontSize: '2rem', padding: '10px', ...(isLatinized && currentWord !== displayCurrentWord && {fontStyle: 'italic'}) }}>\r\n          {displayCurrentWord}\r\n        </div>\r\n        <button onClick={() => handlePronounceWord(currentWord)} disabled={!currentWord} title={t('tooltips.pronounceWord', `Pronounce word`)} style={{background:'none', border:'none', fontSize:'1.5rem', cursor:'pointer', marginLeft:'5px'}}>🔊</button>\r\n      </div>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        value={userInput}\r\n        onChange={handleInputChange}\r\n        placeholder={t('placeholders.typeTheOpposite', \"Type the opposite...\")}\r\n        disabled={isRevealed || isAnsweredCorrectly} // Disable input after correct answer or reveal\r\n        style={{ padding: '10px', fontSize: '1rem', width: '250px', marginBottom: '10px', border: '1px solid #ccc', borderRadius: '4px' }}\r\n        onKeyPress={(event) => {\r\n            if (event.key === 'Enter' && !isRevealed && !isAnsweredCorrectly) {\r\n              checkAnswer();\r\n            }\r\n        }}\r\n      />\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      \r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed && !isAnsweredCorrectly && currentWord ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed && !isAnsweredCorrectly && currentWord ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && !isAnsweredCorrectly && currentWord ? revealAnswer : undefined}\r\n        onNextExercise={handleNext} // Manual next still available\r\n        config={{ \r\n            showCheck: !isRevealed && !isAnsweredCorrectly && !!currentWord, \r\n            showHint: !isRevealed && !isAnsweredCorrectly && !!currentWord, \r\n            showReveal: !isRevealed && !isAnsweredCorrectly && !!currentWord,\r\n            showNext: true, \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeOppositeExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}