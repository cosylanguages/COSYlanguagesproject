{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/WhatHappensNextExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ExerciseControls from '../../ExerciseControls';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { loadWritingPromptsData } from '../../../../utils/exerciseDataService';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhatHappensNextExercise = ({\n  language,\n  days,\n  onNext\n}) => {\n  _s();\n  const {\n    t\n  } = useI18n();\n  const [text, setText] = useState('');\n  const [currentPrompt, setCurrentPrompt] = useState('');\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const fetchNewPrompt = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setCurrentPrompt('');\n    setText('');\n    setFeedback({\n      message: '',\n      type: ''\n    });\n    try {\n      const {\n        data: promptsData,\n        error: fetchError\n      } = await loadWritingPromptsData(language, days);\n      if (fetchError) throw new Error(fetchError.message || 'Failed to load writing prompts.');\n      const prompts = promptsData === null || promptsData === void 0 ? void 0 : promptsData.what_happens_next;\n      if (prompts && prompts.length > 0) {\n        setCurrentPrompt(prompts[Math.floor(Math.random() * prompts.length)]);\n      } else {\n        setError(t('exercises.noWhatHappensNextPrompts', 'No \"What happens next?\" prompts found.'));\n      }\n    } catch (err) {\n      console.error(\"WhatHappensNextExercise - Error fetching prompt:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchNewPrompt();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n    }\n  }, [fetchNewPrompt, language, days]);\n  const handleSubmit = () => {\n    if (text.trim().length < 10) {\n      setFeedback({\n        message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'),\n        type: 'warning'\n      });\n    } else {\n      setFeedback({\n        message: t('feedback.continuationSubmitted', 'Great! Continuation submitted.'),\n        type: 'success'\n      });\n    }\n  };\n  const handleNextRequest = () => {\n    fetchNewPrompt(); // Fetches a new prompt for this specific exercise type\n    if (onNext) onNext(); // Informs parent if it wants to switch story type\n  };\n  const showHint = () => {\n    setFeedback({\n      message: t('feedback.hintWhatHappensNext', \"Hint: Think about potential consequences or new character introductions.\"),\n      type: 'hint'\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: t('loading.writingPrompts', 'Loading writing prompt...')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: error,\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  if (!currentPrompt && !isLoading) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: t('exercises.noPromptsToDisplay', 'No prompt to display.'),\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 44\n  }, this);\n  const latinizedPrompt = getLatinizedText(currentPrompt, language);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: t('titles.whatHappensNext', \"What Happens Next?\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: 'italic',\n        margin: '20px',\n        ...(isLatinized && currentPrompt !== latinizedPrompt && {\n          fontStyle: 'italic'\n        })\n      },\n      children: [\"\\\"\", latinizedPrompt, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      rows: \"10\",\n      placeholder: t('placeholders.typeYourContinuationHere', 'Type your continuation here...'),\n      style: {\n        width: '95%',\n        padding: '10px',\n        marginBottom: '15px',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        fontSize: '1em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onCheckAnswer: handleSubmit,\n      checkButtonText: t('buttons.done', 'Done'),\n      onShowHint: showHint,\n      onNextExercise: handleNextRequest,\n      config: {\n        showCheck: true,\n        showHint: true,\n        showReveal: false,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(WhatHappensNextExercise, \"uZay0yyejC3/B8KDO9jjR8120CA=\", false, function () {\n  return [useI18n, useLatinizationContext];\n});\n_c = WhatHappensNextExercise;\nexport default WhatHappensNextExercise;\nvar _c;\n$RefreshReg$(_c, \"WhatHappensNextExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ExerciseControls","FeedbackDisplay","useI18n","loadWritingPromptsData","useLatinizationContext","useLatinization","jsxDEV","_jsxDEV","WhatHappensNextExercise","language","days","onNext","_s","t","text","setText","currentPrompt","setCurrentPrompt","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","fetchNewPrompt","data","promptsData","fetchError","Error","prompts","what_happens_next","length","Math","floor","random","err","console","handleSubmit","trim","handleNextRequest","showHint","children","fileName","_jsxFileName","lineNumber","columnNumber","latinizedPrompt","style","padding","border","borderRadius","textAlign","fontStyle","margin","value","onChange","e","target","rows","placeholder","width","marginBottom","fontSize","onCheckAnswer","checkButtonText","onShowHint","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/WhatHappensNextExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { loadWritingPromptsData } from '../../../../utils/exerciseDataService';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\n\r\nconst WhatHappensNextExercise = ({ language, days, onNext }) => {\r\n  const { t } = useI18n();\r\n  const [text, setText] = useState('');\r\n  const [currentPrompt, setCurrentPrompt] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n\r\n  const fetchNewPrompt = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCurrentPrompt('');\r\n    setText('');\r\n    setFeedback({ message: '', type: '' });\r\n    try {\r\n      const { data: promptsData, error: fetchError } = await loadWritingPromptsData(language, days);\r\n      if (fetchError) throw new Error(fetchError.message || 'Failed to load writing prompts.');\r\n\r\n      const prompts = promptsData?.what_happens_next;\r\n      if (prompts && prompts.length > 0) {\r\n        setCurrentPrompt(prompts[Math.floor(Math.random() * prompts.length)]);\r\n      } else {\r\n        setError(t('exercises.noWhatHappensNextPrompts', 'No \"What happens next?\" prompts found.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"WhatHappensNextExercise - Error fetching prompt:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n        fetchNewPrompt();\r\n    } else {\r\n        setIsLoading(false);\r\n        setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewPrompt, language, days]);\r\n  \r\n  const handleSubmit = () => {\r\n    if (text.trim().length < 10) {\r\n      setFeedback({ message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'), type: 'warning' });\r\n    } else {\r\n      setFeedback({ message: t('feedback.continuationSubmitted', 'Great! Continuation submitted.'), type: 'success' });\r\n    }\r\n  };\r\n  \r\n  const handleNextRequest = () => {\r\n      fetchNewPrompt(); // Fetches a new prompt for this specific exercise type\r\n      if(onNext) onNext(); // Informs parent if it wants to switch story type\r\n  }\r\n\r\n  const showHint = () => {\r\n      setFeedback({ message: t('feedback.hintWhatHappensNext', \"Hint: Think about potential consequences or new character introductions.\"), type: 'hint' });\r\n  }\r\n\r\n  if (isLoading) return <p>{t('loading.writingPrompts', 'Loading writing prompt...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!currentPrompt && !isLoading) return <FeedbackDisplay message={t('exercises.noPromptsToDisplay', 'No prompt to display.')} type=\"info\" />;\r\n\r\n  const latinizedPrompt = getLatinizedText(currentPrompt, language);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', textAlign: 'center' }}>\r\n      <h4>{t('titles.whatHappensNext', \"What Happens Next?\")}</h4>\r\n      <p style={{ fontStyle: 'italic', margin: '20px', ...(isLatinized && currentPrompt !== latinizedPrompt && {fontStyle: 'italic'}) }}>\r\n        \"{latinizedPrompt}\"\r\n      </p>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        rows=\"10\"\r\n        placeholder={t('placeholders.typeYourContinuationHere', 'Type your continuation here...')}\r\n        style={{ width: '95%', padding: '10px', marginBottom: '15px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em' }}\r\n      />\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} />\r\n      <ExerciseControls\r\n        onCheckAnswer={handleSubmit}\r\n        checkButtonText={t('buttons.done', 'Done')}\r\n        onShowHint={showHint}\r\n        onNextExercise={handleNextRequest}\r\n        config={{\r\n          showCheck: true,\r\n          showHint: true,\r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhatHappensNextExercise;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,eAAe,MAAM,uBAAuB;AACnD,SAASC,OAAO,QAAQ,8BAA8B;AACtD,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,sBAAsB,QAAQ,0CAA0C;AACjF,OAAOC,eAAe,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM;IAAEC;EAAE,CAAC,GAAGX,OAAO,CAAC,CAAC;EACvB,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IAAEuB,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM;IAAE6B;EAAY,CAAC,GAAGtB,sBAAsB,CAAC,CAAC;EAChD,MAAMuB,gBAAgB,GAAGtB,eAAe;EAExC,MAAMuB,cAAc,GAAG7B,WAAW,CAAC,YAAY;IAC7CwB,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACdR,gBAAgB,CAAC,EAAE,CAAC;IACpBF,OAAO,CAAC,EAAE,CAAC;IACXI,WAAW,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IACtC,IAAI;MACF,MAAM;QAAEQ,IAAI,EAAEC,WAAW;QAAEN,KAAK,EAAEO;MAAW,CAAC,GAAG,MAAM5B,sBAAsB,CAACM,QAAQ,EAAEC,IAAI,CAAC;MAC7F,IAAIqB,UAAU,EAAE,MAAM,IAAIC,KAAK,CAACD,UAAU,CAACX,OAAO,IAAI,iCAAiC,CAAC;MAExF,MAAMa,OAAO,GAAGH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,iBAAiB;MAC9C,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QACjClB,gBAAgB,CAACgB,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,OAAO,CAACE,MAAM,CAAC,CAAC,CAAC;MACvE,CAAC,MAAM;QACLV,QAAQ,CAACZ,CAAC,CAAC,oCAAoC,EAAE,wCAAwC,CAAC,CAAC;MAC7F;IACF,CAAC,CAAC,OAAO0B,GAAG,EAAE;MACZC,OAAO,CAAChB,KAAK,CAAC,kDAAkD,EAAEe,GAAG,CAAC;MACtEd,QAAQ,CAACc,GAAG,CAACnB,OAAO,IAAIP,CAAC,CAAC,wBAAwB,EAAE,+BAA+B,CAAC,CAAC;IACvF,CAAC,SAAS;MACRU,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACd,QAAQ,EAAEC,IAAI,EAAEG,CAAC,CAAC,CAAC;EAEvBf,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,IAAIC,IAAI,IAAIA,IAAI,CAACyB,MAAM,GAAG,CAAC,EAAE;MACrCP,cAAc,CAAC,CAAC;IACpB,CAAC,MAAM;MACHL,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACZ,CAAC,CAAC,sBAAsB,EAAE,sCAAsC,CAAC,CAAC;IAC/E;EACF,CAAC,EAAE,CAACe,cAAc,EAAEnB,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAEpC,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI3B,IAAI,CAAC4B,IAAI,CAAC,CAAC,CAACP,MAAM,GAAG,EAAE,EAAE;MAC3BhB,WAAW,CAAC;QAAEC,OAAO,EAAEP,CAAC,CAAC,0BAA0B,EAAE,yCAAyC,CAAC;QAAEQ,IAAI,EAAE;MAAU,CAAC,CAAC;IACrH,CAAC,MAAM;MACLF,WAAW,CAAC;QAAEC,OAAO,EAAEP,CAAC,CAAC,gCAAgC,EAAE,gCAAgC,CAAC;QAAEQ,IAAI,EAAE;MAAU,CAAC,CAAC;IAClH;EACF,CAAC;EAED,MAAMsB,iBAAiB,GAAGA,CAAA,KAAM;IAC5Bf,cAAc,CAAC,CAAC,CAAC,CAAC;IAClB,IAAGjB,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMiC,QAAQ,GAAGA,CAAA,KAAM;IACnBzB,WAAW,CAAC;MAAEC,OAAO,EAAEP,CAAC,CAAC,8BAA8B,EAAE,0EAA0E,CAAC;MAAEQ,IAAI,EAAE;IAAO,CAAC,CAAC;EACzJ,CAAC;EAED,IAAIC,SAAS,EAAE,oBAAOf,OAAA;IAAAsC,QAAA,EAAIhC,CAAC,CAAC,wBAAwB,EAAE,2BAA2B;EAAC;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACvF,IAAIzB,KAAK,EAAE,oBAAOjB,OAAA,CAACN,eAAe;IAACmB,OAAO,EAAEI,KAAM;IAACH,IAAI,EAAC;EAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAClE,IAAI,CAACjC,aAAa,IAAI,CAACM,SAAS,EAAE,oBAAOf,OAAA,CAACN,eAAe;IAACmB,OAAO,EAAEP,CAAC,CAAC,8BAA8B,EAAE,uBAAuB,CAAE;IAACQ,IAAI,EAAC;EAAM;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE7I,MAAMC,eAAe,GAAGvB,gBAAgB,CAACX,aAAa,EAAEP,QAAQ,CAAC;EAEjE,oBACEF,OAAA;IAAK4C,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,YAAY,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAV,QAAA,gBAClGtC,OAAA;MAAAsC,QAAA,EAAKhC,CAAC,CAAC,wBAAwB,EAAE,oBAAoB;IAAC;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5D1C,OAAA;MAAG4C,KAAK,EAAE;QAAEK,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE,MAAM;QAAE,IAAI/B,WAAW,IAAIV,aAAa,KAAKkC,eAAe,IAAI;UAACM,SAAS,EAAE;QAAQ,CAAC;MAAE,CAAE;MAAAX,QAAA,GAAC,IAChI,EAACK,eAAe,EAAC,IACpB;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ1C,OAAA;MACEmD,KAAK,EAAE5C,IAAK;MACZ6C,QAAQ,EAAGC,CAAC,IAAK7C,OAAO,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,IAAI,EAAC,IAAI;MACTC,WAAW,EAAElD,CAAC,CAAC,uCAAuC,EAAE,gCAAgC,CAAE;MAC1FsC,KAAK,EAAE;QAAEa,KAAK,EAAE,KAAK;QAAEZ,OAAO,EAAE,MAAM;QAAEa,YAAY,EAAE,MAAM;QAAEZ,MAAM,EAAE,gBAAgB;QAAEC,YAAY,EAAE,KAAK;QAAEY,QAAQ,EAAE;MAAM;IAAE;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChI,CAAC,eACF1C,OAAA,CAACN,eAAe;MAACmB,OAAO,EAAEF,QAAQ,CAACE,OAAQ;MAACC,IAAI,EAAEH,QAAQ,CAACG;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE1C,OAAA,CAACP,gBAAgB;MACfmE,aAAa,EAAE1B,YAAa;MAC5B2B,eAAe,EAAEvD,CAAC,CAAC,cAAc,EAAE,MAAM,CAAE;MAC3CwD,UAAU,EAAEzB,QAAS;MACrB0B,cAAc,EAAE3B,iBAAkB;MAClC4B,MAAM,EAAE;QACNC,SAAS,EAAE,IAAI;QACf5B,QAAQ,EAAE,IAAI;QACd6B,UAAU,EAAE,KAAK;QACjBC,QAAQ,EAAE;MACZ;IAAE;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/FIJ,uBAAuB;EAAA,QACbN,OAAO,EAOGE,sBAAsB;AAAA;AAAAuE,EAAA,GAR1CnE,uBAAuB;AAiG7B,eAAeA,uBAAuB;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}