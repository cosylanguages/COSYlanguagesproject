{"ast":null,"code":"import React from'react';import{useI18n}from'../../i18n/I18nContext';// Import useI18n\n// Translation keys for sub-practice options\n// These keys should exist in the translations.js file\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const SUB_PRACTICE_OPTIONS={vocabulary:[{id:'random-word',labelKey:'subPractice.vocabulary.randomWord'},{id:'random-image',labelKey:'subPractice.vocabulary.randomImage'},{id:'match-image-word',labelKey:'subPractice.vocabulary.matchImageWord'},{id:'listening',labelKey:'subPractice.vocabulary.listening'},{id:'type-opposite',labelKey:'subPractice.vocabulary.typeOpposite'},{id:'match-opposites',labelKey:'subPractice.vocabulary.matchOpposites'},{id:'build-word',labelKey:'subPractice.vocabulary.buildWord'}],grammar:[{id:'gender-articles',labelKey:'subPractice.grammar.genderArticles'},{id:'verbs-conjugation',labelKey:'subPractice.grammar.verbsConjugation'},{id:'possessives',labelKey:'subPractice.grammar.possessives'},{id:'word-order',labelKey:'subPractice.grammar.wordOrder'}],reading:[{id:'story',labelKey:'subPractice.reading.story'},{id:'interesting-fact',labelKey:'subPractice.reading.interestingFact'}],speaking:[{id:'question-practice',labelKey:'subPractice.speaking.question'},{id:'monologue',labelKey:'subPractice.speaking.monologue'}],writing:[{id:'writing-question',labelKey:'subPractice.writing.question'},{id:'storytelling',labelKey:'subPractice.writing.storytelling'}]};const SubPracticeMenu=_ref=>{let{mainCategory,activeSubPractice,onSubPracticeSelect}=_ref;const{t}=useI18n();// Initialize the t function\nif(!mainCategory||!SUB_PRACTICE_OPTIONS[mainCategory]){return null;}const options=SUB_PRACTICE_OPTIONS[mainCategory];const mainCategoryTitle=t(\"mainCategory.\".concat(mainCategory.toLowerCase()),mainCategory.charAt(0).toUpperCase()+mainCategory.slice(1));return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0',padding:'10px',border:'1px solid #eee',borderRadius:'5px'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{marginTop:'0',textAlign:'center'},children:[mainCategoryTitle,\" \",t('titles.options','Options')]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',flexWrap:'wrap',gap:'10px'},children:options.map(option=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>onSubPracticeSelect(option.id),style:{padding:'8px 12px',fontSize:'0.9rem',cursor:'pointer',backgroundColor:activeSubPractice===option.id?'#28a745':'#f8f9fa',color:activeSubPractice===option.id?'white':'black',border:'1px solid #ccc',borderRadius:'4px',minWidth:'150px',// Ensure buttons have a decent width\ntextAlign:'center'},\"aria-pressed\":activeSubPractice===option.id,children:[t(option.labelKey,option.id.replace(/-/g,' ')),\" \"]},option.id))})]});};export default SubPracticeMenu;","map":{"version":3,"names":["React","useI18n","jsxs","_jsxs","jsx","_jsx","SUB_PRACTICE_OPTIONS","vocabulary","id","labelKey","grammar","reading","speaking","writing","SubPracticeMenu","_ref","mainCategory","activeSubPractice","onSubPracticeSelect","t","options","mainCategoryTitle","concat","toLowerCase","charAt","toUpperCase","slice","style","margin","padding","border","borderRadius","children","marginTop","textAlign","display","justifyContent","flexWrap","gap","map","option","onClick","fontSize","cursor","backgroundColor","color","minWidth","replace"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/SubPracticeMenu.js"],"sourcesContent":["import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext'; // Import useI18n\r\n\r\n// Translation keys for sub-practice options\r\n// These keys should exist in the translations.js file\r\nconst SUB_PRACTICE_OPTIONS = {\r\n  vocabulary: [\r\n    { id: 'random-word', labelKey: 'subPractice.vocabulary.randomWord' }, \r\n    { id: 'random-image', labelKey: 'subPractice.vocabulary.randomImage' }, \r\n    { id: 'match-image-word', labelKey: 'subPractice.vocabulary.matchImageWord' },\r\n    { id: 'listening', labelKey: 'subPractice.vocabulary.listening' }, \r\n    { id: 'type-opposite', labelKey: 'subPractice.vocabulary.typeOpposite' }, \r\n    { id: 'match-opposites', labelKey: 'subPractice.vocabulary.matchOpposites' },\r\n    { id: 'build-word', labelKey: 'subPractice.vocabulary.buildWord' },\r\n  ],\r\n  grammar: [\r\n    { id: 'gender-articles', labelKey: 'subPractice.grammar.genderArticles' },\r\n    { id: 'verbs-conjugation', labelKey: 'subPractice.grammar.verbsConjugation' },\r\n    { id: 'possessives', labelKey: 'subPractice.grammar.possessives' },\r\n    { id: 'word-order', labelKey: 'subPractice.grammar.wordOrder' },\r\n  ],\r\n  reading: [\r\n    { id: 'story', labelKey: 'subPractice.reading.story' },\r\n    { id: 'interesting-fact', labelKey: 'subPractice.reading.interestingFact' },\r\n  ],\r\n  speaking: [\r\n    { id: 'question-practice', labelKey: 'subPractice.speaking.question' },\r\n    { id: 'monologue', labelKey: 'subPractice.speaking.monologue' },\r\n  ],\r\n  writing: [\r\n    { id: 'writing-question', labelKey: 'subPractice.writing.question' },\r\n    { id: 'storytelling', labelKey: 'subPractice.writing.storytelling' },\r\n  ],\r\n};\r\n\r\nconst SubPracticeMenu = ({ mainCategory, activeSubPractice, onSubPracticeSelect }) => {\r\n  const { t } = useI18n(); // Initialize the t function\r\n\r\n  if (!mainCategory || !SUB_PRACTICE_OPTIONS[mainCategory]) {\r\n    return null;\r\n  }\r\n\r\n  const options = SUB_PRACTICE_OPTIONS[mainCategory];\r\n  const mainCategoryTitle = t(`mainCategory.${mainCategory.toLowerCase()}`, mainCategory.charAt(0).toUpperCase() + mainCategory.slice(1));\r\n\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #eee', borderRadius: '5px' }}>\r\n      <h3 style={{ marginTop: '0', textAlign: 'center' }}>{mainCategoryTitle} {t('titles.options', 'Options')}</h3>\r\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '10px' }}>\r\n        {options.map((option) => (\r\n          <button\r\n            key={option.id}\r\n            onClick={() => onSubPracticeSelect(option.id)}\r\n            style={{\r\n              padding: '8px 12px',\r\n              fontSize: '0.9rem',\r\n              cursor: 'pointer',\r\n              backgroundColor: activeSubPractice === option.id ? '#28a745' : '#f8f9fa',\r\n              color: activeSubPractice === option.id ? 'white' : 'black',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '4px',\r\n              minWidth: '150px', // Ensure buttons have a decent width\r\n              textAlign: 'center',\r\n            }}\r\n            aria-pressed={activeSubPractice === option.id}\r\n          >\r\n            {t(option.labelKey, option.id.replace(/-/g, ' '))} {/* Use t function for labels, with fallback */}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubPracticeMenu;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,wBAAwB,CAAE;AAElD;AACA;AAAA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,oBAAoB,CAAG,CAC3BC,UAAU,CAAE,CACV,CAAEC,EAAE,CAAE,aAAa,CAAEC,QAAQ,CAAE,mCAAoC,CAAC,CACpE,CAAED,EAAE,CAAE,cAAc,CAAEC,QAAQ,CAAE,oCAAqC,CAAC,CACtE,CAAED,EAAE,CAAE,kBAAkB,CAAEC,QAAQ,CAAE,uCAAwC,CAAC,CAC7E,CAAED,EAAE,CAAE,WAAW,CAAEC,QAAQ,CAAE,kCAAmC,CAAC,CACjE,CAAED,EAAE,CAAE,eAAe,CAAEC,QAAQ,CAAE,qCAAsC,CAAC,CACxE,CAAED,EAAE,CAAE,iBAAiB,CAAEC,QAAQ,CAAE,uCAAwC,CAAC,CAC5E,CAAED,EAAE,CAAE,YAAY,CAAEC,QAAQ,CAAE,kCAAmC,CAAC,CACnE,CACDC,OAAO,CAAE,CACP,CAAEF,EAAE,CAAE,iBAAiB,CAAEC,QAAQ,CAAE,oCAAqC,CAAC,CACzE,CAAED,EAAE,CAAE,mBAAmB,CAAEC,QAAQ,CAAE,sCAAuC,CAAC,CAC7E,CAAED,EAAE,CAAE,aAAa,CAAEC,QAAQ,CAAE,iCAAkC,CAAC,CAClE,CAAED,EAAE,CAAE,YAAY,CAAEC,QAAQ,CAAE,+BAAgC,CAAC,CAChE,CACDE,OAAO,CAAE,CACP,CAAEH,EAAE,CAAE,OAAO,CAAEC,QAAQ,CAAE,2BAA4B,CAAC,CACtD,CAAED,EAAE,CAAE,kBAAkB,CAAEC,QAAQ,CAAE,qCAAsC,CAAC,CAC5E,CACDG,QAAQ,CAAE,CACR,CAAEJ,EAAE,CAAE,mBAAmB,CAAEC,QAAQ,CAAE,+BAAgC,CAAC,CACtE,CAAED,EAAE,CAAE,WAAW,CAAEC,QAAQ,CAAE,gCAAiC,CAAC,CAChE,CACDI,OAAO,CAAE,CACP,CAAEL,EAAE,CAAE,kBAAkB,CAAEC,QAAQ,CAAE,8BAA+B,CAAC,CACpE,CAAED,EAAE,CAAE,cAAc,CAAEC,QAAQ,CAAE,kCAAmC,CAAC,CAExE,CAAC,CAED,KAAM,CAAAK,eAAe,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,YAAY,CAAEC,iBAAiB,CAAEC,mBAAoB,CAAC,CAAAH,IAAA,CAC/E,KAAM,CAAEI,CAAE,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAAE;AAEzB,GAAI,CAACe,YAAY,EAAI,CAACV,oBAAoB,CAACU,YAAY,CAAC,CAAE,CACxD,MAAO,KAAI,CACb,CAEA,KAAM,CAAAI,OAAO,CAAGd,oBAAoB,CAACU,YAAY,CAAC,CAClD,KAAM,CAAAK,iBAAiB,CAAGF,CAAC,iBAAAG,MAAA,CAAiBN,YAAY,CAACO,WAAW,CAAC,CAAC,EAAIP,YAAY,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGT,YAAY,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,CAGvI,mBACEvB,KAAA,QAAKwB,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAQ,CAAEC,OAAO,CAAE,MAAM,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAC,QAAA,eAC/F7B,KAAA,OAAIwB,KAAK,CAAE,CAAEM,SAAS,CAAE,GAAG,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAF,QAAA,EAAEX,iBAAiB,CAAC,GAAC,CAACF,CAAC,CAAC,gBAAgB,CAAE,SAAS,CAAC,EAAK,CAAC,cAC7Gd,IAAA,QAAKsB,KAAK,CAAE,CAAEQ,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAN,QAAA,CACtFZ,OAAO,CAACmB,GAAG,CAAEC,MAAM,eAClBrC,KAAA,WAEEsC,OAAO,CAAEA,CAAA,GAAMvB,mBAAmB,CAACsB,MAAM,CAAChC,EAAE,CAAE,CAC9CmB,KAAK,CAAE,CACLE,OAAO,CAAE,UAAU,CACnBa,QAAQ,CAAE,QAAQ,CAClBC,MAAM,CAAE,SAAS,CACjBC,eAAe,CAAE3B,iBAAiB,GAAKuB,MAAM,CAAChC,EAAE,CAAG,SAAS,CAAG,SAAS,CACxEqC,KAAK,CAAE5B,iBAAiB,GAAKuB,MAAM,CAAChC,EAAE,CAAG,OAAO,CAAG,OAAO,CAC1DsB,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,KAAK,CACnBe,QAAQ,CAAE,OAAO,CAAE;AACnBZ,SAAS,CAAE,QACb,CAAE,CACF,eAAcjB,iBAAiB,GAAKuB,MAAM,CAAChC,EAAG,CAAAwB,QAAA,EAE7Cb,CAAC,CAACqB,MAAM,CAAC/B,QAAQ,CAAE+B,MAAM,CAAChC,EAAE,CAACuC,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,CAAC,GAAC,GAf9CP,MAAM,CAAChC,EAgBN,CACT,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAM,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}