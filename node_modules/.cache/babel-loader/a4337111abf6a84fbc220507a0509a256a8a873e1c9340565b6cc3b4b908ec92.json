{"ast":null,"code":"// Defines API functions related to authentication (STATIC VERSION).\nconst STATIC_TEACHER_PIN=\"0000\";// A simple PIN for static mode\n/**\r\n * Logs in a teacher user with a PIN by checking against a static PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If login fails (e.g., incorrect PIN).\r\n */export async function loginTeacher(pin){console.log('Attempting static login with PIN:',pin);return new Promise((resolve,reject)=>{// Simulate async operation\nsetTimeout(()=>{if(pin===STATIC_TEACHER_PIN){console.log('Static login successful.');resolve({token:'static-mock-token',// Dummy token\nuserId:'static-teacher-01',role:'teacher',username:'Mock Teacher'});}else{console.warn('Static login failed: Incorrect PIN.');reject(new Error('Incorrect PIN. Please try again.'));}},500);// Simulate network delay\n});}/**\r\n * Logs out a user (client-side only in static version).\r\n * @param {string} token - The authentication token (unused in static version).\r\n * @returns {Promise<object>} A promise that resolves to a logout confirmation.\r\n */export async function logoutUser(token){// In a static version, logout is primarily a client-side state clearing operation.\n// No server call is made. Token is unused.\nconsole.log('Static logout. Token (unused):',token);return Promise.resolve({message:'Logged out successfully (static).'});}","map":{"version":3,"names":["STATIC_TEACHER_PIN","loginTeacher","pin","console","log","Promise","resolve","reject","setTimeout","token","userId","role","username","warn","Error","logoutUser","message"],"sources":["/workspaces/COSYlanguagesproject/src/api/auth.js"],"sourcesContent":["// Defines API functions related to authentication (STATIC VERSION).\r\n\r\nconst STATIC_TEACHER_PIN = \"0000\"; // A simple PIN for static mode\r\n\r\n/**\r\n * Logs in a teacher user with a PIN by checking against a static PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If login fails (e.g., incorrect PIN).\r\n */\r\nexport async function loginTeacher(pin) {\r\n    console.log('Attempting static login with PIN:', pin);\r\n    return new Promise((resolve, reject) => {\r\n        // Simulate async operation\r\n        setTimeout(() => {\r\n            if (pin === STATIC_TEACHER_PIN) {\r\n                console.log('Static login successful.');\r\n                resolve({\r\n                    token: 'static-mock-token', // Dummy token\r\n                    userId: 'static-teacher-01',\r\n                    role: 'teacher',\r\n                    username: 'Mock Teacher'\r\n                });\r\n            } else {\r\n                console.warn('Static login failed: Incorrect PIN.');\r\n                reject(new Error('Incorrect PIN. Please try again.'));\r\n            }\r\n        }, 500); // Simulate network delay\r\n    });\r\n}\r\n\r\n/**\r\n * Logs out a user (client-side only in static version).\r\n * @param {string} token - The authentication token (unused in static version).\r\n * @returns {Promise<object>} A promise that resolves to a logout confirmation.\r\n */\r\nexport async function logoutUser(token) {\r\n    // In a static version, logout is primarily a client-side state clearing operation.\r\n    // No server call is made. Token is unused.\r\n    console.log('Static logout. Token (unused):', token);\r\n    return Promise.resolve({ message: 'Logged out successfully (static).' });\r\n}\r\n"],"mappings":"AAAA;AAEA,KAAM,CAAAA,kBAAkB,CAAG,MAAM,CAAE;AAEnC;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAC,YAAYA,CAACC,GAAG,CAAE,CACpCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEF,GAAG,CAAC,CACrD,MAAO,IAAI,CAAAG,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACpC;AACAC,UAAU,CAAC,IAAM,CACb,GAAIN,GAAG,GAAKF,kBAAkB,CAAE,CAC5BG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCE,OAAO,CAAC,CACJG,KAAK,CAAE,mBAAmB,CAAE;AAC5BC,MAAM,CAAE,mBAAmB,CAC3BC,IAAI,CAAE,SAAS,CACfC,QAAQ,CAAE,cACd,CAAC,CAAC,CACN,CAAC,IAAM,CACHT,OAAO,CAACU,IAAI,CAAC,qCAAqC,CAAC,CACnDN,MAAM,CAAC,GAAI,CAAAO,KAAK,CAAC,kCAAkC,CAAC,CAAC,CACzD,CACJ,CAAC,CAAE,GAAG,CAAC,CAAE;AACb,CAAC,CAAC,CACN,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAC,UAAUA,CAACN,KAAK,CAAE,CACpC;AACA;AACAN,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEK,KAAK,CAAC,CACpD,MAAO,CAAAJ,OAAO,CAACC,OAAO,CAAC,CAAEU,OAAO,CAAE,mCAAoC,CAAC,CAAC,CAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}