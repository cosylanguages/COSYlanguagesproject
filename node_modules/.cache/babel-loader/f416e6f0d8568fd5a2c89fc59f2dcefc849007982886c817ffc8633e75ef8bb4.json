{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/MatchOppositesExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { loadOppositesData } from '../../../../utils/exerciseDataService';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { shuffleArray } from '../../../../utils/arrayUtils';\nimport { useProgress } from '../../../../contexts/ProgressContext';\nimport { normalizeString } from '../../../../utils/stringUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchOppositesExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [pairs, setPairs] = useState([]);\n  const [wordsColumn, setWordsColumn] = useState([]);\n  const [oppositesColumn, setOppositesColumn] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null); // { value: string, element: HTMLElement }\n  const [selectedOpposite, setSelectedOpposite] = useState(null); // { value: string, element: HTMLElement }\n  const [matchedItems, setMatchedItems] = useState({}); // { [itemValue]: true }\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [numCorrectMatches, setNumCorrectMatches] = useState(0);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [lines, setLines] = useState([]); // For drawing lines between matched items\n\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const progress = useProgress();\n  const itemRefs = useRef({}); // To store refs for each matchable item\n  const columnsContainerRef = useRef(null); // Ref for the div containing both columns\n\n  const NUM_PAIRS_TO_DISPLAY = 4;\n  const setupExercise = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setFeedback({\n      message: '',\n      type: ''\n    });\n    setSelectedWord(null);\n    setSelectedOpposite(null);\n    setMatchedItems({});\n    setNumCorrectMatches(0);\n    setIsRevealed(false);\n    setLines([]); // Clear lines\n    itemRefs.current = {}; // Clear old refs\n\n    try {\n      const {\n        data: oppositesMap,\n        error: fetchError\n      } = await loadOppositesData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load opposites data.');\n      }\n      if (!oppositesMap || Object.keys(oppositesMap).length < NUM_PAIRS_TO_DISPLAY / 2) {\n        setError(`Not enough opposites data (found ${Object.keys(oppositesMap).length}) for this exercise. Need at least ${NUM_PAIRS_TO_DISPLAY / 2} base pairs.`);\n        setPairs([]);\n        setIsLoading(false);\n        return;\n      }\n      const allPossiblePairs = Object.entries(oppositesMap).map(([word, opposite]) => ({\n        word,\n        opposite\n      }));\n      const shuffledPossiblePairs = shuffleArray(allPossiblePairs);\n      const selectedPairs = shuffledPossiblePairs.slice(0, NUM_PAIRS_TO_DISPLAY);\n      if (selectedPairs.length < 1) {\n        setError('Could not select enough unique pairs for the exercise.');\n        setPairs([]);\n        setIsLoading(false);\n        return;\n      }\n      setPairs(selectedPairs);\n      setWordsColumn(shuffleArray(selectedPairs.map(p => p.word)));\n      setOppositesColumn(shuffleArray(selectedPairs.map(p => p.opposite)));\n    } catch (err) {\n      console.error(\"MatchOppositesExercise - Error setting up exercise:\", err);\n      setError(err.message || 'An unexpected error occurred.');\n      setPairs([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      setupExercise();\n    } else {\n      setIsLoading(false);\n      setError(\"Please select a language and day(s).\");\n    }\n  }, [setupExercise, exerciseKey, language, days]);\n  const handleItemClick = (itemValue, type, event) => {\n    if (matchedItems[itemValue] || isRevealed) return;\n    const currentSelection = {\n      value: itemValue,\n      element: event.target\n    };\n    if (type === 'word') {\n      if (selectedWord && selectedWord.element === event.target) {\n        setSelectedWord(null); // Deselect if clicking the same selected item\n        // event.target.classList.remove('selected'); // classList managed by style logic\n        return;\n      }\n      // if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('selected');\n      setSelectedWord(currentSelection);\n      // event.target.classList.add('selected');\n    } else if (type === 'opposite') {\n      if (selectedOpposite && selectedOpposite.element === event.target) {\n        setSelectedOpposite(null); // Deselect\n        // event.target.classList.remove('selected');\n        return;\n      }\n      // if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('selected');\n      setSelectedOpposite(currentSelection);\n      // event.target.classList.add('selected');\n    }\n  };\n  const drawLine = useCallback((el1, el2) => {\n    if (!el1 || !el2 || !columnsContainerRef.current) return;\n    const containerRect = columnsContainerRef.current.getBoundingClientRect();\n    const rect1 = el1.getBoundingClientRect();\n    const rect2 = el2.getBoundingClientRect();\n    const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\n    const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\n    const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\n    const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\n    const lineKey = `line-${normalizeString(el1.textContent)}-${normalizeString(el2.textContent)}`;\n    setLines(prevLines => [...prevLines, {\n      x1,\n      y1,\n      x2,\n      y2,\n      key: lineKey\n    }]);\n  }, []);\n  useEffect(() => {\n    if (selectedWord && selectedOpposite) {\n      const currentWordValue = selectedWord.value;\n      const currentOppositeValue = selectedOpposite.value;\n      const isCorrectMatch = pairs.some(pair => pair.word === currentWordValue && pair.opposite === currentOppositeValue);\n      const itemId = `matchopposite_${normalizeString(currentWordValue)}_${normalizeString(currentOppositeValue)}`;\n      if (isCorrectMatch) {\n        setFeedback({\n          message: 'Correct Match!',\n          type: 'correct'\n        });\n        setMatchedItems(prev => ({\n          ...prev,\n          [currentWordValue]: true,\n          [currentOppositeValue]: true\n        }));\n        if (selectedWord.element && selectedOpposite.element) {\n          drawLine(selectedWord.element, selectedOpposite.element);\n        }\n        setNumCorrectMatches(prev => prev + 1);\n        progress.awardCorrectAnswer(itemId, 'vocab-match-opposites', language);\n        setSelectedWord(null); // Clear selections immediately after correct match\n        setSelectedOpposite(null);\n      } else {\n        setFeedback({\n          message: 'Incorrect Match. Try again.',\n          type: 'incorrect'\n        });\n        progress.awardIncorrectAnswer(itemId, 'vocab-match-opposites', language);\n\n        // Visual feedback for incorrect (e.g., flash border red)\n        if (selectedWord.element) selectedWord.element.classList.add('incorrect-flash');\n        if (selectedOpposite.element) selectedOpposite.element.classList.add('incorrect-flash');\n        setTimeout(() => {\n          if (selectedWord && selectedWord.element) selectedWord.element.classList.remove('incorrect-flash');\n          if (selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('incorrect-flash');\n          setSelectedWord(null);\n          setSelectedOpposite(null);\n        }, 1000);\n      }\n    }\n  }, [selectedWord, selectedOpposite, pairs, progress, language, drawLine]);\n  useEffect(() => {\n    if (pairs.length > 0 && numCorrectMatches === pairs.length && !isRevealed) {\n      setFeedback({\n        message: 'All pairs matched! Well done!',\n        type: 'success'\n      });\n    }\n  }, [numCorrectMatches, pairs.length, isRevealed]);\n  const showHint = () => {\n    if (isRevealed || numCorrectMatches === pairs.length) return;\n    const unMatchedPairs = pairs.filter(p => !matchedItems[p.word] && !matchedItems[p.opposite]);\n    if (unMatchedPairs.length > 0) {\n      const hintPair = unMatchedPairs[0];\n      setFeedback({\n        message: `Hint: Try matching \"${getLatinizedText(hintPair.word, language)}\" or \"${getLatinizedText(hintPair.opposite, language)}\".`,\n        type: 'hint'\n      });\n    } else {\n      setFeedback({\n        message: \"No more hints available.\",\n        type: 'info'\n      });\n    }\n  };\n  const revealAllAnswers = () => {\n    setIsRevealed(true);\n    const allCurrentlyMatched = {};\n    const newLines = [];\n    pairs.forEach(pair => {\n      allCurrentlyMatched[pair.word] = true;\n      allCurrentlyMatched[pair.opposite] = true;\n      const itemId = `matchopposite_${normalizeString(pair.word)}_${normalizeString(pair.opposite)}`;\n      progress.scheduleReview(itemId, 'vocab-match-opposites', language, false); // Mark as incorrect for review if revealed\n\n      const el1 = itemRefs.current[`word-${pair.word}`];\n      const el2 = itemRefs.current[`opposite-${pair.opposite}`];\n      if (el1 && el2 && columnsContainerRef.current) {\n        const containerRect = columnsContainerRef.current.getBoundingClientRect();\n        const rect1 = el1.getBoundingClientRect();\n        const rect2 = el2.getBoundingClientRect();\n        const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\n        const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\n        const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\n        const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\n        newLines.push({\n          x1,\n          y1,\n          x2,\n          y2,\n          key: `line-${normalizeString(pair.word)}-${normalizeString(pair.opposite)}`\n        });\n      }\n    });\n    setMatchedItems(allCurrentlyMatched);\n    setLines(newLines);\n    setNumCorrectMatches(pairs.length);\n    setFeedback({\n      message: \"All pairs revealed.\",\n      type: 'info'\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading matching exercise...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: error,\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 21\n  }, this);\n  if (pairs.length === 0 && !isLoading) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: \"No pairs available for this exercise.\",\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 48\n  }, this);\n  const columnStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    alignItems: 'center',\n    margin: '0 15px',\n    flex: 1\n  };\n  const itemStyle = (value, type) => {\n    let base = {\n      padding: '12px 18px',\n      border: '2px solid #ddd',\n      borderRadius: '8px',\n      cursor: 'pointer',\n      minWidth: '150px',\n      textAlign: 'center',\n      backgroundColor: '#fff',\n      transition: 'background-color 0.2s, border-color 0.2s, transform 0.1s',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n    };\n    if (matchedItems[value]) {\n      base.backgroundColor = '#e6ffed';\n      base.borderColor = '#b7eac9';\n      base.cursor = 'default';\n      base.fontWeight = 'bold';\n    } else if (type === 'word' && (selectedWord === null || selectedWord === void 0 ? void 0 : selectedWord.value) === value || type === 'opposite' && (selectedOpposite === null || selectedOpposite === void 0 ? void 0 : selectedOpposite.value) === value) {\n      base.backgroundColor = '#e0efff';\n      base.borderColor = '#90caf9';\n      base.transform = 'scale(1.03)';\n    }\n    return base;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Match the Opposites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: columnsContainerRef,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '20px 0',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none',\n          zIndex: 0\n        },\n        children: lines.map(line => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: line.x1,\n          y1: line.y1,\n          x2: line.x2,\n          y2: line.y2,\n          stroke: \"#28a745\",\n          strokeWidth: \"3\",\n          opacity: \"0.7\"\n        }, line.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...columnStyle,\n          zIndex: 1\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), wordsColumn.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: el => itemRefs.current[`word-${word}`] = el,\n          style: itemStyle(word, 'word'),\n          onClick: e => handleItemClick(word, 'word', e),\n          disabled: matchedItems[word] || isRevealed,\n          className: (selectedWord === null || selectedWord === void 0 ? void 0 : selectedWord.value) === word && !matchedItems[word] ? 'selected-match-item' : '',\n          children: getLatinizedText(word, language)\n        }, `word-${word}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...columnStyle,\n          zIndex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Opposites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), oppositesColumn.map(opposite => /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: el => itemRefs.current[`opposite-${opposite}`] = el,\n          style: itemStyle(opposite, 'opposite'),\n          onClick: e => handleItemClick(opposite, 'opposite', e),\n          disabled: matchedItems[opposite] || isRevealed,\n          className: (selectedOpposite === null || selectedOpposite === void 0 ? void 0 : selectedOpposite.value) === opposite && !matchedItems[opposite] ? 'selected-match-item' : '',\n          children: getLatinizedText(opposite, language)\n        }, `opp-${opposite}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onShowHint: !isRevealed && numCorrectMatches < pairs.length ? showHint : undefined,\n      onRevealAnswer: !isRevealed && numCorrectMatches < pairs.length ? revealAllAnswers : undefined,\n      onNextExercise: setupExercise,\n      config: {\n        showCheck: false,\n        showHint: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\n        showReveal: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchOppositesExercise, \"rINlJpXSzByIesKR/UlVF6RvYQ4=\", false, function () {\n  return [useLatinizationContext, useProgress];\n});\n_c = MatchOppositesExercise;\nexport default MatchOppositesExercise;\nvar _c;\n$RefreshReg$(_c, \"MatchOppositesExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","loadOppositesData","FeedbackDisplay","ExerciseControls","useLatinizationContext","useLatinization","shuffleArray","useProgress","normalizeString","jsxDEV","_jsxDEV","MatchOppositesExercise","language","days","exerciseKey","_s","pairs","setPairs","wordsColumn","setWordsColumn","oppositesColumn","setOppositesColumn","selectedWord","setSelectedWord","selectedOpposite","setSelectedOpposite","matchedItems","setMatchedItems","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","numCorrectMatches","setNumCorrectMatches","isRevealed","setIsRevealed","lines","setLines","isLatinized","getLatinizedText","progress","itemRefs","columnsContainerRef","NUM_PAIRS_TO_DISPLAY","setupExercise","current","data","oppositesMap","fetchError","Error","Object","keys","length","allPossiblePairs","entries","map","word","opposite","shuffledPossiblePairs","selectedPairs","slice","p","err","console","handleItemClick","itemValue","event","currentSelection","value","element","target","drawLine","el1","el2","containerRect","getBoundingClientRect","rect1","rect2","x1","left","width","scrollLeft","y1","top","height","scrollTop","x2","y2","lineKey","textContent","prevLines","key","currentWordValue","currentOppositeValue","isCorrectMatch","some","pair","itemId","prev","awardCorrectAnswer","awardIncorrectAnswer","classList","add","setTimeout","remove","showHint","unMatchedPairs","filter","hintPair","revealAllAnswers","allCurrentlyMatched","newLines","forEach","scheduleReview","push","children","fileName","_jsxFileName","lineNumber","columnNumber","columnStyle","display","flexDirection","gap","alignItems","margin","flex","itemStyle","base","padding","border","borderRadius","cursor","minWidth","textAlign","backgroundColor","transition","boxShadow","borderColor","fontWeight","transform","style","maxWidth","ref","justifyContent","position","pointerEvents","zIndex","line","stroke","strokeWidth","opacity","el","onClick","e","disabled","className","onShowHint","undefined","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/MatchOppositesExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { loadOppositesData } from '../../../../utils/exerciseDataService';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\nimport { useProgress } from '../../../../contexts/ProgressContext'; \r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\n\r\nconst MatchOppositesExercise = ({ language, days, exerciseKey }) => {\r\n  const [pairs, setPairs] = useState([]);\r\n  const [wordsColumn, setWordsColumn] = useState([]);\r\n  const [oppositesColumn, setOppositesColumn] = useState([]);\r\n  const [selectedWord, setSelectedWord] = useState(null); // { value: string, element: HTMLElement }\r\n  const [selectedOpposite, setSelectedOpposite] = useState(null); // { value: string, element: HTMLElement }\r\n  const [matchedItems, setMatchedItems] = useState({}); // { [itemValue]: true }\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [numCorrectMatches, setNumCorrectMatches] = useState(0);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [lines, setLines] = useState([]); // For drawing lines between matched items\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const progress = useProgress();\r\n\r\n  const itemRefs = useRef({}); // To store refs for each matchable item\r\n  const columnsContainerRef = useRef(null); // Ref for the div containing both columns\r\n\r\n  const NUM_PAIRS_TO_DISPLAY = 4;\r\n\r\n  const setupExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setSelectedWord(null);\r\n    setSelectedOpposite(null);\r\n    setMatchedItems({});\r\n    setNumCorrectMatches(0);\r\n    setIsRevealed(false);\r\n    setLines([]); // Clear lines\r\n    itemRefs.current = {}; // Clear old refs\r\n\r\n    try {\r\n      const { data: oppositesMap, error: fetchError } = await loadOppositesData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load opposites data.');\r\n      }\r\n\r\n      if (!oppositesMap || Object.keys(oppositesMap).length < NUM_PAIRS_TO_DISPLAY / 2) {\r\n        setError(`Not enough opposites data (found ${Object.keys(oppositesMap).length}) for this exercise. Need at least ${NUM_PAIRS_TO_DISPLAY / 2} base pairs.`);\r\n        setPairs([]);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const allPossiblePairs = Object.entries(oppositesMap).map(([word, opposite]) => ({ word, opposite }));\r\n      const shuffledPossiblePairs = shuffleArray(allPossiblePairs);\r\n      const selectedPairs = shuffledPossiblePairs.slice(0, NUM_PAIRS_TO_DISPLAY);\r\n\r\n      if (selectedPairs.length < 1) {\r\n        setError('Could not select enough unique pairs for the exercise.');\r\n        setPairs([]);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      setPairs(selectedPairs);\r\n      setWordsColumn(shuffleArray(selectedPairs.map(p => p.word)));\r\n      setOppositesColumn(shuffleArray(selectedPairs.map(p => p.opposite)));\r\n\r\n    } catch (err) {\r\n      console.error(\"MatchOppositesExercise - Error setting up exercise:\", err);\r\n      setError(err.message || 'An unexpected error occurred.');\r\n      setPairs([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      setupExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(\"Please select a language and day(s).\");\r\n    }\r\n  }, [setupExercise, exerciseKey, language, days]);\r\n\r\n  const handleItemClick = (itemValue, type, event) => {\r\n    if (matchedItems[itemValue] || isRevealed) return;\r\n\r\n    const currentSelection = { value: itemValue, element: event.target };\r\n\r\n    if (type === 'word') {\r\n      if (selectedWord && selectedWord.element === event.target) {\r\n        setSelectedWord(null); // Deselect if clicking the same selected item\r\n        // event.target.classList.remove('selected'); // classList managed by style logic\r\n        return;\r\n      }\r\n      // if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('selected');\r\n      setSelectedWord(currentSelection);\r\n      // event.target.classList.add('selected');\r\n    } else if (type === 'opposite') {\r\n      if (selectedOpposite && selectedOpposite.element === event.target) {\r\n        setSelectedOpposite(null); // Deselect\r\n        // event.target.classList.remove('selected');\r\n        return;\r\n      }\r\n      // if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('selected');\r\n      setSelectedOpposite(currentSelection);\r\n      // event.target.classList.add('selected');\r\n    }\r\n  };\r\n\r\n  const drawLine = useCallback((el1, el2) => {\r\n    if (!el1 || !el2 || !columnsContainerRef.current) return;\r\n\r\n    const containerRect = columnsContainerRef.current.getBoundingClientRect();\r\n    const rect1 = el1.getBoundingClientRect();\r\n    const rect2 = el2.getBoundingClientRect();\r\n\r\n    const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n    const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n    const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n    const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n    \r\n    const lineKey = `line-${normalizeString(el1.textContent)}-${normalizeString(el2.textContent)}`;\r\n    setLines(prevLines => [...prevLines, { x1, y1, x2, y2, key: lineKey }]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedWord && selectedOpposite) {\r\n      const currentWordValue = selectedWord.value;\r\n      const currentOppositeValue = selectedOpposite.value;\r\n      const isCorrectMatch = pairs.some(pair =>\r\n        (pair.word === currentWordValue && pair.opposite === currentOppositeValue)\r\n      );\r\n      const itemId = `matchopposite_${normalizeString(currentWordValue)}_${normalizeString(currentOppositeValue)}`;\r\n\r\n      if (isCorrectMatch) {\r\n        setFeedback({ message: 'Correct Match!', type: 'correct' });\r\n        setMatchedItems(prev => ({ ...prev, [currentWordValue]: true, [currentOppositeValue]: true }));\r\n        \r\n        if (selectedWord.element && selectedOpposite.element) {\r\n          drawLine(selectedWord.element, selectedOpposite.element);\r\n        }\r\n        \r\n        setNumCorrectMatches(prev => prev + 1);\r\n        progress.awardCorrectAnswer(itemId, 'vocab-match-opposites', language);\r\n        \r\n        setSelectedWord(null); // Clear selections immediately after correct match\r\n        setSelectedOpposite(null);\r\n\r\n      } else {\r\n        setFeedback({ message: 'Incorrect Match. Try again.', type: 'incorrect' });\r\n        progress.awardIncorrectAnswer(itemId, 'vocab-match-opposites', language);\r\n        \r\n        // Visual feedback for incorrect (e.g., flash border red)\r\n        if(selectedWord.element) selectedWord.element.classList.add('incorrect-flash');\r\n        if(selectedOpposite.element) selectedOpposite.element.classList.add('incorrect-flash');\r\n        \r\n        setTimeout(() => {\r\n            if(selectedWord && selectedWord.element) selectedWord.element.classList.remove('incorrect-flash');\r\n            if(selectedOpposite && selectedOpposite.element) selectedOpposite.element.classList.remove('incorrect-flash');\r\n            setSelectedWord(null);\r\n            setSelectedOpposite(null);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [selectedWord, selectedOpposite, pairs, progress, language, drawLine]);\r\n\r\n  useEffect(() => {\r\n    if (pairs.length > 0 && numCorrectMatches === pairs.length && !isRevealed) {\r\n      setFeedback({ message: 'All pairs matched! Well done!', type: 'success' });\r\n    }\r\n  }, [numCorrectMatches, pairs.length, isRevealed]);\r\n\r\n  const showHint = () => {\r\n    if (isRevealed || numCorrectMatches === pairs.length) return;\r\n    const unMatchedPairs = pairs.filter(p => !matchedItems[p.word] && !matchedItems[p.opposite]);\r\n    if (unMatchedPairs.length > 0) {\r\n      const hintPair = unMatchedPairs[0];\r\n      setFeedback({ message: `Hint: Try matching \"${getLatinizedText(hintPair.word, language)}\" or \"${getLatinizedText(hintPair.opposite, language)}\".`, type: 'hint' });\r\n    } else {\r\n      setFeedback({ message: \"No more hints available.\", type: 'info' });\r\n    }\r\n  };\r\n\r\n  const revealAllAnswers = () => {\r\n    setIsRevealed(true);\r\n    const allCurrentlyMatched = {};\r\n    const newLines = [];\r\n    pairs.forEach(pair => {\r\n      allCurrentlyMatched[pair.word] = true;\r\n      allCurrentlyMatched[pair.opposite] = true;\r\n      const itemId = `matchopposite_${normalizeString(pair.word)}_${normalizeString(pair.opposite)}`;\r\n      progress.scheduleReview(itemId, 'vocab-match-opposites', language, false); // Mark as incorrect for review if revealed\r\n\r\n      const el1 = itemRefs.current[`word-${pair.word}`];\r\n      const el2 = itemRefs.current[`opposite-${pair.opposite}`];\r\n      if (el1 && el2 && columnsContainerRef.current) {\r\n        const containerRect = columnsContainerRef.current.getBoundingClientRect();\r\n        const rect1 = el1.getBoundingClientRect();\r\n        const rect2 = el2.getBoundingClientRect();\r\n        const x1 = rect1.left + rect1.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n        const y1 = rect1.top + rect1.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n        const x2 = rect2.left + rect2.width / 2 - containerRect.left + columnsContainerRef.current.scrollLeft;\r\n        const y2 = rect2.top + rect2.height / 2 - containerRect.top + columnsContainerRef.current.scrollTop;\r\n        newLines.push({ x1, y1, x2, y2, key: `line-${normalizeString(pair.word)}-${normalizeString(pair.opposite)}` });\r\n      }\r\n    });\r\n    setMatchedItems(allCurrentlyMatched);\r\n    setLines(newLines);\r\n    setNumCorrectMatches(pairs.length);\r\n    setFeedback({ message: \"All pairs revealed.\", type: 'info' });\r\n  };\r\n\r\n  if (isLoading) return <p>Loading matching exercise...</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (pairs.length === 0 && !isLoading) return <FeedbackDisplay message=\"No pairs available for this exercise.\" type=\"info\" />;\r\n\r\n  const columnStyle = { display: 'flex', flexDirection: 'column', gap: '8px', alignItems: 'center', margin: '0 15px', flex: 1 };\r\n  const itemStyle = (value, type) => {\r\n    let base = {\r\n      padding: '12px 18px',\r\n      border: '2px solid #ddd',\r\n      borderRadius: '8px',\r\n      cursor: 'pointer',\r\n      minWidth: '150px',\r\n      textAlign: 'center',\r\n      backgroundColor: '#fff',\r\n      transition: 'background-color 0.2s, border-color 0.2s, transform 0.1s',\r\n      boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\r\n    };\r\n    if (matchedItems[value]) {\r\n      base.backgroundColor = '#e6ffed';\r\n      base.borderColor = '#b7eac9';\r\n      base.cursor = 'default';\r\n      base.fontWeight = 'bold';\r\n    } else if ((type === 'word' && selectedWord?.value === value) || (type === 'opposite' && selectedOpposite?.value === value)) {\r\n      base.backgroundColor = '#e0efff';\r\n      base.borderColor = '#90caf9';\r\n      base.transform = 'scale(1.03)';\r\n    }\r\n    return base;\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '600px', margin: 'auto' }}>\r\n      <h3>Match the Opposites</h3>\r\n      <div \r\n        ref={columnsContainerRef} \r\n        style={{ display: 'flex', justifyContent: 'center', margin: '20px 0', position: 'relative' }}\r\n      >\r\n        <svg \r\n          style={{ \r\n            position: 'absolute', top: 0, left: 0, \r\n            width: '100%', height: '100%', \r\n            pointerEvents: 'none', zIndex: 0 \r\n          }}\r\n        >\r\n          {lines.map(line => (\r\n            <line \r\n              key={line.key} \r\n              x1={line.x1} y1={line.y1} \r\n              x2={line.x2} y2={line.y2} \r\n              stroke=\"#28a745\" strokeWidth=\"3\" opacity=\"0.7\"\r\n            />\r\n          ))}\r\n        </svg>\r\n        <div style={{...columnStyle, zIndex: 1}}> {/* Ensure columns are above SVG lines */}\r\n          <h4>Words</h4>\r\n          {wordsColumn.map(word => (\r\n            <button\r\n              key={`word-${word}`}\r\n              ref={el => itemRefs.current[`word-${word}`] = el}\r\n              style={itemStyle(word, 'word')}\r\n              onClick={(e) => handleItemClick(word, 'word', e)}\r\n              disabled={matchedItems[word] || isRevealed}\r\n              className={ (selectedWord?.value === word && !matchedItems[word]) ? 'selected-match-item' : '' }\r\n            >\r\n              {getLatinizedText(word, language)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div style={{...columnStyle, zIndex: 1}}>\r\n          <h4>Opposites</h4>\r\n          {oppositesColumn.map(opposite => (\r\n            <button\r\n              key={`opp-${opposite}`}\r\n              ref={el => itemRefs.current[`opposite-${opposite}`] = el}\r\n              style={itemStyle(opposite, 'opposite')}\r\n              onClick={(e) => handleItemClick(opposite, 'opposite', e)}\r\n              disabled={matchedItems[opposite] || isRevealed}\r\n              className={ (selectedOpposite?.value === opposite && !matchedItems[opposite]) ? 'selected-match-item' : '' }\r\n            >\r\n              {getLatinizedText(opposite, language)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      <ExerciseControls\r\n        onShowHint={!isRevealed && numCorrectMatches < pairs.length ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && numCorrectMatches < pairs.length ? revealAllAnswers : undefined}\r\n        onNextExercise={setupExercise}\r\n        config={{\r\n          showCheck: false,\r\n          showHint: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\r\n          showReveal: !isRevealed && numCorrectMatches < pairs.length && pairs.length > 0,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchOppositesExercise;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,sBAAsB,QAAQ,0CAA0C;AACjF,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,eAAe,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC;IAAEiC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAM;IAAE6C;EAAY,CAAC,GAAGtC,sBAAsB,CAAC,CAAC;EAChD,MAAMuC,gBAAgB,GAAGtC,eAAe;EACxC,MAAMuC,QAAQ,GAAGrC,WAAW,CAAC,CAAC;EAE9B,MAAMsC,QAAQ,GAAG7C,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAM8C,mBAAmB,GAAG9C,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C,MAAM+C,oBAAoB,GAAG,CAAC;EAE9B,MAAMC,aAAa,GAAGjD,WAAW,CAAC,YAAY;IAC5CkC,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACdN,WAAW,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IACtCR,eAAe,CAAC,IAAI,CAAC;IACrBE,mBAAmB,CAAC,IAAI,CAAC;IACzBE,eAAe,CAAC,CAAC,CAAC,CAAC;IACnBU,oBAAoB,CAAC,CAAC,CAAC;IACvBE,aAAa,CAAC,KAAK,CAAC;IACpBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdI,QAAQ,CAACI,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvB,IAAI;MACF,MAAM;QAAEC,IAAI,EAAEC,YAAY;QAAEjB,KAAK,EAAEkB;MAAW,CAAC,GAAG,MAAMnD,iBAAiB,CAACW,QAAQ,EAAEC,IAAI,CAAC;MACzF,IAAIuC,UAAU,EAAE;QACd,MAAM,IAAIC,KAAK,CAACD,UAAU,CAACtB,OAAO,IAAIsB,UAAU,CAAClB,KAAK,IAAI,gCAAgC,CAAC;MAC7F;MAEA,IAAI,CAACiB,YAAY,IAAIG,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,MAAM,GAAGT,oBAAoB,GAAG,CAAC,EAAE;QAChFZ,QAAQ,CAAC,oCAAoCmB,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,MAAM,sCAAsCT,oBAAoB,GAAG,CAAC,cAAc,CAAC;QAC1J9B,QAAQ,CAAC,EAAE,CAAC;QACZgB,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MAEA,MAAMwB,gBAAgB,GAAGH,MAAM,CAACI,OAAO,CAACP,YAAY,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,QAAQ,CAAC,MAAM;QAAED,IAAI;QAAEC;MAAS,CAAC,CAAC,CAAC;MACrG,MAAMC,qBAAqB,GAAGxD,YAAY,CAACmD,gBAAgB,CAAC;MAC5D,MAAMM,aAAa,GAAGD,qBAAqB,CAACE,KAAK,CAAC,CAAC,EAAEjB,oBAAoB,CAAC;MAE1E,IAAIgB,aAAa,CAACP,MAAM,GAAG,CAAC,EAAE;QAC5BrB,QAAQ,CAAC,wDAAwD,CAAC;QAClElB,QAAQ,CAAC,EAAE,CAAC;QACZgB,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MAEAhB,QAAQ,CAAC8C,aAAa,CAAC;MACvB5C,cAAc,CAACb,YAAY,CAACyD,aAAa,CAACJ,GAAG,CAACM,CAAC,IAAIA,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;MAC5DvC,kBAAkB,CAACf,YAAY,CAACyD,aAAa,CAACJ,GAAG,CAACM,CAAC,IAAIA,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;IAEtE,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACjC,KAAK,CAAC,qDAAqD,EAAEgC,GAAG,CAAC;MACzE/B,QAAQ,CAAC+B,GAAG,CAACpC,OAAO,IAAI,+BAA+B,CAAC;MACxDb,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRgB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACrB,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAEpBf,SAAS,CAAC,MAAM;IACd,IAAIc,QAAQ,IAAIC,IAAI,IAAIA,IAAI,CAAC2C,MAAM,GAAG,CAAC,EAAE;MACvCR,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLf,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC,EAAE,CAACa,aAAa,EAAElC,WAAW,EAAEF,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAEhD,MAAMuD,eAAe,GAAGA,CAACC,SAAS,EAAEtC,IAAI,EAAEuC,KAAK,KAAK;IAClD,IAAI5C,YAAY,CAAC2C,SAAS,CAAC,IAAI/B,UAAU,EAAE;IAE3C,MAAMiC,gBAAgB,GAAG;MAAEC,KAAK,EAAEH,SAAS;MAAEI,OAAO,EAAEH,KAAK,CAACI;IAAO,CAAC;IAEpE,IAAI3C,IAAI,KAAK,MAAM,EAAE;MACnB,IAAIT,YAAY,IAAIA,YAAY,CAACmD,OAAO,KAAKH,KAAK,CAACI,MAAM,EAAE;QACzDnD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvB;QACA;MACF;MACA;MACAA,eAAe,CAACgD,gBAAgB,CAAC;MACjC;IACF,CAAC,MAAM,IAAIxC,IAAI,KAAK,UAAU,EAAE;MAC9B,IAAIP,gBAAgB,IAAIA,gBAAgB,CAACiD,OAAO,KAAKH,KAAK,CAACI,MAAM,EAAE;QACjEjD,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B;QACA;MACF;MACA;MACAA,mBAAmB,CAAC8C,gBAAgB,CAAC;MACrC;IACF;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG5E,WAAW,CAAC,CAAC6E,GAAG,EAAEC,GAAG,KAAK;IACzC,IAAI,CAACD,GAAG,IAAI,CAACC,GAAG,IAAI,CAAC/B,mBAAmB,CAACG,OAAO,EAAE;IAElD,MAAM6B,aAAa,GAAGhC,mBAAmB,CAACG,OAAO,CAAC8B,qBAAqB,CAAC,CAAC;IACzE,MAAMC,KAAK,GAAGJ,GAAG,CAACG,qBAAqB,CAAC,CAAC;IACzC,MAAME,KAAK,GAAGJ,GAAG,CAACE,qBAAqB,CAAC,CAAC;IAEzC,MAAMG,EAAE,GAAGF,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACI,KAAK,GAAG,CAAC,GAAGN,aAAa,CAACK,IAAI,GAAGrC,mBAAmB,CAACG,OAAO,CAACoC,UAAU;IACrG,MAAMC,EAAE,GAAGN,KAAK,CAACO,GAAG,GAAGP,KAAK,CAACQ,MAAM,GAAG,CAAC,GAAGV,aAAa,CAACS,GAAG,GAAGzC,mBAAmB,CAACG,OAAO,CAACwC,SAAS;IACnG,MAAMC,EAAE,GAAGT,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,KAAK,GAAG,CAAC,GAAGN,aAAa,CAACK,IAAI,GAAGrC,mBAAmB,CAACG,OAAO,CAACoC,UAAU;IACrG,MAAMM,EAAE,GAAGV,KAAK,CAACM,GAAG,GAAGN,KAAK,CAACO,MAAM,GAAG,CAAC,GAAGV,aAAa,CAACS,GAAG,GAAGzC,mBAAmB,CAACG,OAAO,CAACwC,SAAS;IAEnG,MAAMG,OAAO,GAAG,QAAQpF,eAAe,CAACoE,GAAG,CAACiB,WAAW,CAAC,IAAIrF,eAAe,CAACqE,GAAG,CAACgB,WAAW,CAAC,EAAE;IAC9FpD,QAAQ,CAACqD,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE;MAAEZ,EAAE;MAAEI,EAAE;MAAEI,EAAE;MAAEC,EAAE;MAAEI,GAAG,EAAEH;IAAQ,CAAC,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN9F,SAAS,CAAC,MAAM;IACd,IAAIwB,YAAY,IAAIE,gBAAgB,EAAE;MACpC,MAAMwE,gBAAgB,GAAG1E,YAAY,CAACkD,KAAK;MAC3C,MAAMyB,oBAAoB,GAAGzE,gBAAgB,CAACgD,KAAK;MACnD,MAAM0B,cAAc,GAAGlF,KAAK,CAACmF,IAAI,CAACC,IAAI,IACnCA,IAAI,CAACxC,IAAI,KAAKoC,gBAAgB,IAAII,IAAI,CAACvC,QAAQ,KAAKoC,oBACvD,CAAC;MACD,MAAMI,MAAM,GAAG,iBAAiB7F,eAAe,CAACwF,gBAAgB,CAAC,IAAIxF,eAAe,CAACyF,oBAAoB,CAAC,EAAE;MAE5G,IAAIC,cAAc,EAAE;QAClBrE,WAAW,CAAC;UAAEC,OAAO,EAAE,gBAAgB;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;QAC3DJ,eAAe,CAAC2E,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACN,gBAAgB,GAAG,IAAI;UAAE,CAACC,oBAAoB,GAAG;QAAK,CAAC,CAAC,CAAC;QAE9F,IAAI3E,YAAY,CAACmD,OAAO,IAAIjD,gBAAgB,CAACiD,OAAO,EAAE;UACpDE,QAAQ,CAACrD,YAAY,CAACmD,OAAO,EAAEjD,gBAAgB,CAACiD,OAAO,CAAC;QAC1D;QAEApC,oBAAoB,CAACiE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QACtC1D,QAAQ,CAAC2D,kBAAkB,CAACF,MAAM,EAAE,uBAAuB,EAAEzF,QAAQ,CAAC;QAEtEW,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvBE,mBAAmB,CAAC,IAAI,CAAC;MAE3B,CAAC,MAAM;QACLI,WAAW,CAAC;UAAEC,OAAO,EAAE,6BAA6B;UAAEC,IAAI,EAAE;QAAY,CAAC,CAAC;QAC1Ea,QAAQ,CAAC4D,oBAAoB,CAACH,MAAM,EAAE,uBAAuB,EAAEzF,QAAQ,CAAC;;QAExE;QACA,IAAGU,YAAY,CAACmD,OAAO,EAAEnD,YAAY,CAACmD,OAAO,CAACgC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9E,IAAGlF,gBAAgB,CAACiD,OAAO,EAAEjD,gBAAgB,CAACiD,OAAO,CAACgC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAEtFC,UAAU,CAAC,MAAM;UACb,IAAGrF,YAAY,IAAIA,YAAY,CAACmD,OAAO,EAAEnD,YAAY,CAACmD,OAAO,CAACgC,SAAS,CAACG,MAAM,CAAC,iBAAiB,CAAC;UACjG,IAAGpF,gBAAgB,IAAIA,gBAAgB,CAACiD,OAAO,EAAEjD,gBAAgB,CAACiD,OAAO,CAACgC,SAAS,CAACG,MAAM,CAAC,iBAAiB,CAAC;UAC7GrF,eAAe,CAAC,IAAI,CAAC;UACrBE,mBAAmB,CAAC,IAAI,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC,EAAE,CAACH,YAAY,EAAEE,gBAAgB,EAAER,KAAK,EAAE4B,QAAQ,EAAEhC,QAAQ,EAAE+D,QAAQ,CAAC,CAAC;EAEzE7E,SAAS,CAAC,MAAM;IACd,IAAIkB,KAAK,CAACwC,MAAM,GAAG,CAAC,IAAIpB,iBAAiB,KAAKpB,KAAK,CAACwC,MAAM,IAAI,CAAClB,UAAU,EAAE;MACzET,WAAW,CAAC;QAAEC,OAAO,EAAE,+BAA+B;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAACK,iBAAiB,EAAEpB,KAAK,CAACwC,MAAM,EAAElB,UAAU,CAAC,CAAC;EAEjD,MAAMuE,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIvE,UAAU,IAAIF,iBAAiB,KAAKpB,KAAK,CAACwC,MAAM,EAAE;IACtD,MAAMsD,cAAc,GAAG9F,KAAK,CAAC+F,MAAM,CAAC9C,CAAC,IAAI,CAACvC,YAAY,CAACuC,CAAC,CAACL,IAAI,CAAC,IAAI,CAAClC,YAAY,CAACuC,CAAC,CAACJ,QAAQ,CAAC,CAAC;IAC5F,IAAIiD,cAAc,CAACtD,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMwD,QAAQ,GAAGF,cAAc,CAAC,CAAC,CAAC;MAClCjF,WAAW,CAAC;QAAEC,OAAO,EAAE,uBAAuBa,gBAAgB,CAACqE,QAAQ,CAACpD,IAAI,EAAEhD,QAAQ,CAAC,SAAS+B,gBAAgB,CAACqE,QAAQ,CAACnD,QAAQ,EAAEjD,QAAQ,CAAC,IAAI;QAAEmB,IAAI,EAAE;MAAO,CAAC,CAAC;IACpK,CAAC,MAAM;MACLF,WAAW,CAAC;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;IACpE;EACF,CAAC;EAED,MAAMkF,gBAAgB,GAAGA,CAAA,KAAM;IAC7B1E,aAAa,CAAC,IAAI,CAAC;IACnB,MAAM2E,mBAAmB,GAAG,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,EAAE;IACnBnG,KAAK,CAACoG,OAAO,CAAChB,IAAI,IAAI;MACpBc,mBAAmB,CAACd,IAAI,CAACxC,IAAI,CAAC,GAAG,IAAI;MACrCsD,mBAAmB,CAACd,IAAI,CAACvC,QAAQ,CAAC,GAAG,IAAI;MACzC,MAAMwC,MAAM,GAAG,iBAAiB7F,eAAe,CAAC4F,IAAI,CAACxC,IAAI,CAAC,IAAIpD,eAAe,CAAC4F,IAAI,CAACvC,QAAQ,CAAC,EAAE;MAC9FjB,QAAQ,CAACyE,cAAc,CAAChB,MAAM,EAAE,uBAAuB,EAAEzF,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;;MAE3E,MAAMgE,GAAG,GAAG/B,QAAQ,CAACI,OAAO,CAAC,QAAQmD,IAAI,CAACxC,IAAI,EAAE,CAAC;MACjD,MAAMiB,GAAG,GAAGhC,QAAQ,CAACI,OAAO,CAAC,YAAYmD,IAAI,CAACvC,QAAQ,EAAE,CAAC;MACzD,IAAIe,GAAG,IAAIC,GAAG,IAAI/B,mBAAmB,CAACG,OAAO,EAAE;QAC7C,MAAM6B,aAAa,GAAGhC,mBAAmB,CAACG,OAAO,CAAC8B,qBAAqB,CAAC,CAAC;QACzE,MAAMC,KAAK,GAAGJ,GAAG,CAACG,qBAAqB,CAAC,CAAC;QACzC,MAAME,KAAK,GAAGJ,GAAG,CAACE,qBAAqB,CAAC,CAAC;QACzC,MAAMG,EAAE,GAAGF,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACI,KAAK,GAAG,CAAC,GAAGN,aAAa,CAACK,IAAI,GAAGrC,mBAAmB,CAACG,OAAO,CAACoC,UAAU;QACrG,MAAMC,EAAE,GAAGN,KAAK,CAACO,GAAG,GAAGP,KAAK,CAACQ,MAAM,GAAG,CAAC,GAAGV,aAAa,CAACS,GAAG,GAAGzC,mBAAmB,CAACG,OAAO,CAACwC,SAAS;QACnG,MAAMC,EAAE,GAAGT,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,KAAK,GAAG,CAAC,GAAGN,aAAa,CAACK,IAAI,GAAGrC,mBAAmB,CAACG,OAAO,CAACoC,UAAU;QACrG,MAAMM,EAAE,GAAGV,KAAK,CAACM,GAAG,GAAGN,KAAK,CAACO,MAAM,GAAG,CAAC,GAAGV,aAAa,CAACS,GAAG,GAAGzC,mBAAmB,CAACG,OAAO,CAACwC,SAAS;QACnG0B,QAAQ,CAACG,IAAI,CAAC;UAAEpC,EAAE;UAAEI,EAAE;UAAEI,EAAE;UAAEC,EAAE;UAAEI,GAAG,EAAE,QAAQvF,eAAe,CAAC4F,IAAI,CAACxC,IAAI,CAAC,IAAIpD,eAAe,CAAC4F,IAAI,CAACvC,QAAQ,CAAC;QAAG,CAAC,CAAC;MAChH;IACF,CAAC,CAAC;IACFlC,eAAe,CAACuF,mBAAmB,CAAC;IACpCzE,QAAQ,CAAC0E,QAAQ,CAAC;IAClB9E,oBAAoB,CAACrB,KAAK,CAACwC,MAAM,CAAC;IAClC3B,WAAW,CAAC;MAAEC,OAAO,EAAE,qBAAqB;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;EAC/D,CAAC;EAED,IAAIC,SAAS,EAAE,oBAAOtB,OAAA;IAAA6G,QAAA,EAAG;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACzD,IAAIzF,KAAK,EAAE,oBAAOxB,OAAA,CAACR,eAAe;IAAC4B,OAAO,EAAEI,KAAM;IAACH,IAAI,EAAC;EAAO;IAAAyF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAClE,IAAI3G,KAAK,CAACwC,MAAM,KAAK,CAAC,IAAI,CAACxB,SAAS,EAAE,oBAAOtB,OAAA,CAACR,eAAe;IAAC4B,OAAO,EAAC,uCAAuC;IAACC,IAAI,EAAC;EAAM;IAAAyF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE5H,MAAMC,WAAW,GAAG;IAAEC,OAAO,EAAE,MAAM;IAAEC,aAAa,EAAE,QAAQ;IAAEC,GAAG,EAAE,KAAK;IAAEC,UAAU,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAE,CAAC;EAC7H,MAAMC,SAAS,GAAGA,CAAC3D,KAAK,EAAEzC,IAAI,KAAK;IACjC,IAAIqG,IAAI,GAAG;MACTC,OAAO,EAAE,WAAW;MACpBC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE,QAAQ;MACnBC,eAAe,EAAE,MAAM;MACvBC,UAAU,EAAE,0DAA0D;MACtEC,SAAS,EAAE;IACb,CAAC;IACD,IAAInH,YAAY,CAAC8C,KAAK,CAAC,EAAE;MACvB4D,IAAI,CAACO,eAAe,GAAG,SAAS;MAChCP,IAAI,CAACU,WAAW,GAAG,SAAS;MAC5BV,IAAI,CAACI,MAAM,GAAG,SAAS;MACvBJ,IAAI,CAACW,UAAU,GAAG,MAAM;IAC1B,CAAC,MAAM,IAAKhH,IAAI,KAAK,MAAM,IAAI,CAAAT,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkD,KAAK,MAAKA,KAAK,IAAMzC,IAAI,KAAK,UAAU,IAAI,CAAAP,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEgD,KAAK,MAAKA,KAAM,EAAE;MAC3H4D,IAAI,CAACO,eAAe,GAAG,SAAS;MAChCP,IAAI,CAACU,WAAW,GAAG,SAAS;MAC5BV,IAAI,CAACY,SAAS,GAAG,aAAa;IAChC;IACA,OAAOZ,IAAI;EACb,CAAC;EAED,oBACE1H,OAAA;IAAKuI,KAAK,EAAE;MAAEP,SAAS,EAAE,QAAQ;MAAEL,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,YAAY,EAAE,KAAK;MAAEW,QAAQ,EAAE,OAAO;MAAEjB,MAAM,EAAE;IAAO,CAAE;IAAAV,QAAA,gBACrI7G,OAAA;MAAA6G,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjH,OAAA;MACEyI,GAAG,EAAErG,mBAAoB;MACzBmG,KAAK,EAAE;QAAEpB,OAAO,EAAE,MAAM;QAAEuB,cAAc,EAAE,QAAQ;QAAEnB,MAAM,EAAE,QAAQ;QAAEoB,QAAQ,EAAE;MAAW,CAAE;MAAA9B,QAAA,gBAE7F7G,OAAA;QACEuI,KAAK,EAAE;UACLI,QAAQ,EAAE,UAAU;UAAE9D,GAAG,EAAE,CAAC;UAAEJ,IAAI,EAAE,CAAC;UACrCC,KAAK,EAAE,MAAM;UAAEI,MAAM,EAAE,MAAM;UAC7B8D,aAAa,EAAE,MAAM;UAAEC,MAAM,EAAE;QACjC,CAAE;QAAAhC,QAAA,EAED/E,KAAK,CAACmB,GAAG,CAAC6F,IAAI,iBACb9I,OAAA;UAEEwE,EAAE,EAAEsE,IAAI,CAACtE,EAAG;UAACI,EAAE,EAAEkE,IAAI,CAAClE,EAAG;UACzBI,EAAE,EAAE8D,IAAI,CAAC9D,EAAG;UAACC,EAAE,EAAE6D,IAAI,CAAC7D,EAAG;UACzB8D,MAAM,EAAC,SAAS;UAACC,WAAW,EAAC,GAAG;UAACC,OAAO,EAAC;QAAK,GAHzCH,IAAI,CAACzD,GAAG;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjH,OAAA;QAAKuI,KAAK,EAAE;UAAC,GAAGrB,WAAW;UAAE2B,MAAM,EAAE;QAAC,CAAE;QAAAhC,QAAA,GAAC,GAAC,eACxC7G,OAAA;UAAA6G,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACbzG,WAAW,CAACyC,GAAG,CAACC,IAAI,iBACnBlD,OAAA;UAEEyI,GAAG,EAAES,EAAE,IAAI/G,QAAQ,CAACI,OAAO,CAAC,QAAQW,IAAI,EAAE,CAAC,GAAGgG,EAAG;UACjDX,KAAK,EAAEd,SAAS,CAACvE,IAAI,EAAE,MAAM,CAAE;UAC/BiG,OAAO,EAAGC,CAAC,IAAK1F,eAAe,CAACR,IAAI,EAAE,MAAM,EAAEkG,CAAC,CAAE;UACjDC,QAAQ,EAAErI,YAAY,CAACkC,IAAI,CAAC,IAAItB,UAAW;UAC3C0H,SAAS,EAAI,CAAA1I,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkD,KAAK,MAAKZ,IAAI,IAAI,CAAClC,YAAY,CAACkC,IAAI,CAAC,GAAI,qBAAqB,GAAG,EAAI;UAAA2D,QAAA,EAE/F5E,gBAAgB,CAACiB,IAAI,EAAEhD,QAAQ;QAAC,GAP5B,QAAQgD,IAAI,EAAE;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQb,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjH,OAAA;QAAKuI,KAAK,EAAE;UAAC,GAAGrB,WAAW;UAAE2B,MAAM,EAAE;QAAC,CAAE;QAAAhC,QAAA,gBACtC7G,OAAA;UAAA6G,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjBvG,eAAe,CAACuC,GAAG,CAACE,QAAQ,iBAC3BnD,OAAA;UAEEyI,GAAG,EAAES,EAAE,IAAI/G,QAAQ,CAACI,OAAO,CAAC,YAAYY,QAAQ,EAAE,CAAC,GAAG+F,EAAG;UACzDX,KAAK,EAAEd,SAAS,CAACtE,QAAQ,EAAE,UAAU,CAAE;UACvCgG,OAAO,EAAGC,CAAC,IAAK1F,eAAe,CAACP,QAAQ,EAAE,UAAU,EAAEiG,CAAC,CAAE;UACzDC,QAAQ,EAAErI,YAAY,CAACmC,QAAQ,CAAC,IAAIvB,UAAW;UAC/C0H,SAAS,EAAI,CAAAxI,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEgD,KAAK,MAAKX,QAAQ,IAAI,CAACnC,YAAY,CAACmC,QAAQ,CAAC,GAAI,qBAAqB,GAAG,EAAI;UAAA0D,QAAA,EAE3G5E,gBAAgB,CAACkB,QAAQ,EAAEjD,QAAQ;QAAC,GAPhC,OAAOiD,QAAQ,EAAE;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQhB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjH,OAAA,CAACR,eAAe;MAAC4B,OAAO,EAAEF,QAAQ,CAACE,OAAQ;MAACC,IAAI,EAAEH,QAAQ,CAACG,IAAK;MAACnB,QAAQ,EAAEA;IAAS;MAAA4G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFjH,OAAA,CAACP,gBAAgB;MACf8J,UAAU,EAAE,CAAC3H,UAAU,IAAIF,iBAAiB,GAAGpB,KAAK,CAACwC,MAAM,GAAGqD,QAAQ,GAAGqD,SAAU;MACnFC,cAAc,EAAE,CAAC7H,UAAU,IAAIF,iBAAiB,GAAGpB,KAAK,CAACwC,MAAM,GAAGyD,gBAAgB,GAAGiD,SAAU;MAC/FE,cAAc,EAAEpH,aAAc;MAC9BqH,MAAM,EAAE;QACNC,SAAS,EAAE,KAAK;QAChBzD,QAAQ,EAAE,CAACvE,UAAU,IAAIF,iBAAiB,GAAGpB,KAAK,CAACwC,MAAM,IAAIxC,KAAK,CAACwC,MAAM,GAAG,CAAC;QAC7E+G,UAAU,EAAE,CAACjI,UAAU,IAAIF,iBAAiB,GAAGpB,KAAK,CAACwC,MAAM,IAAIxC,KAAK,CAACwC,MAAM,GAAG,CAAC;QAC/EgH,QAAQ,EAAE;MACZ;IAAE;MAAAhD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5G,EAAA,CApTIJ,sBAAsB;EAAA,QAcFP,sBAAsB,EAE7BG,WAAW;AAAA;AAAAkK,EAAA,GAhBxB9J,sBAAsB;AAsT5B,eAAeA,sBAAsB;AAAC,IAAA8J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}