{"ast":null,"code":"import React from'react';import{useI18n}from'../../i18n/I18nContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PracticeCategoryNav=_ref=>{let{activeCategory,onCategorySelect}=_ref;const{t,allTranslations,language}=useI18n();// Get main categories from the translations for the current language\n// The mainCategory object should have keys like 'vocabulary', 'grammar', etc.\n// and values like 'ðŸ”  Vocabulary', 'ðŸ§© Grammar', etc.\nconst currentLanguageTranslations=allTranslations[language]||allTranslations.COSYenglish;// Ensure mainCategory exists and is an object, default to COSYenglish's mainCategory if not found or if it's not an object\nlet mainCategoriesSource=currentLanguageTranslations.mainCategory;if(typeof mainCategoriesSource!=='object'||mainCategoriesSource===null){mainCategoriesSource=allTranslations.COSYenglish.mainCategory||{};}const mainCategories=mainCategoriesSource;const practiceCategories=Object.keys(mainCategories).map(key=>({id:key,// e.g., 'vocabulary'\n// The label is directly from the mainCategory object's value, which is already translated.\n// If mainCategory values were keys (e.g., 'mainCategory.vocabulary'), we'd use t() here.\nlabel:mainCategories[key]}));return/*#__PURE__*/_jsx(\"div\",{style:{margin:'20px 0',display:'flex',justifyContent:'center',flexWrap:'wrap',gap:'10px'},children:practiceCategories.map(category=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>onCategorySelect(category.id),style:{padding:'10px 15px',fontSize:'1rem',cursor:'pointer',backgroundColor:activeCategory===category.id?'#007bff':'#f0f0f0',color:activeCategory===category.id?'white':'black',border:'1px solid #ccc',borderRadius:'5px'},\"aria-pressed\":activeCategory===category.id,children:category.label},category.id))});};export default PracticeCategoryNav;","map":{"version":3,"names":["React","useI18n","jsx","_jsx","PracticeCategoryNav","_ref","activeCategory","onCategorySelect","t","allTranslations","language","currentLanguageTranslations","COSYenglish","mainCategoriesSource","mainCategory","mainCategories","practiceCategories","Object","keys","map","key","id","label","style","margin","display","justifyContent","flexWrap","gap","children","category","onClick","padding","fontSize","cursor","backgroundColor","color","border","borderRadius"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/PracticeCategoryNav.js"],"sourcesContent":["import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext';\r\n\r\nconst PracticeCategoryNav = ({ activeCategory, onCategorySelect }) => {\r\n  const { t, allTranslations, language } = useI18n();\r\n\r\n  // Get main categories from the translations for the current language\r\n  // The mainCategory object should have keys like 'vocabulary', 'grammar', etc.\r\n  // and values like 'ðŸ”  Vocabulary', 'ðŸ§© Grammar', etc.\r\n  const currentLanguageTranslations = allTranslations[language] || allTranslations.COSYenglish;\r\n  // Ensure mainCategory exists and is an object, default to COSYenglish's mainCategory if not found or if it's not an object\r\n  let mainCategoriesSource = currentLanguageTranslations.mainCategory;\r\n  if (typeof mainCategoriesSource !== 'object' || mainCategoriesSource === null) {\r\n    mainCategoriesSource = allTranslations.COSYenglish.mainCategory || {};\r\n  }\r\n  \r\n  const mainCategories = mainCategoriesSource;\r\n\r\n  const practiceCategories = Object.keys(mainCategories).map(key => ({\r\n    id: key, // e.g., 'vocabulary'\r\n    // The label is directly from the mainCategory object's value, which is already translated.\r\n    // If mainCategory values were keys (e.g., 'mainCategory.vocabulary'), we'd use t() here.\r\n    label: mainCategories[key] \r\n  }));\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0', display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '10px' }}>\r\n      {practiceCategories.map((category) => (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => onCategorySelect(category.id)}\r\n          style={{\r\n            padding: '10px 15px',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            backgroundColor: activeCategory === category.id ? '#007bff' : '#f0f0f0',\r\n            color: activeCategory === category.id ? 'white' : 'black',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '5px',\r\n          }}\r\n          aria-pressed={activeCategory === category.id}\r\n        >\r\n          {category.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticeCategoryNav;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,cAAc,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CAC/D,KAAM,CAAEG,CAAC,CAAEC,eAAe,CAAEC,QAAS,CAAC,CAAGT,OAAO,CAAC,CAAC,CAElD;AACA;AACA;AACA,KAAM,CAAAU,2BAA2B,CAAGF,eAAe,CAACC,QAAQ,CAAC,EAAID,eAAe,CAACG,WAAW,CAC5F;AACA,GAAI,CAAAC,oBAAoB,CAAGF,2BAA2B,CAACG,YAAY,CACnE,GAAI,MAAO,CAAAD,oBAAoB,GAAK,QAAQ,EAAIA,oBAAoB,GAAK,IAAI,CAAE,CAC7EA,oBAAoB,CAAGJ,eAAe,CAACG,WAAW,CAACE,YAAY,EAAI,CAAC,CAAC,CACvE,CAEA,KAAM,CAAAC,cAAc,CAAGF,oBAAoB,CAE3C,KAAM,CAAAG,kBAAkB,CAAGC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACI,GAAG,CAACC,GAAG,GAAK,CACjEC,EAAE,CAAED,GAAG,CAAE;AACT;AACA;AACAE,KAAK,CAAEP,cAAc,CAACK,GAAG,CAC3B,CAAC,CAAC,CAAC,CAEH,mBACEjB,IAAA,QAAKoB,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAQ,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAC,QAAA,CACxGb,kBAAkB,CAACG,GAAG,CAAEW,QAAQ,eAC/B3B,IAAA,WAEE4B,OAAO,CAAEA,CAAA,GAAMxB,gBAAgB,CAACuB,QAAQ,CAACT,EAAE,CAAE,CAC7CE,KAAK,CAAE,CACLS,OAAO,CAAE,WAAW,CACpBC,QAAQ,CAAE,MAAM,CAChBC,MAAM,CAAE,SAAS,CACjBC,eAAe,CAAE7B,cAAc,GAAKwB,QAAQ,CAACT,EAAE,CAAG,SAAS,CAAG,SAAS,CACvEe,KAAK,CAAE9B,cAAc,GAAKwB,QAAQ,CAACT,EAAE,CAAG,OAAO,CAAG,OAAO,CACzDgB,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,KAChB,CAAE,CACF,eAAchC,cAAc,GAAKwB,QAAQ,CAACT,EAAG,CAAAQ,QAAA,CAE5CC,QAAQ,CAACR,KAAK,EAbVQ,QAAQ,CAACT,EAcR,CACT,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}