{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/reading/InterestingFactExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadReadingData } from '../../../../utils/exerciseDataService'; // Assuming facts are part of general reading data\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InterestingFactExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [currentFact, setCurrentFact] = useState(null); // { title: string, text: string } or similar\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const {\n    t\n  } = useI18n();\n  const fetchNewFact = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setCurrentFact(null);\n    try {\n      // Assuming facts are loaded via loadReadingData and are identified by a type or specific structure\n      // Or, a new loadFactsData function could be created in exerciseDataService if facts are in separate files.\n      // For now, let's assume loadReadingData can fetch an array of objects, some of which are facts.\n      // This might require the data JSON to have a 'type: \"fact\"' field or similar.\n      const {\n        data: items,\n        error: fetchError\n      } = await loadReadingData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load reading data for facts.');\n      }\n\n      // Filter for items that are facts (example: check for a 'text' field and not 'paragraphs')\n      const facts = items.filter(item => item && item.text && !item.paragraphs);\n      if (facts && facts.length > 0) {\n        const randomIndex = Math.floor(Math.random() * facts.length);\n        setCurrentFact(facts[randomIndex]);\n      } else {\n        setError(t('exercises.noFacts', 'No interesting facts found for the selected criteria. Ensure reading data includes items with a \"text\" field.'));\n      }\n    } catch (err) {\n      console.error(\"InterestingFactExercise - Error fetching fact:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchNewFact();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n    }\n  }, [fetchNewFact, exerciseKey, language, days, t]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: t('loading.readingExercise', 'Loading interesting fact...')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: error,\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  if (!currentFact && !isLoading) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: t('exercises.noFactToDisplay', 'No fact to display. Try different selections.'),\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 42\n  }, this);\n  const factTitle = currentFact ? getLatinizedText(currentFact.title || \"Interesting Fact\", language) : \"\";\n  const factText = currentFact ? getLatinizedText(currentFact.text, language) : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      maxWidth: '700px',\n      margin: '0 auto'\n    },\n    children: [currentFact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '15px',\n          ...(isLatinized && currentFact.title && currentFact.title !== factTitle && {\n            fontStyle: 'italic'\n          })\n        },\n        children: factTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          lineHeight: '1.7',\n          fontSize: '1.1rem',\n          padding: '10px',\n          background: '#f9f9f9',\n          borderRadius: '5px',\n          ...(isLatinized && currentFact.text !== factText && {\n            fontStyle: 'italic'\n          })\n        },\n        children: factText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onNextExercise: fetchNewFact,\n      config: {\n        showCheck: false,\n        showHint: false,\n        showReveal: false,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(InterestingFactExercise, \"h3x4MkMdQqrNwavM5huJ1G2jAo4=\", false, function () {\n  return [useLatinizationContext, useI18n];\n});\n_c = InterestingFactExercise;\nexport default InterestingFactExercise;\nvar _c;\n$RefreshReg$(_c, \"InterestingFactExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadReadingData","useLatinizationContext","useLatinization","FeedbackDisplay","ExerciseControls","useI18n","jsxDEV","_jsxDEV","Fragment","_Fragment","InterestingFactExercise","language","days","exerciseKey","_s","currentFact","setCurrentFact","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","t","fetchNewFact","data","items","fetchError","Error","message","facts","filter","item","text","paragraphs","length","randomIndex","Math","floor","random","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","factTitle","title","factText","style","padding","border","borderRadius","maxWidth","margin","textAlign","marginBottom","fontStyle","lineHeight","fontSize","background","onNextExercise","config","showCheck","showHint","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/reading/InterestingFactExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadReadingData } from '../../../../utils/exerciseDataService'; // Assuming facts are part of general reading data\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst InterestingFactExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentFact, setCurrentFact] = useState(null); // { title: string, text: string } or similar\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t } = useI18n();\r\n\r\n  const fetchNewFact = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCurrentFact(null);\r\n\r\n    try {\r\n      // Assuming facts are loaded via loadReadingData and are identified by a type or specific structure\r\n      // Or, a new loadFactsData function could be created in exerciseDataService if facts are in separate files.\r\n      // For now, let's assume loadReadingData can fetch an array of objects, some of which are facts.\r\n      // This might require the data JSON to have a 'type: \"fact\"' field or similar.\r\n      const { data: items, error: fetchError } = await loadReadingData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load reading data for facts.');\r\n      }\r\n\r\n      // Filter for items that are facts (example: check for a 'text' field and not 'paragraphs')\r\n      const facts = items.filter(item => item && item.text && !item.paragraphs);\r\n\r\n      if (facts && facts.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * facts.length);\r\n        setCurrentFact(facts[randomIndex]);\r\n      } else {\r\n        setError(t('exercises.noFacts', 'No interesting facts found for the selected criteria. Ensure reading data includes items with a \"text\" field.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"InterestingFactExercise - Error fetching fact:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchNewFact();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewFact, exerciseKey, language, days, t]);\r\n\r\n  if (isLoading) return <p>{t('loading.readingExercise', 'Loading interesting fact...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!currentFact && !isLoading) return <FeedbackDisplay message={t('exercises.noFactToDisplay', 'No fact to display. Try different selections.')} type=\"info\" />;\r\n  \r\n  const factTitle = currentFact ? getLatinizedText(currentFact.title || \"Interesting Fact\", language) : \"\";\r\n  const factText = currentFact ? getLatinizedText(currentFact.text, language) : \"\";\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '700px', margin: '0 auto' }}>\r\n      {currentFact && (\r\n        <>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '15px', ...(isLatinized && currentFact.title && currentFact.title !== factTitle && {fontStyle: 'italic'}) }}>\r\n            {factTitle}\r\n          </h3>\r\n          <div style={{ textAlign: 'left', lineHeight: '1.7', fontSize: '1.1rem', padding: '10px', background: '#f9f9f9', borderRadius: '5px', ...(isLatinized && currentFact.text !== factText && {fontStyle: 'italic'}) }}>\r\n            {factText}\r\n          </div>\r\n        </>\r\n      )}\r\n      <ExerciseControls\r\n        onNextExercise={fetchNewFact}\r\n        config={{\r\n          showCheck: false,\r\n          showHint: false, \r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestingFactExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}