{"ast":null,"code":"import React,{createContext,useState,useContext,useCallback,useEffect}from'react';// This list should ideally be kept in sync with any master language list\n// or configuration. For now, mirroring what was in latinizer.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const LATINIZABLE_LANGUAGE_IDS=['ΚΟΖΥελληνικά','ТАКОЙрусский','ԾՈՍՅհայկական'];const LatinizationContext=/*#__PURE__*/createContext();export const useLatinizationContext=()=>{const context=useContext(LatinizationContext);if(!context){throw new Error('useLatinizationContext must be used within a LatinizationProvider');}return context;};export const LatinizationProvider=_ref=>{let{children}=_ref;const[isLatinized,setIsLatinized]=useState(()=>{// Initialize state from localStorage if available\nconst storedState=localStorage.getItem('latinizeStateReact');return storedState?JSON.parse(storedState):false;});useEffect(()=>{// Persist state to localStorage whenever it changes\nlocalStorage.setItem('latinizeStateReact',JSON.stringify(isLatinized));},[isLatinized]);const toggleLatinization=useCallback(()=>{setIsLatinized(prev=>!prev);},[]);const value={isLatinized,toggleLatinization,latinizableLanguageIds:LATINIZABLE_LANGUAGE_IDS// Provide the list through context\n};return/*#__PURE__*/_jsx(LatinizationContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","useEffect","jsx","_jsx","LATINIZABLE_LANGUAGE_IDS","LatinizationContext","useLatinizationContext","context","Error","LatinizationProvider","_ref","children","isLatinized","setIsLatinized","storedState","localStorage","getItem","JSON","parse","setItem","stringify","toggleLatinization","prev","value","latinizableLanguageIds","Provider"],"sources":["/workspaces/COSYlanguagesproject/src/contexts/LatinizationContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback, useEffect } from 'react';\r\n\r\n// This list should ideally be kept in sync with any master language list\r\n// or configuration. For now, mirroring what was in latinizer.js\r\nexport const LATINIZABLE_LANGUAGE_IDS = ['ΚΟΖΥελληνικά', 'ТАКОЙрусский', 'ԾՈՍՅհայկական'];\r\n\r\nconst LatinizationContext = createContext();\r\n\r\nexport const useLatinizationContext = () => {\r\n  const context = useContext(LatinizationContext);\r\n  if (!context) {\r\n    throw new Error('useLatinizationContext must be used within a LatinizationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LatinizationProvider = ({ children }) => {\r\n  const [isLatinized, setIsLatinized] = useState(() => {\r\n    // Initialize state from localStorage if available\r\n    const storedState = localStorage.getItem('latinizeStateReact');\r\n    return storedState ? JSON.parse(storedState) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Persist state to localStorage whenever it changes\r\n    localStorage.setItem('latinizeStateReact', JSON.stringify(isLatinized));\r\n  }, [isLatinized]);\r\n\r\n  const toggleLatinization = useCallback(() => {\r\n    setIsLatinized(prev => !prev);\r\n  }, []);\r\n\r\n  const value = {\r\n    isLatinized,\r\n    toggleLatinization,\r\n    latinizableLanguageIds: LATINIZABLE_LANGUAGE_IDS, // Provide the list through context\r\n  };\r\n\r\n  return (\r\n    <LatinizationContext.Provider value={value}>\r\n      {children}\r\n    </LatinizationContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,WAAW,CAAEC,SAAS,KAAQ,OAAO,CAE1F;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,wBAAwB,CAAG,CAAC,cAAc,CAAE,cAAc,CAAE,cAAc,CAAC,CAExF,KAAM,CAAAC,mBAAmB,cAAGR,aAAa,CAAC,CAAC,CAE3C,MAAO,MAAM,CAAAS,sBAAsB,CAAGA,CAAA,GAAM,CAC1C,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,mBAAmB,CAAC,CAC/C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,mEAAmE,CAAC,CACtF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,IAAM,CACnD;AACA,KAAM,CAAAgB,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAC9D,MAAO,CAAAF,WAAW,CAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAG,KAAK,CACtD,CAAC,CAAC,CAEFb,SAAS,CAAC,IAAM,CACd;AACAc,YAAY,CAACI,OAAO,CAAC,oBAAoB,CAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC,CACzE,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAS,kBAAkB,CAAGrB,WAAW,CAAC,IAAM,CAC3Ca,cAAc,CAACS,IAAI,EAAI,CAACA,IAAI,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAG,CACZX,WAAW,CACXS,kBAAkB,CAClBG,sBAAsB,CAAEpB,wBAA0B;AACpD,CAAC,CAED,mBACED,IAAA,CAACE,mBAAmB,CAACoB,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAZ,QAAA,CACxCA,QAAQ,CACmB,CAAC,CAEnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}