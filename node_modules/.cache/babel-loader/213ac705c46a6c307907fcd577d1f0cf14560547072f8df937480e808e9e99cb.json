{"ast":null,"code":"import React,{createContext,useContext,useState,useCallback,useEffect}from'react';import{translations}from'./translations';// Assuming translations.js is in the same directory\nimport{jsx as _jsx}from\"react/jsx-runtime\";const I18nContext=/*#__PURE__*/createContext();export function useI18n(){return useContext(I18nContext);}export function I18nProvider(_ref){let{children}=_ref;const[language,setLanguage]=useState(localStorage.getItem('cosyLanguage')||'COSYenglish');const[currentTranslations,setCurrentTranslations]=useState(translations[language]||translations.COSYenglish);useEffect(()=>{localStorage.setItem('cosyLanguage',language);setCurrentTranslations(translations[language]||translations.COSYenglish);// Optionally, update document language attribute\ndocument.documentElement.lang=language.substring(4).toLowerCase();// e.g., \"en\" from \"COSYenglish\"\n},[language]);const changeLanguage=useCallback(langKey=>{if(translations[langKey]){setLanguage(langKey);}else{console.warn(\"Language key \\\"\".concat(langKey,\"\\\" not found in translations. Defaulting to English.\"));setLanguage('COSYenglish');}},[]);const t=useCallback(function(key){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let translation=currentTranslations[key]||translations.COSYenglish[key]||key;// Basic placeholder replacement, e.g., t('levelUpToast', { level: 5 })\nif(options&&typeof translation==='string'){for(const placeholder in options){translation=translation.replace(new RegExp(\"{\".concat(placeholder,\"}\"),'g'),options[placeholder]);}}return translation;},[currentTranslations]);// Function to get translations for a specific language, primarily for dayNames\nconst getTranslationsForLang=useCallback((langKey,translationKey)=>{const targetLangTranslations=translations[langKey]||translations.COSYenglish;return targetLangTranslations[translationKey]||{};},[]);const value={language,changeLanguage,t,// Translation function\nallTranslations:translations,// Expose all translations if needed\ngetTranslationsForLang// Expose function to get dayNames for a specific language\n};return/*#__PURE__*/_jsx(I18nContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","translations","jsx","_jsx","I18nContext","useI18n","I18nProvider","_ref","children","language","setLanguage","localStorage","getItem","currentTranslations","setCurrentTranslations","COSYenglish","setItem","document","documentElement","lang","substring","toLowerCase","changeLanguage","langKey","console","warn","concat","t","key","options","arguments","length","undefined","translation","placeholder","replace","RegExp","getTranslationsForLang","translationKey","targetLangTranslations","value","allTranslations","Provider"],"sources":["/workspaces/COSYlanguagesproject/src/i18n/I18nContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\nimport { translations } from './translations'; // Assuming translations.js is in the same directory\r\n\r\nconst I18nContext = createContext();\r\n\r\nexport function useI18n() {\r\n    return useContext(I18nContext);\r\n}\r\n\r\nexport function I18nProvider({ children }) {\r\n    const [language, setLanguage] = useState(localStorage.getItem('cosyLanguage') || 'COSYenglish');\r\n    const [currentTranslations, setCurrentTranslations] = useState(translations[language] || translations.COSYenglish);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cosyLanguage', language);\r\n        setCurrentTranslations(translations[language] || translations.COSYenglish);\r\n        // Optionally, update document language attribute\r\n        document.documentElement.lang = language.substring(4).toLowerCase(); // e.g., \"en\" from \"COSYenglish\"\r\n    }, [language]);\r\n\r\n    const changeLanguage = useCallback((langKey) => {\r\n        if (translations[langKey]) {\r\n            setLanguage(langKey);\r\n        } else {\r\n            console.warn(`Language key \"${langKey}\" not found in translations. Defaulting to English.`);\r\n            setLanguage('COSYenglish');\r\n        }\r\n    }, []);\r\n\r\n    const t = useCallback((key, options = {}) => {\r\n        let translation = currentTranslations[key] || translations.COSYenglish[key] || key;\r\n        \r\n        // Basic placeholder replacement, e.g., t('levelUpToast', { level: 5 })\r\n        if (options && typeof translation === 'string') {\r\n            for (const placeholder in options) {\r\n                translation = translation.replace(new RegExp(`{${placeholder}}`, 'g'), options[placeholder]);\r\n            }\r\n        }\r\n        return translation;\r\n    }, [currentTranslations]);\r\n\r\n    // Function to get translations for a specific language, primarily for dayNames\r\n    const getTranslationsForLang = useCallback((langKey, translationKey) => {\r\n        const targetLangTranslations = translations[langKey] || translations.COSYenglish;\r\n        return targetLangTranslations[translationKey] || {};\r\n    }, []);\r\n\r\n\r\n    const value = {\r\n        language,\r\n        changeLanguage,\r\n        t, // Translation function\r\n        allTranslations: translations, // Expose all translations if needed\r\n        getTranslationsForLang // Expose function to get dayNames for a specific language\r\n    };\r\n\r\n    return (\r\n        <I18nContext.Provider value={value}>\r\n            {children}\r\n        </I18nContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}