{"ast":null,"code":"import React from'react';// Actual Exercise Components\nimport ShowWordExercise from'./exercises/vocabulary/ShowWordExercise';// Placeholder components for exercises - these will be replaced by actual exercise components later\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const PlaceholderExercise=_ref=>{let{name}=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #ddd',borderRadius:'5px',backgroundColor:'#f9f9f9'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[name,\" Exercise\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"This is a placeholder for the \",/*#__PURE__*/_jsx(\"em\",{children:name}),\" exercise.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Implementation is pending.\"})]});};// Mapping of sub-practice IDs to their components\n// This will grow as actual exercise components are developed.\nconst exerciseMap={// Vocabulary\n'random-word':ShowWordExercise,// Use the actual component\n'random-image':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Random Image\"}),'listening':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Listening\"}),// Grammar\n'gender-articles':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Gender & Articles\"}),'verbs-conjugation':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Verbs & Conjugation\"}),'possessives':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Possessives\"}),// Reading\n'story':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Story\"}),'interesting-fact':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Interesting Fact\"}),// Speaking\n'question-practice':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Speaking Question\"}),'monologue':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Monologue\"}),// Writing\n'writing-question':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Writing Question\"}),'storytelling':()=>/*#__PURE__*/_jsx(PlaceholderExercise,{name:\"Storytelling\"})// Add more mappings as exercises are developed\n};const ExerciseHost=_ref2=>{let{subPracticeType,language,days,exerciseKey}=_ref2;if(!subPracticeType){return/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontStyle:'italic',color:'#666'},children:\"Please select an exercise type above.\"});}const ExerciseComponent=exerciseMap[subPracticeType];if(!ExerciseComponent){return/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',textAlign:'center',padding:'20px',border:'1px solid red',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Exercise Error\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Exercise type \\\"\",/*#__PURE__*/_jsx(\"strong\",{children:subPracticeType}),\"\\\" not found or not yet implemented.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please check the mapping in ExerciseHost.js or select another exercise.\"})]});}// Pass necessary props to the actual exercise component\n// exerciseKey is used to force re-mounting and re-fetching data if the same exercise type is selected again\n// Note: If ExerciseComponent is a functional component that returns JSX (like Placeholders),\n// it needs to be called as <ExerciseComponent /> not ExerciseComponent().\n// If it's a class component or a direct reference to a functional component (like ShowWordExercise),\n// it can be used directly as <ExerciseComponent ... />.\n// For consistency with how React handles components, direct reference is better.\nreturn/*#__PURE__*/_jsx(ExerciseComponent,{language:language,days:days,exerciseKey:exerciseKey});};export default ExerciseHost;","map":{"version":3,"names":["React","ShowWordExercise","jsxs","_jsxs","jsx","_jsx","PlaceholderExercise","_ref","name","style","padding","border","borderRadius","backgroundColor","children","exerciseMap","random-image","listening","gender-articles","verbs-conjugation","possessives","story","interesting-fact","question-practice","monologue","writing-question","storytelling","ExerciseHost","_ref2","subPracticeType","language","days","exerciseKey","textAlign","fontStyle","color","ExerciseComponent"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/LanguageSelectorFreestyle.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Actual Exercise Components\r\nimport ShowWordExercise from './exercises/vocabulary/ShowWordExercise';\r\n\r\n// Placeholder components for exercises - these will be replaced by actual exercise components later\r\nconst PlaceholderExercise = ({ name }) => (\r\n  <div style={{ padding: '20px', border: '1px solid #ddd', borderRadius: '5px', backgroundColor: '#f9f9f9' }}>\r\n    <h3>{name} Exercise</h3>\r\n    <p>This is a placeholder for the <em>{name}</em> exercise.</p>\r\n    <p>Implementation is pending.</p>\r\n  </div>\r\n);\r\n\r\n// Mapping of sub-practice IDs to their components\r\n// This will grow as actual exercise components are developed.\r\nconst exerciseMap = {\r\n  // Vocabulary\r\n  'random-word': ShowWordExercise, // Use the actual component\r\n  'random-image': () => <PlaceholderExercise name=\"Random Image\" />,\r\n  'listening': () => <PlaceholderExercise name=\"Listening\" />,\r\n  // Grammar\r\n  'gender-articles': () => <PlaceholderExercise name=\"Gender & Articles\" />,\r\n  'verbs-conjugation': () => <PlaceholderExercise name=\"Verbs & Conjugation\" />,\r\n  'possessives': () => <PlaceholderExercise name=\"Possessives\" />,\r\n  // Reading\r\n  'story': () => <PlaceholderExercise name=\"Story\" />,\r\n  'interesting-fact': () => <PlaceholderExercise name=\"Interesting Fact\" />,\r\n  // Speaking\r\n  'question-practice': () => <PlaceholderExercise name=\"Speaking Question\" />,\r\n  'monologue': () => <PlaceholderExercise name=\"Monologue\" />,\r\n  // Writing\r\n  'writing-question': () => <PlaceholderExercise name=\"Writing Question\" />,\r\n  'storytelling': () => <PlaceholderExercise name=\"Storytelling\" />,\r\n  // Add more mappings as exercises are developed\r\n};\r\n\r\nconst ExerciseHost = ({ subPracticeType, language, days, exerciseKey }) => {\r\n  if (!subPracticeType) {\r\n    return <p style={{ textAlign: 'center', fontStyle: 'italic', color: '#666' }}>Please select an exercise type above.</p>;\r\n  }\r\n\r\n  const ExerciseComponent = exerciseMap[subPracticeType];\r\n\r\n  if (!ExerciseComponent) {\r\n    return (\r\n      <div style={{ color: 'red', textAlign: 'center', padding: '20px', border: '1px solid red', borderRadius: '5px' }}>\r\n        <h3>Exercise Error</h3>\r\n        <p>Exercise type \"<strong>{subPracticeType}</strong>\" not found or not yet implemented.</p>\r\n        <p>Please check the mapping in ExerciseHost.js or select another exercise.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Pass necessary props to the actual exercise component\r\n  // exerciseKey is used to force re-mounting and re-fetching data if the same exercise type is selected again\r\n  // Note: If ExerciseComponent is a functional component that returns JSX (like Placeholders),\r\n  // it needs to be called as <ExerciseComponent /> not ExerciseComponent().\r\n  // If it's a class component or a direct reference to a functional component (like ShowWordExercise),\r\n  // it can be used directly as <ExerciseComponent ... />.\r\n  // For consistency with how React handles components, direct reference is better.\r\n  return <ExerciseComponent language={language} days={days} exerciseKey={exerciseKey} />;\r\n};\r\n\r\nexport default ExerciseHost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}