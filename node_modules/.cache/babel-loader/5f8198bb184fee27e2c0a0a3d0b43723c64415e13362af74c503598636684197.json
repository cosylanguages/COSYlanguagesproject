{"ast":null,"code":"import React,{createContext,useContext,useState,useCallback}from'react';import{fetchPlan as apiFetchPlan}from'./api/plan';// Import the centralized API function\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const PlanContext=/*#__PURE__*/createContext();export function usePlan(){return useContext(PlanContext);}export function PlanProvider(_ref){let{children}=_ref;const[plan,setPlan]=useState({days:[],studySets:[]});const[error,setError]=useState(null);const[loading,setLoading]=useState(false);// Renamed to avoid confusion if App.js still uses 'fetchPlan' prop name from an old state\nconst fetchPlanData=useCallback(async token=>{if(!token){setPlan({days:[],studySets:[]});// Reset plan if no token\nsetError(null);setLoading(false);return;}setLoading(true);setError(null);try{const data=await apiFetchPlan(token);// Use the imported API function\nsetPlan(data);}catch(err){console.error(\"Error fetching plan in PlanContext:\",err);setError(err.message||'Failed to fetch plan');setPlan({days:[],studySets:[]});// Reset plan on error\n}finally{setLoading(false);}},[]);return/*#__PURE__*/_jsx(PlanContext.Provider,{value:{plan,fetchPlan:fetchPlanData,loading,error},children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","fetchPlan","apiFetchPlan","jsx","_jsx","PlanContext","usePlan","PlanProvider","_ref","children","plan","setPlan","days","studySets","error","setError","loading","setLoading","fetchPlanData","token","data","err","console","message","Provider","value"],"sources":["/workspaces/COSYlanguagesproject/src/PlanContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport { fetchPlan as apiFetchPlan } from './api/plan'; // Import the centralized API function\r\n\r\nexport const PlanContext = createContext();\r\n\r\nexport function usePlan() {\r\n    return useContext(PlanContext);\r\n}\r\n\r\nexport function PlanProvider({ children }) {\r\n    const [plan, setPlan] = useState({ days: [], studySets: [] });\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Renamed to avoid confusion if App.js still uses 'fetchPlan' prop name from an old state\r\n    const fetchPlanData = useCallback(async (token) => { \r\n        if (!token) {\r\n            setPlan({ days: [], studySets: [] }); // Reset plan if no token\r\n            setError(null);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const data = await apiFetchPlan(token); // Use the imported API function\r\n            setPlan(data);\r\n        } catch (err) {\r\n            console.error(\"Error fetching plan in PlanContext:\", err);\r\n            setError(err.message || 'Failed to fetch plan');\r\n            setPlan({ days: [], studySets: [] }); // Reset plan on error\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <PlanContext.Provider value={{ plan, fetchPlan: fetchPlanData, loading, error }}>\r\n            {children}\r\n        </PlanContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC/E,OAASC,SAAS,GAAI,CAAAC,YAAY,KAAQ,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAExD,MAAO,MAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAE1C,MAAO,SAAS,CAAAS,OAAOA,CAAA,CAAG,CACtB,MAAO,CAAAR,UAAU,CAACO,WAAW,CAAC,CAClC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,CAAEa,IAAI,CAAE,EAAE,CAAEC,SAAS,CAAE,EAAG,CAAC,CAAC,CAC7D,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAE7C;AACA,KAAM,CAAAmB,aAAa,CAAGlB,WAAW,CAAC,KAAO,CAAAmB,KAAK,EAAK,CAC/C,GAAI,CAACA,KAAK,CAAE,CACRR,OAAO,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,SAAS,CAAE,EAAG,CAAC,CAAC,CAAE;AACtCE,QAAQ,CAAC,IAAI,CAAC,CACdE,UAAU,CAAC,KAAK,CAAC,CACjB,OACJ,CACAA,UAAU,CAAC,IAAI,CAAC,CAChBF,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACA,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAlB,YAAY,CAACiB,KAAK,CAAC,CAAE;AACxCR,OAAO,CAACS,IAAI,CAAC,CACjB,CAAE,MAAOC,GAAG,CAAE,CACVC,OAAO,CAACR,KAAK,CAAC,qCAAqC,CAAEO,GAAG,CAAC,CACzDN,QAAQ,CAACM,GAAG,CAACE,OAAO,EAAI,sBAAsB,CAAC,CAC/CZ,OAAO,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,SAAS,CAAE,EAAG,CAAC,CAAC,CAAE;AAC1C,CAAC,OAAS,CACNI,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIb,IAAA,CAACC,WAAW,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEf,IAAI,CAAET,SAAS,CAAEiB,aAAa,CAAEF,OAAO,CAAEF,KAAM,CAAE,CAAAL,QAAA,CAC3EA,QAAQ,CACS,CAAC,CAE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}