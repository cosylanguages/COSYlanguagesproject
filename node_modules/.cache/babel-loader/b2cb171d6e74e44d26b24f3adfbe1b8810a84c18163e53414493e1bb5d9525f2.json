{"ast":null,"code":"import _objectSpread from\"/workspaces/COSYlanguagesproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{loadSpeakingPromptsData}from'../../../../utils/exerciseDataService';// Reusing speaking prompts\nimport{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{shuffleArray}from'../../../../utils/arrayUtils';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{useI18n}from'../../../../i18n/I18nContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WritingQuestionExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[writtenAnswer,setWrittenAnswer]=useState('');const[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const{t}=useI18n();const fetchQuestionsForWriting=useCallback(async()=>{setIsLoading(true);setError(null);setQuestions([]);setCurrentQuestionIndex(0);setWrittenAnswer('');setFeedback({message:'',type:''});try{const{data,error:fetchError}=await loadSpeakingPromptsData(language,days);if(fetchError){throw new Error(fetchError.message||fetchError.error||'Failed to load questions.');}if(data&&data.length>0){setQuestions(shuffleArray(data));}else{setError(t('exercises.noWritingQuestions','No questions found for writing practice for the selected criteria.'));}}catch(err){console.error(\"WritingQuestionExercise - Error fetching questions:\",err);setError(err.message||t('errors.unexpectedError','An unexpected error occurred.'));}finally{setIsLoading(false);}},[language,days,t]);useEffect(()=>{if(language&&days&&days.length>0){fetchQuestionsForWriting();}else{setIsLoading(false);setError(t('errors.selectLangDay',\"Please select a language and day(s).\"));}},[fetchQuestionsForWriting,exerciseKey,language,days,t]);const handleAnswerChange=event=>{setWrittenAnswer(event.target.value);if(feedback.message)setFeedback({message:'',type:''});};const handleSubmitAnswer=()=>{if(!writtenAnswer.trim()){setFeedback({message:t('feedback.pleaseWriteAnswer','Please write an answer before submitting.'),type:'warning'});return;}// In a real app, this might submit to a backend or local storage.\n// For now, just acknowledge submission.\nsetFeedback({message:t('feedback.answerSubmittedWriting','Answer submitted. Remember to check for grammar and clarity.'),type:'success'});// Consider if the text area should be cleared or disabled after submission.\n// For now, it remains editable for self-review.\n};const currentQuestionText=questions[currentQuestionIndex]||\"\";const latinizedQuestion=getLatinizedText(currentQuestionText,language);const goToNextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(prev=>prev+1);setWrittenAnswer('');setFeedback({message:'',type:''});}};const goToPrevQuestion=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(prev=>prev-1);setWrittenAnswer('');setFeedback({message:'',type:''});}};const showHint=()=>{const questionForHint=questions[currentQuestionIndex]||\"\";setFeedback({message:t('feedback.hintWritingQuestion',\"Hint: Address all parts of the question. Structure your answer with an introduction, body, and conclusion if applicable. The question is: '\".concat(getLatinizedText(questionForHint,language),\"'\"),{question:getLatinizedText(questionForHint,language)}),type:'hint'});};if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:t('loading.writingExercise','Loading writing questions...')});if(error)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});if(questions.length===0&&!isLoading)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noWritingQuestionsToDisplay','No questions to display for writing practice.'),type:\"info\"});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #eee',borderRadius:'8px',maxWidth:'800px',margin:'0 auto'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center'},children:t('titles.answerTheQuestionWriting','Answer the Question (Writing)')}),/*#__PURE__*/_jsx(\"div\",{style:_objectSpread({fontSize:'1.3em',margin:'20px 0',padding:'15px',minHeight:'60px',backgroundColor:'#f9f9f9',borderLeft:'4px solid #007bff',borderRadius:'4px'},isLatinized&&currentQuestionText!==latinizedQuestion&&{fontStyle:'italic'}),children:latinizedQuestion}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:goToPrevQuestion,disabled:currentQuestionIndex===0,style:{marginRight:'10px'},children:[\"< \",t('buttons.previous','Previous')]}),/*#__PURE__*/_jsxs(\"span\",{children:[currentQuestionIndex+1,\" / \",questions.length]}),/*#__PURE__*/_jsxs(\"button\",{onClick:goToNextQuestion,disabled:currentQuestionIndex===questions.length-1,style:{marginLeft:'10px'},children:[t('buttons.next','Next'),\" >\"]})]}),/*#__PURE__*/_jsx(\"textarea\",{value:writtenAnswer,onChange:handleAnswerChange,rows:\"10\",spellCheck:\"true\",placeholder:t('placeholders.typeYourAnswerHere','Type your answer here...'),style:{width:'100%',padding:'10px',marginBottom:'15px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'1em',boxSizing:'border-box'}}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:handleSubmitAnswer// \"Check\" button will act as \"Submit\"\n,onShowHint:showHint,onNextExercise:fetchQuestionsForWriting// To get a new set of questions\n,config:{showCheck:true,checkButtonText:t('buttons.submitAnswer','Submit Answer'),// Custom text for check button\nshowReveal:false,// No direct answer to reveal for this type\nshowHint:true,showNext:true// \"Next Exercise\" button to refresh all questions\n}})]});};export default WritingQuestionExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadSpeakingPromptsData","useLatinizationContext","useLatinization","shuffleArray","FeedbackDisplay","ExerciseControls","useI18n","jsx","_jsx","jsxs","_jsxs","WritingQuestionExercise","_ref","language","days","exerciseKey","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","writtenAnswer","setWrittenAnswer","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","t","fetchQuestionsForWriting","data","fetchError","Error","length","err","console","handleAnswerChange","event","target","value","handleSubmitAnswer","trim","currentQuestionText","latinizedQuestion","goToNextQuestion","prev","goToPrevQuestion","showHint","questionForHint","concat","question","children","style","padding","border","borderRadius","maxWidth","margin","textAlign","_objectSpread","fontSize","minHeight","backgroundColor","borderLeft","fontStyle","marginBottom","onClick","disabled","marginRight","marginLeft","onChange","rows","spellCheck","placeholder","width","boxSizing","onCheckAnswer","onShowHint","onNextExercise","config","showCheck","checkButtonText","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/WritingQuestionExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadSpeakingPromptsData } from '../../../../utils/exerciseDataService'; // Reusing speaking prompts\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst WritingQuestionExercise = ({ language, days, exerciseKey }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [writtenAnswer, setWrittenAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t } = useI18n();\r\n\r\n  const fetchQuestionsForWriting = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setQuestions([]);\r\n    setCurrentQuestionIndex(0);\r\n    setWrittenAnswer('');\r\n    setFeedback({ message: '', type: '' });\r\n\r\n    try {\r\n      const { data, error: fetchError } = await loadSpeakingPromptsData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load questions.');\r\n      }\r\n      if (data && data.length > 0) {\r\n        setQuestions(shuffleArray(data));\r\n      } else {\r\n        setError(t('exercises.noWritingQuestions', 'No questions found for writing practice for the selected criteria.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"WritingQuestionExercise - Error fetching questions:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchQuestionsForWriting();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchQuestionsForWriting, exerciseKey, language, days, t]);\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setWrittenAnswer(event.target.value);\r\n    if (feedback.message) setFeedback({message: '', type: ''});\r\n  };\r\n\r\n  const handleSubmitAnswer = () => {\r\n    if (!writtenAnswer.trim()) {\r\n      setFeedback({ message: t('feedback.pleaseWriteAnswer', 'Please write an answer before submitting.'), type: 'warning' });\r\n      return;\r\n    }\r\n    // In a real app, this might submit to a backend or local storage.\r\n    // For now, just acknowledge submission.\r\n    setFeedback({ message: t('feedback.answerSubmittedWriting', 'Answer submitted. Remember to check for grammar and clarity.'), type: 'success' });\r\n    // Consider if the text area should be cleared or disabled after submission.\r\n    // For now, it remains editable for self-review.\r\n  };\r\n  \r\n  const currentQuestionText = questions[currentQuestionIndex] || \"\";\r\n  const latinizedQuestion = getLatinizedText(currentQuestionText, language);\r\n\r\n  const goToNextQuestion = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n      setWrittenAnswer('');\r\n      setFeedback({ message: '', type: '' });\r\n    }\r\n  };\r\n\r\n  const goToPrevQuestion = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n      setWrittenAnswer('');\r\n      setFeedback({ message: '', type: '' });\r\n    }\r\n  };\r\n  \r\n  const showHint = () => {\r\n     const questionForHint = questions[currentQuestionIndex] || \"\";\r\n     setFeedback({ message: t('feedback.hintWritingQuestion', `Hint: Address all parts of the question. Structure your answer with an introduction, body, and conclusion if applicable. The question is: '${getLatinizedText(questionForHint, language)}'`, {question: getLatinizedText(questionForHint, language)}), type: 'hint'});\r\n  };\r\n\r\n  if (isLoading) return <p>{t('loading.writingExercise', 'Loading writing questions...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (questions.length === 0 && !isLoading) return <FeedbackDisplay message={t('exercises.noWritingQuestionsToDisplay', 'No questions to display for writing practice.')} type=\"info\" />;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '800px', margin: '0 auto' }}>\r\n      <h3 style={{textAlign: 'center'}}>{t('titles.answerTheQuestionWriting', 'Answer the Question (Writing)')}</h3>\r\n      <div style={{ \r\n          fontSize: '1.3em', margin: '20px 0', padding: '15px', \r\n          minHeight: '60px', backgroundColor: '#f9f9f9', \r\n          borderLeft: '4px solid #007bff', borderRadius: '4px',\r\n          ...(isLatinized && currentQuestionText !== latinizedQuestion && {fontStyle: 'italic'}) \r\n        }}>\r\n        {latinizedQuestion}\r\n      </div>\r\n      \r\n      <div style={{ marginBottom: '20px', textAlign: 'center' }}>\r\n        <button onClick={goToPrevQuestion} disabled={currentQuestionIndex === 0} style={{marginRight: '10px'}}>\r\n          &lt; {t('buttons.previous', 'Previous')}\r\n        </button>\r\n        <span>{currentQuestionIndex + 1} / {questions.length}</span>\r\n        <button onClick={goToNextQuestion} disabled={currentQuestionIndex === questions.length - 1} style={{marginLeft: '10px'}}>\r\n          {t('buttons.next', 'Next')} &gt;\r\n        </button>\r\n      </div>\r\n\r\n      <textarea \r\n        value={writtenAnswer}\r\n        onChange={handleAnswerChange}\r\n        rows=\"10\"\r\n        spellCheck=\"true\"\r\n        placeholder={t('placeholders.typeYourAnswerHere', 'Type your answer here...')}\r\n        style={{ width: '100%', padding: '10px', marginBottom: '15px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em', boxSizing: 'border-box' }}\r\n      />\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} />\r\n      \r\n      <ExerciseControls\r\n        onCheckAnswer={handleSubmitAnswer} // \"Check\" button will act as \"Submit\"\r\n        onShowHint={showHint}\r\n        onNextExercise={fetchQuestionsForWriting} // To get a new set of questions\r\n        config={{\r\n          showCheck: true, \r\n          checkButtonText: t('buttons.submitAnswer', 'Submit Answer'), // Custom text for check button\r\n          showReveal: false, // No direct answer to reveal for this type\r\n          showHint: true,\r\n          showNext: true, // \"Next Exercise\" button to refresh all questions\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WritingQuestionExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}