{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/PossessivesExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadPossessivesData } from '../../../../utils/exerciseDataService';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { normalizeString } from '../../../../utils/stringUtils';\nimport { useProgress } from '../../../../contexts/ProgressContext';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PossessivesExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [exerciseData, setExerciseData] = useState([]);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization();\n  const progress = useProgress();\n  const {\n    t\n  } = useI18n();\n  const pickNewExercise = useCallback(data => {\n    if (data && data.length > 0) {\n      const randomIndex = Math.floor(Math.random() * data.length);\n      setCurrentExercise(data[randomIndex]);\n      setUserInput('');\n      setFeedback({\n        message: '',\n        type: ''\n      });\n      setIsRevealed(false);\n      setError(null);\n    } else {\n      setError(t('exercises.noPossessivesFound', 'No possessives exercises found for the selected criteria.'));\n      setCurrentExercise(null);\n    }\n    setIsLoading(false);\n  }, [t]);\n  const fetchAndSetNewExercise = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error: fetchError\n      } = await loadPossessivesData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || t('errors.failedLoadPossessives'));\n      }\n      // Data for possessives is expected to be an array of items for the given day(s)\n      // loadPossessivesData already handles filtering by day.\n      setExerciseData(data || []);\n      pickNewExercise(data || []);\n    } catch (err) {\n      console.error(\"PossessivesExercise - Error fetching exercises:\", err);\n      setError(err.message || t('errors.unexpectedError'));\n      setIsLoading(false);\n      setCurrentExercise(null);\n    }\n  }, [language, days, pickNewExercise, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchAndSetNewExercise();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay'));\n      setCurrentExercise(null);\n    }\n  }, [fetchAndSetNewExercise, exerciseKey, language, days, t]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (feedback.message) setFeedback({\n      message: '',\n      type: ''\n    });\n  };\n  const checkAnswer = () => {\n    if (!currentExercise || isRevealed) return;\n    const correctAnswer = currentExercise.answer;\n    const normalizedUserInput = normalizeString(userInput);\n    const normalizedCorrectAnswer = normalizeString(correctAnswer);\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\n    if (normalizedUserInput === normalizedCorrectAnswer) {\n      setFeedback({\n        message: t('feedback.correct'),\n        type: 'correct'\n      });\n      progress.awardCorrectAnswer(itemId, 'grammar-possessive');\n    } else {\n      setFeedback({\n        message: t('feedback.incorrectAnswerIs', {\n          correctAnswer: displayAnswer\n        }),\n        type: 'incorrect'\n      });\n      progress.awardIncorrectAnswer(itemId, 'grammar-possessive');\n    }\n  };\n  const showHint = () => {\n    if (!currentExercise || isRevealed) return;\n    // Basic hint: show the first letter of the answer\n    const firstLetter = currentExercise.answer[0];\n    const latinizedFirstLetter = getLatinizedText(firstLetter, language);\n    setFeedback({\n      message: t('feedback.hintFirstLetterIs', {\n        letter: latinizedFirstLetter\n      }),\n      type: 'hint'\n    });\n  };\n  const revealTheAnswer = () => {\n    if (!currentExercise) return;\n    const correctAnswer = currentExercise.answer;\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\n    setUserInput(correctAnswer); // Show the full answer in the input\n    setFeedback({\n      message: t('feedback.correctAnswerIs', {\n        correctAnswer: displayAnswer\n      }),\n      type: 'info'\n    });\n    setIsRevealed(true);\n    progress.scheduleReview(itemId, 'grammar-possessive', false);\n  };\n  const handleNext = () => {\n    setIsLoading(true);\n    pickNewExercise(exerciseData);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('loading.possessivesExercise', 'Loading possessives exercise...')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: error,\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentExercise) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: t('exercises.noPossessivesLoaded', 'No possessive exercise loaded. Try different selections or check data.'),\n      type: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display logic for \"fill_blank\" type\n  let sentenceParts = [];\n  let placeholder = \"____\"; // Default placeholder\n  if (currentExercise.sentence.includes('____')) {\n    sentenceParts = currentExercise.sentence.split('____');\n  } else if (currentExercise.sentence.includes('_')) {\n    // Allow single underscore as placeholder\n    sentenceParts = currentExercise.sentence.split('_');\n    placeholder = \"_\";\n  } else {\n    sentenceParts = [currentExercise.sentence, \"\"]; // No placeholder found, input after sentence\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t('titles.fillThePossessive', 'Fill in the Correct Possessive')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '1.1rem',\n        margin: '15px 0'\n      },\n      children: [getLatinizedText(sentenceParts[0], language), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleInputChange,\n        placeholder: placeholder,\n        disabled: isRevealed || isLoading,\n        style: {\n          padding: '8px',\n          fontSize: '1rem',\n          width: `${Math.max(currentExercise.answer.length * 10, 60)}px`,\n          // Dynamic width\n          minWidth: '60px',\n          maxWidth: '150px',\n          margin: '0 5px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          textAlign: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), getLatinizedText(sentenceParts[1] || '', language)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onCheckAnswer: !isRevealed && !!currentExercise ? checkAnswer : undefined,\n      onShowHint: !isRevealed && !!currentExercise ? showHint : undefined,\n      onRevealAnswer: !isRevealed && !!currentExercise ? revealTheAnswer : undefined,\n      onNextExercise: handleNext,\n      config: {\n        showCheck: !isRevealed && !!currentExercise,\n        showHint: !isRevealed && !!currentExercise,\n        showReveal: !isRevealed && !!currentExercise,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(PossessivesExercise, \"4dPQr/IfkAlh8oT3K9+uvcuncII=\", false, function () {\n  return [useLatinizationContext, useLatinization, useProgress, useI18n];\n});\n_c = PossessivesExercise;\nexport default PossessivesExercise;\nvar _c;\n$RefreshReg$(_c, \"PossessivesExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadPossessivesData","FeedbackDisplay","ExerciseControls","useLatinizationContext","useLatinization","normalizeString","useProgress","useI18n","jsxDEV","_jsxDEV","PossessivesExercise","language","days","exerciseKey","_s","currentExercise","setCurrentExercise","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","exerciseData","setExerciseData","isLatinized","getLatinizedText","progress","t","pickNewExercise","data","length","randomIndex","Math","floor","random","fetchAndSetNewExercise","fetchError","Error","err","console","handleInputChange","e","target","value","checkAnswer","correctAnswer","answer","normalizedUserInput","normalizedCorrectAnswer","displayAnswer","itemId","sentence","split","awardCorrectAnswer","awardIncorrectAnswer","showHint","firstLetter","latinizedFirstLetter","letter","revealTheAnswer","scheduleReview","handleNext","children","fileName","_jsxFileName","lineNumber","columnNumber","sentenceParts","placeholder","includes","style","textAlign","padding","border","borderRadius","maxWidth","margin","fontSize","onChange","disabled","width","max","minWidth","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/PossessivesExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadPossessivesData } from '../../../../utils/exerciseDataService';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport { useProgress } from '../../../../contexts/ProgressContext';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst PossessivesExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentExercise, setCurrentExercise] = useState(null);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization();\r\n  const progress = useProgress();\r\n  const { t } = useI18n();\r\n\r\n  const pickNewExercise = useCallback((data) => {\r\n    if (data && data.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * data.length);\r\n      setCurrentExercise(data[randomIndex]);\r\n      setUserInput('');\r\n      setFeedback({ message: '', type: '' });\r\n      setIsRevealed(false);\r\n      setError(null);\r\n    } else {\r\n      setError(t('exercises.noPossessivesFound', 'No possessives exercises found for the selected criteria.'));\r\n      setCurrentExercise(null);\r\n    }\r\n    setIsLoading(false);\r\n  }, [t]);\r\n\r\n  const fetchAndSetNewExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const { data, error: fetchError } = await loadPossessivesData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || t('errors.failedLoadPossessives'));\r\n      }\r\n      // Data for possessives is expected to be an array of items for the given day(s)\r\n      // loadPossessivesData already handles filtering by day.\r\n      setExerciseData(data || []); \r\n      pickNewExercise(data || []);\r\n    } catch (err) {\r\n      console.error(\"PossessivesExercise - Error fetching exercises:\", err);\r\n      setError(err.message || t('errors.unexpectedError'));\r\n      setIsLoading(false);\r\n      setCurrentExercise(null);\r\n    }\r\n  }, [language, days, pickNewExercise, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchAndSetNewExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay'));\r\n      setCurrentExercise(null);\r\n    }\r\n  }, [fetchAndSetNewExercise, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!currentExercise || isRevealed) return;\r\n\r\n    const correctAnswer = currentExercise.answer;\r\n    const normalizedUserInput = normalizeString(userInput);\r\n    const normalizedCorrectAnswer = normalizeString(correctAnswer);\r\n    \r\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\r\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\r\n\r\n    if (normalizedUserInput === normalizedCorrectAnswer) {\r\n      setFeedback({ message: t('feedback.correct'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'grammar-possessive');\r\n    } else {\r\n      setFeedback({ message: t('feedback.incorrectAnswerIs', { correctAnswer: displayAnswer }), type: 'incorrect' });\r\n      progress.awardIncorrectAnswer(itemId, 'grammar-possessive');\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!currentExercise || isRevealed) return;\r\n    // Basic hint: show the first letter of the answer\r\n    const firstLetter = currentExercise.answer[0];\r\n    const latinizedFirstLetter = getLatinizedText(firstLetter, language);\r\n    setFeedback({ message: t('feedback.hintFirstLetterIs', { letter: latinizedFirstLetter }), type: 'hint' });\r\n  };\r\n\r\n  const revealTheAnswer = () => {\r\n    if (!currentExercise) return;\r\n    const correctAnswer = currentExercise.answer;\r\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\r\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\r\n\r\n    setUserInput(correctAnswer); // Show the full answer in the input\r\n    setFeedback({ message: t('feedback.correctAnswerIs', { correctAnswer: displayAnswer }), type: 'info' });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'grammar-possessive', false);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setIsLoading(true);\r\n    pickNewExercise(exerciseData);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>{t('loading.possessivesExercise', 'Loading possessives exercise...')}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <FeedbackDisplay message={error} type=\"error\" />;\r\n  }\r\n\r\n  if (!currentExercise) {\r\n    return <FeedbackDisplay message={t('exercises.noPossessivesLoaded', 'No possessive exercise loaded. Try different selections or check data.')} type=\"info\" />;\r\n  }\r\n\r\n  // Display logic for \"fill_blank\" type\r\n  let sentenceParts = [];\r\n  let placeholder = \"____\"; // Default placeholder\r\n  if (currentExercise.sentence.includes('____')) {\r\n    sentenceParts = currentExercise.sentence.split('____');\r\n  } else if (currentExercise.sentence.includes('_')) { // Allow single underscore as placeholder\r\n    sentenceParts = currentExercise.sentence.split('_');\r\n    placeholder = \"_\";\r\n  } else {\r\n    sentenceParts = [currentExercise.sentence, \"\"]; // No placeholder found, input after sentence\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '600px', margin: 'auto' }}>\r\n      <h3>{t('titles.fillThePossessive', 'Fill in the Correct Possessive')}</h3>\r\n      <p style={{ fontSize: '1.1rem', margin: '15px 0' }}>\r\n        {getLatinizedText(sentenceParts[0], language)}\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleInputChange}\r\n          placeholder={placeholder}\r\n          disabled={isRevealed || isLoading}\r\n          style={{ \r\n            padding: '8px', \r\n            fontSize: '1rem', \r\n            width: `${Math.max(currentExercise.answer.length * 10, 60)}px`, // Dynamic width\r\n            minWidth: '60px',\r\n            maxWidth: '150px',\r\n            margin: '0 5px', \r\n            border: '1px solid #ccc', \r\n            borderRadius: '4px',\r\n            textAlign: 'center'\r\n          }}\r\n        />\r\n        {getLatinizedText(sentenceParts[1] || '', language)}\r\n      </p>\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed && !!currentExercise ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed && !!currentExercise ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && !!currentExercise ? revealTheAnswer : undefined}\r\n        onNextExercise={handleNext}\r\n        config={{\r\n          showCheck: !isRevealed && !!currentExercise,\r\n          showHint: !isRevealed && !!currentExercise,\r\n          showReveal: !isRevealed && !!currentExercise,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PossessivesExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}