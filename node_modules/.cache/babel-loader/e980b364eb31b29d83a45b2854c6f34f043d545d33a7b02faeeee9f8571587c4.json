{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import ExerciseControls from'../../ExerciseControls';import FeedbackDisplay from'../../FeedbackDisplay';import{useI18n}from'../../../../i18n/I18nContext';import{shuffleArray}from'../../../../utils/arrayUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const storyEmojiPool=['😀','😂','😊','😍','🤔','😲','😱','🔥','🎉','🎈','⭐','❤️','💔','👍','👎','🙌','🙏','💀','👻','👽','🤖','👑','💎','💰','📚','✏️','🌍','🌙','☀️','🌳','🍎','🍌','🍕','🚗','✈️','🏠','⏰','🔑','🎁','✉️'];const StoryEmojisExercise=_ref=>{let{onNext}=_ref;const{t}=useI18n();const[text,setText]=useState('');const[currentEmojis,setCurrentEmojis]=useState([]);const[feedback,setFeedback]=useState({message:'',type:''});const selectNewEmojis=useCallback(()=>{setCurrentEmojis(shuffleArray(storyEmojiPool).slice(0,5));setText('');setFeedback({message:'',type:''});},[]);useEffect(()=>{selectNewEmojis();},[selectNewEmojis]);const handleSubmit=()=>{if(text.trim().length<10){setFeedback({message:t('feedback.pleaseWriteMore','Please write a bit more for your story.'),type:'warning'});}else{setFeedback({message:t('feedback.storySubmitted','Great! Story submitted.'),type:'success'});}};const handleNextRequest=()=>{selectNewEmojis();// Get new emojis for this specific exercise type\nif(onNext)onNext();// Also inform parent if it wants to switch story type\n};const showHint=()=>{setFeedback({message:t('feedback.hintEmojiStory',\"Hint: Try to incorporate all emojis into your narrative in a creative way!\"),type:'hint'});};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #eee',borderRadius:'8px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h4\",{children:t('titles.emojiStory',\"Emoji Story\")}),/*#__PURE__*/_jsx(\"p\",{children:t('exercises.emojiStoryPrompt',\"Write a short story based on these emojis:\")}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2.5em',margin:'20px 0',textAlign:'center'},children:currentEmojis.join(' ')}),/*#__PURE__*/_jsx(\"textarea\",{value:text,onChange:e=>setText(e.target.value),rows:\"10\",placeholder:t('placeholders.typeYourStoryHere','Type your story here...'),style:{width:'95%',padding:'10px',marginBottom:'15px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'1em'}}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:handleSubmit,checkButtonText:t('buttons.done','Done'),onShowHint:showHint,onNextExercise:handleNextRequest,config:{showCheck:true,showHint:true,showReveal:false,showNext:true}})]});};export default StoryEmojisExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ExerciseControls","FeedbackDisplay","useI18n","shuffleArray","jsx","_jsx","jsxs","_jsxs","storyEmojiPool","StoryEmojisExercise","_ref","onNext","t","text","setText","currentEmojis","setCurrentEmojis","feedback","setFeedback","message","type","selectNewEmojis","slice","handleSubmit","trim","length","handleNextRequest","showHint","style","padding","border","borderRadius","textAlign","children","fontSize","margin","join","value","onChange","e","target","rows","placeholder","width","marginBottom","onCheckAnswer","checkButtonText","onShowHint","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/StoryEmojisExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\n\r\nconst storyEmojiPool = [\r\n    '😀', '😂', '😊', '😍', '🤔', '😲', '😱', '🔥', '🎉', '🎈', \r\n    '⭐', '❤️', '💔', '👍', '👎', '🙌', '🙏', '💀', '👻', '👽', \r\n    '🤖', '👑', '💎', '💰', '📚', '✏️', '🌍', '🌙', '☀️', '🌳', \r\n    '🍎', '🍌', '🍕', '🚗', '✈️', '🏠', '⏰', '🔑', '🎁', '✉️'\r\n];\r\n\r\nconst StoryEmojisExercise = ({ onNext }) => {\r\n  const { t } = useI18n();\r\n  const [text, setText] = useState('');\r\n  const [currentEmojis, setCurrentEmojis] = useState([]);\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n\r\n  const selectNewEmojis = useCallback(() => {\r\n    setCurrentEmojis(shuffleArray(storyEmojiPool).slice(0, 5));\r\n    setText('');\r\n    setFeedback({ message: '', type: ''});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectNewEmojis();\r\n  }, [selectNewEmojis]);\r\n\r\n  const handleSubmit = () => {\r\n    if (text.trim().length < 10) {\r\n      setFeedback({ message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'), type: 'warning' });\r\n    } else {\r\n      setFeedback({ message: t('feedback.storySubmitted', 'Great! Story submitted.'), type: 'success' });\r\n    }\r\n  };\r\n  \r\n  const handleNextRequest = () => {\r\n      selectNewEmojis(); // Get new emojis for this specific exercise type\r\n      if(onNext) onNext(); // Also inform parent if it wants to switch story type\r\n  }\r\n  \r\n  const showHint = () => {\r\n      setFeedback({ message: t('feedback.hintEmojiStory', \"Hint: Try to incorporate all emojis into your narrative in a creative way!\"), type: 'hint' });\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', textAlign: 'center' }}>\r\n      <h4>{t('titles.emojiStory', \"Emoji Story\")}</h4>\r\n      <p>{t('exercises.emojiStoryPrompt', \"Write a short story based on these emojis:\")}</p>\r\n      <div style={{ fontSize: '2.5em', margin: '20px 0', textAlign: 'center' }}>\r\n        {currentEmojis.join(' ')}\r\n      </div>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        rows=\"10\"\r\n        placeholder={t('placeholders.typeYourStoryHere', 'Type your story here...')}\r\n        style={{ width: '95%', padding: '10px', marginBottom: '15px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em' }}\r\n      />\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} />\r\n      <ExerciseControls\r\n        onCheckAnswer={handleSubmit}\r\n        checkButtonText={t('buttons.done', 'Done')}\r\n        onShowHint={showHint}\r\n        onNextExercise={handleNextRequest}\r\n        config={{\r\n          showCheck: true,\r\n          showHint: true,\r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryEmojisExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}