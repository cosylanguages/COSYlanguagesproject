{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/IdentifyImageExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadImageData } from '../../../../utils/exerciseDataService';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { pronounceText } from '../../../../utils/speechUtils';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useProgress } from '../../../../contexts/ProgressContext';\nimport { normalizeString } from '../../../../utils/stringUtils';\nimport { useI18n } from '../../../../i18n/I18nContext'; // Assuming you use i18n for texts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IdentifyImageExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [currentImageItem, setCurrentImageItem] = useState(null);\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [isAnsweredCorrectly, setIsAnsweredCorrectly] = useState(false);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const progress = useProgress();\n  const {\n    t\n  } = useI18n(); // For internationalized strings\n\n  const correctAnswerText = currentImageItem ? currentImageItem.translations[language] : '';\n  const latinizedCorrectAnswer = useLatinization(correctAnswerText, language);\n  const fetchAndSetNewImage = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setFeedback({\n      message: '',\n      type: ''\n    });\n    setUserInput('');\n    setIsRevealed(false);\n    setCurrentImageItem(null);\n    setIsAnsweredCorrectly(false);\n    try {\n      const {\n        data: images,\n        error: fetchError\n      } = await loadImageData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load image data.');\n      }\n      if (images && images.length > 0) {\n        const randomIndex = Math.floor(Math.random() * images.length);\n        setCurrentImageItem(images[randomIndex]);\n      } else {\n        setError(t('exercises.noImagesFound', 'No images found for the selected criteria.'));\n      }\n    } catch (err) {\n      console.error(\"IdentifyImageExercise - Error fetching image:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchAndSetNewImage();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n      setCurrentImageItem(null);\n    }\n  }, [fetchAndSetNewImage, exerciseKey, language, days, t]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (feedback.message) setFeedback({\n      message: '',\n      type: ''\n    });\n  };\n  const checkAnswer = () => {\n    if (!currentImageItem || isRevealed || isAnsweredCorrectly) return;\n    const correctAnswer = currentImageItem.translations[language];\n    const itemId = `image_${currentImageItem.id || normalizeString(correctAnswer)}`;\n    const isCorrect = normalizeString(userInput) === normalizeString(correctAnswer);\n    if (isCorrect) {\n      setFeedback({\n        message: t('feedback.correct', 'Correct!'),\n        type: 'correct'\n      });\n      progress.awardCorrectAnswer(itemId, 'vocab-identify-image', language);\n      setIsAnsweredCorrectly(true);\n      setTimeout(() => {\n        fetchAndSetNewImage();\n      }, 1500); // 1.5-second delay\n    } else {\n      setFeedback({\n        message: t('feedback.incorrectAnswerWas', `Incorrect. The correct answer is: ${latinizedCorrectAnswer || correctAnswer}`, {\n          answer: latinizedCorrectAnswer || correctAnswer\n        }),\n        type: 'incorrect'\n      });\n      progress.awardIncorrectAnswer(itemId, 'vocab-identify-image', language);\n    }\n  };\n  const showHint = () => {\n    if (!currentImageItem || isRevealed || isAnsweredCorrectly) return;\n    const correctAnswer = currentImageItem.translations[language];\n    setFeedback({\n      message: t('feedback.hintStartsWith', `Hint: The word starts with '${getLatinizedText(correctAnswer[0], language)}'.`, {\n        letter: getLatinizedText(correctAnswer[0], language)\n      }),\n      type: 'hint'\n    });\n  };\n  const revealAnswer = () => {\n    if (!currentImageItem || isAnsweredCorrectly) return;\n    const correctAnswer = currentImageItem.translations[language];\n    const itemId = `image_${currentImageItem.id || normalizeString(correctAnswer)}`;\n    setUserInput(correctAnswer);\n    setFeedback({\n      message: t('feedback.answerIs', `The correct answer is: ${latinizedCorrectAnswer || correctAnswer}`, {\n        answer: latinizedCorrectAnswer || correctAnswer\n      }),\n      type: 'info'\n    });\n    setIsRevealed(true);\n    progress.scheduleReview(itemId, 'vocab-identify-image', language, false); // Ensure language is passed\n    setTimeout(() => {\n      fetchAndSetNewImage();\n    }, 2000); // Slightly longer delay for revealed answers\n  };\n  const handleNext = () => {\n    fetchAndSetNewImage();\n  };\n  const handlePronounceCorrectAnswer = () => {\n    if (currentImageItem && language) {\n      const textToPronounce = currentImageItem.translations[language];\n      pronounceText(textToPronounce, language).catch(err => {\n        console.error(\"Pronunciation error:\", err);\n        setFeedback({\n          message: t('errors.pronunciationError', 'Could not pronounce the word.'),\n          type: 'error'\n        });\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('loading.imageExercise', 'Loading image exercise...')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: error,\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentImageItem && !isLoading) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: t('exercises.noImageToDisplay', 'No image to display. Try different selections.'),\n      type: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n  const imagePath = currentImageItem.src.startsWith('assets/') ? `/${currentImageItem.src}` : currentImageItem.src;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t('titles.whatIsThis', 'What is this?')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath,\n      alt: currentImageItem.alt || \"Identify this image\",\n      style: {\n        maxWidth: '300px',\n        maxHeight: '300px',\n        margin: '15px auto',\n        display: 'block',\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: handleInputChange,\n      placeholder: t('placeholders.typeTheWord', \"Type the word...\"),\n      disabled: isRevealed || isAnsweredCorrectly,\n      style: {\n        padding: '10px',\n        fontSize: '1rem',\n        width: '250px',\n        marginBottom: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '4px'\n      },\n      onKeyPress: event => {\n        if (event.key === 'Enter' && !isRevealed && !isAnsweredCorrectly) {\n          checkAnswer();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePronounceCorrectAnswer,\n      disabled: !currentImageItem,\n      title: t('tooltips.pronounceCorrectAnswer', \"Pronounce correct answer\"),\n      style: {\n        background: 'none',\n        border: 'none',\n        fontSize: '1.5rem',\n        cursor: 'pointer',\n        verticalAlign: 'middle',\n        marginLeft: '5px'\n      },\n      children: \"\\uD83D\\uDD0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onCheckAnswer: !isRevealed && !isAnsweredCorrectly && currentImageItem ? checkAnswer : undefined,\n      onShowHint: !isRevealed && !isAnsweredCorrectly && currentImageItem ? showHint : undefined,\n      onRevealAnswer: !isRevealed && !isAnsweredCorrectly && currentImageItem ? revealAnswer : undefined,\n      onNextExercise: handleNext,\n      config: {\n        showCheck: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\n        showHint: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\n        showReveal: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(IdentifyImageExercise, \"Aq4TLBenlVaRgzfEsfOZIqBncgQ=\", false, function () {\n  return [useLatinizationContext, useProgress, useI18n, useLatinization];\n});\n_c = IdentifyImageExercise;\nexport default IdentifyImageExercise;\nvar _c;\n$RefreshReg$(_c, \"IdentifyImageExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadImageData","useLatinizationContext","useLatinization","pronounceText","FeedbackDisplay","ExerciseControls","useProgress","normalizeString","useI18n","jsxDEV","_jsxDEV","IdentifyImageExercise","language","days","exerciseKey","_s","currentImageItem","setCurrentImageItem","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","isAnsweredCorrectly","setIsAnsweredCorrectly","isLatinized","getLatinizedText","progress","t","correctAnswerText","translations","latinizedCorrectAnswer","fetchAndSetNewImage","data","images","fetchError","Error","length","randomIndex","Math","floor","random","err","console","handleInputChange","e","target","value","checkAnswer","correctAnswer","itemId","id","isCorrect","awardCorrectAnswer","setTimeout","answer","awardIncorrectAnswer","showHint","letter","revealAnswer","scheduleReview","handleNext","handlePronounceCorrectAnswer","textToPronounce","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","imagePath","src","startsWith","style","textAlign","padding","border","borderRadius","alt","maxWidth","maxHeight","margin","display","onChange","placeholder","disabled","fontSize","width","marginBottom","onKeyPress","event","key","onClick","title","background","cursor","verticalAlign","marginLeft","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/IdentifyImageExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadImageData } from '../../../../utils/exerciseDataService';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { pronounceText } from '../../../../utils/speechUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useProgress } from '../../../../contexts/ProgressContext';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport { useI18n } from '../../../../i18n/I18nContext'; // Assuming you use i18n for texts\r\n\r\nconst IdentifyImageExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentImageItem, setCurrentImageItem] = useState(null);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [isAnsweredCorrectly, setIsAnsweredCorrectly] = useState(false);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const progress = useProgress();\r\n  const { t } = useI18n(); // For internationalized strings\r\n\r\n  const correctAnswerText = currentImageItem ? currentImageItem.translations[language] : '';\r\n  const latinizedCorrectAnswer = useLatinization(correctAnswerText, language);\r\n\r\n  const fetchAndSetNewImage = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setUserInput('');\r\n    setIsRevealed(false);\r\n    setCurrentImageItem(null);\r\n    setIsAnsweredCorrectly(false);\r\n    try {\r\n      const { data: images, error: fetchError } = await loadImageData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load image data.');\r\n      }\r\n      if (images && images.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * images.length);\r\n        setCurrentImageItem(images[randomIndex]);\r\n      } else {\r\n        setError(t('exercises.noImagesFound', 'No images found for the selected criteria.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"IdentifyImageExercise - Error fetching image:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchAndSetNewImage();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n      setCurrentImageItem(null);\r\n    }\r\n  }, [fetchAndSetNewImage, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!currentImageItem || isRevealed || isAnsweredCorrectly) return;\r\n    const correctAnswer = currentImageItem.translations[language];\r\n    const itemId = `image_${currentImageItem.id || normalizeString(correctAnswer)}`;\r\n    const isCorrect = normalizeString(userInput) === normalizeString(correctAnswer);\r\n\r\n    if (isCorrect) {\r\n      setFeedback({ message: t('feedback.correct', 'Correct!'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'vocab-identify-image', language);\r\n      setIsAnsweredCorrectly(true);\r\n      setTimeout(() => {\r\n        fetchAndSetNewImage();\r\n      }, 1500); // 1.5-second delay\r\n    } else {\r\n      setFeedback({ message: t('feedback.incorrectAnswerWas', `Incorrect. The correct answer is: ${latinizedCorrectAnswer || correctAnswer}`, { answer: latinizedCorrectAnswer || correctAnswer }), type: 'incorrect' });\r\n      progress.awardIncorrectAnswer(itemId, 'vocab-identify-image', language);\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!currentImageItem || isRevealed || isAnsweredCorrectly) return;\r\n    const correctAnswer = currentImageItem.translations[language];\r\n    setFeedback({ message: t('feedback.hintStartsWith', `Hint: The word starts with '${getLatinizedText(correctAnswer[0], language)}'.`, { letter: getLatinizedText(correctAnswer[0], language) }), type: 'hint' });\r\n  };\r\n\r\n  const revealAnswer = () => {\r\n    if (!currentImageItem || isAnsweredCorrectly) return;\r\n    const correctAnswer = currentImageItem.translations[language];\r\n    const itemId = `image_${currentImageItem.id || normalizeString(correctAnswer)}`;\r\n    setUserInput(correctAnswer);\r\n    setFeedback({ message: t('feedback.answerIs', `The correct answer is: ${latinizedCorrectAnswer || correctAnswer}`, { answer: latinizedCorrectAnswer || correctAnswer }), type: 'info' });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'vocab-identify-image', language, false); // Ensure language is passed\r\n    setTimeout(() => {\r\n        fetchAndSetNewImage();\r\n    }, 2000); // Slightly longer delay for revealed answers\r\n  };\r\n\r\n  const handleNext = () => {\r\n    fetchAndSetNewImage();\r\n  };\r\n\r\n  const handlePronounceCorrectAnswer = () => {\r\n    if (currentImageItem && language) {\r\n      const textToPronounce = currentImageItem.translations[language];\r\n      pronounceText(textToPronounce, language).catch(err => {\r\n          console.error(\"Pronunciation error:\", err);\r\n          setFeedback({message: t('errors.pronunciationError', 'Could not pronounce the word.'), type: 'error'});\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>{t('loading.imageExercise', 'Loading image exercise...')}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <FeedbackDisplay message={error} type=\"error\" />;\r\n  }\r\n\r\n  if (!currentImageItem && !isLoading) {\r\n    return <FeedbackDisplay message={t('exercises.noImageToDisplay', 'No image to display. Try different selections.')} type=\"info\" />;\r\n  }\r\n\r\n  const imagePath = currentImageItem.src.startsWith('assets/') ? `/${currentImageItem.src}` : currentImageItem.src;\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}>\r\n      <h3>{t('titles.whatIsThis', 'What is this?')}</h3>\r\n      <img\r\n        src={imagePath}\r\n        alt={currentImageItem.alt || \"Identify this image\"}\r\n        style={{ maxWidth: '300px', maxHeight: '300px', margin: '15px auto', display: 'block', border: '1px solid #ccc' }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={userInput}\r\n        onChange={handleInputChange}\r\n        placeholder={t('placeholders.typeTheWord', \"Type the word...\")}\r\n        disabled={isRevealed || isAnsweredCorrectly}\r\n        style={{ padding: '10px', fontSize: '1rem', width: '250px', marginBottom: '10px', border: '1px solid #ccc', borderRadius: '4px' }}\r\n        onKeyPress={(event) => {\r\n            if (event.key === 'Enter' && !isRevealed && !isAnsweredCorrectly) {\r\n              checkAnswer();\r\n            }\r\n        }}\r\n      />\r\n      <button onClick={handlePronounceCorrectAnswer} disabled={!currentImageItem} title={t('tooltips.pronounceCorrectAnswer', \"Pronounce correct answer\")} style={{background:'none', border:'none', fontSize:'1.5rem', cursor:'pointer', verticalAlign:'middle', marginLeft:'5px'}}>🔊</button>\r\n\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n\r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed && !isAnsweredCorrectly && currentImageItem ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed && !isAnsweredCorrectly && currentImageItem ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && !isAnsweredCorrectly && currentImageItem ? revealAnswer : undefined}\r\n        onNextExercise={handleNext}\r\n        config={{\r\n            showCheck: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\r\n            showHint: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\r\n            showReveal: !isRevealed && !isAnsweredCorrectly && !!currentImageItem,\r\n            showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IdentifyImageExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}