{"ast":null,"code":"// frontend/src/utils/speechUtils.js\n/**\r\n * Maps COSYlanguage identifiers to BCP 47 language codes for Web Speech API.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier (e.g., \"COSYenglish\").\r\n * @returns {string} The BCP 47 language code (e.g., \"en-US\").\r\n */export function mapLanguageToSpeechCode(cosyLanguage){let speechCode;let isFallback=false;// Ensure cosyLanguage is a string before calling toLowerCase or other string methods\nconst langStr=String(cosyLanguage||'');switch(langStr){case'COSYenglish':speechCode='en-US';break;case'COSYfrançais':speechCode='fr-FR';break;case'COSYespañol':speechCode='es-ES';break;case'COSYitaliano':speechCode='it-IT';break;case'COSYdeutsch':speechCode='de-DE';break;case'COSYportuguês':speechCode='pt-PT';break;case'ΚΟΖΥελληνικά':speechCode='el-GR';break;case'ТАКОЙрусский':speechCode='ru-RU';break;case'ԾՈՍՅհայկական':speechCode='hy-AM';break;case'COSYbrezhoneg':speechCode='fr-FR';isFallback=true;break;// Breton uses French as a fallback\ncase'COSYtatarça':speechCode='ru-RU';isFallback=true;break;// Tatar uses Russian as a fallback\ncase'COSYbashkort':speechCode='ru-RU';isFallback=true;break;// Bashkir uses Russian as a fallback\ndefault:console.warn(\"SpeechUtils: Unknown COSYlanguage \\\"\".concat(langStr,\"\\\". Defaulting to en-US.\"));speechCode='en-US';isFallback=true;break;}if(isFallback&&langStr!==''){// Avoid logging fallback for empty input\nconsole.warn(\"SpeechUtils: No direct speech synthesis voice for \".concat(cosyLanguage,\". Using fallback \").concat(speechCode,\".\"));}return speechCode;}/**\r\n * Pronounces a given text using the Web Speech API.\r\n * @param {string} text - The text to pronounce.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier for the text's language.\r\n * @returns {Promise<void>} A promise that resolves when speaking starts or rejects on error/no support.\r\n */export const pronounceText=(text,cosyLanguage)=>{return new Promise((resolve,reject)=>{if(typeof window==='undefined'||!window.speechSynthesis){console.error('SpeechUtils: Speech Synthesis not supported by this browser or not in a browser environment.');reject(new Error('Speech Synthesis not supported'));return;}if(!text||String(text).trim()===''){console.warn('PronounceText: No text provided.');// Resolve an empty promise as there's nothing to speak.\n// Or reject, depending on desired behavior for empty text. For now, resolving.\nresolve();return;}const speechLang=mapLanguageToSpeechCode(cosyLanguage);const utterance=new SpeechSynthesisUtterance(String(text).trim());utterance.lang=speechLang;// Cancel any ongoing speech before speaking a new one\nwindow.speechSynthesis.cancel();utterance.onstart=()=>{console.log(\"SpeechUtils: Speaking \\\"\".concat(text,\"\\\" in \").concat(cosyLanguage,\" (mapped to \").concat(speechLang,\")\"));resolve();};utterance.onerror=event=>{console.error('SpeechUtils: SpeechSynthesisUtterance.onerror - Error speaking:',event.error,'for text:',text,'lang:',speechLang);reject(event.error instanceof Error?event.error:new Error(String(event.error||'Unknown speech error')));};// Some browsers might not fire onstart immediately or reliably.\n// Fallback: resolve after a short delay if onstart doesn't fire,\n// but this is less ideal than relying on the event.\n// For simplicity, we'll rely on onstart and onerror.\nwindow.speechSynthesis.speak(utterance);});};/**\r\n * Attempts to unlock audio playback in the browser.\r\n * Call this after a user interaction if speech synthesis isn't working.\r\n */export const unlockAudioPlayback=()=>{if(typeof window!=='undefined'&&typeof Audio!=='undefined'){try{const silentAudio=new Audio(\"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA\");silentAudio.volume=0;const playPromise=silentAudio.play();if(playPromise!==undefined){playPromise.then(_=>{console.log(\"SpeechUtils: Audio playback likely unlocked.\");}).catch(error=>{console.warn(\"SpeechUtils: Audio unlock failed (this is common, user interaction might be needed for audio):\",error);});}}catch(e){console.error(\"SpeechUtils: Error trying to unlock audio:\",e);}}};// Speech Recognition (STT) logic will be handled separately, likely in a custom hook.\nconsole.log('[SpeechUtils] Service loaded with TTS and language mapping.');","map":{"version":3,"names":["mapLanguageToSpeechCode","cosyLanguage","speechCode","isFallback","langStr","String","console","warn","concat","pronounceText","text","Promise","resolve","reject","window","speechSynthesis","error","Error","trim","speechLang","utterance","SpeechSynthesisUtterance","lang","cancel","onstart","log","onerror","event","speak","unlockAudioPlayback","Audio","silentAudio","volume","playPromise","play","undefined","then","_","catch","e"],"sources":["/workspaces/COSYlanguagesproject/src/utils/speechUtils.js"],"sourcesContent":["// frontend/src/utils/speechUtils.js\r\n\r\n/**\r\n * Maps COSYlanguage identifiers to BCP 47 language codes for Web Speech API.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier (e.g., \"COSYenglish\").\r\n * @returns {string} The BCP 47 language code (e.g., \"en-US\").\r\n */\r\nexport function mapLanguageToSpeechCode(cosyLanguage) {\r\n  let speechCode;\r\n  let isFallback = false;\r\n  // Ensure cosyLanguage is a string before calling toLowerCase or other string methods\r\n  const langStr = String(cosyLanguage || '');\r\n\r\n  switch(langStr) {\r\n    case 'COSYenglish': speechCode = 'en-US'; break;\r\n    case 'COSYfrançais': speechCode = 'fr-FR'; break;\r\n    case 'COSYespañol': speechCode = 'es-ES'; break;\r\n    case 'COSYitaliano': speechCode = 'it-IT'; break;\r\n    case 'COSYdeutsch': speechCode = 'de-DE'; break;\r\n    case 'COSYportuguês': speechCode = 'pt-PT'; break;\r\n    case 'ΚΟΖΥελληνικά': speechCode = 'el-GR'; break;\r\n    case 'ТАКОЙрусский': speechCode = 'ru-RU'; break;\r\n    case 'ԾՈՍՅհայկական': speechCode = 'hy-AM'; break;\r\n    case 'COSYbrezhoneg': speechCode = 'fr-FR'; isFallback = true; break; // Breton uses French as a fallback\r\n    case 'COSYtatarça': speechCode = 'ru-RU'; isFallback = true; break;   // Tatar uses Russian as a fallback\r\n    case 'COSYbashkort': speechCode = 'ru-RU'; isFallback = true; break; // Bashkir uses Russian as a fallback\r\n    default: \r\n      console.warn(`SpeechUtils: Unknown COSYlanguage \"${langStr}\". Defaulting to en-US.`);\r\n      speechCode = 'en-US'; \r\n      isFallback = true; \r\n      break;\r\n  }\r\n  if (isFallback && langStr !== '') { // Avoid logging fallback for empty input\r\n    console.warn(`SpeechUtils: No direct speech synthesis voice for ${cosyLanguage}. Using fallback ${speechCode}.`);\r\n  }\r\n  return speechCode;\r\n}\r\n\r\n/**\r\n * Pronounces a given text using the Web Speech API.\r\n * @param {string} text - The text to pronounce.\r\n * @param {string} cosyLanguage - The COSYlanguage identifier for the text's language.\r\n * @returns {Promise<void>} A promise that resolves when speaking starts or rejects on error/no support.\r\n */\r\nexport const pronounceText = (text, cosyLanguage) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof window === 'undefined' || !window.speechSynthesis) {\r\n      console.error('SpeechUtils: Speech Synthesis not supported by this browser or not in a browser environment.');\r\n      reject(new Error('Speech Synthesis not supported'));\r\n      return;\r\n    }\r\n\r\n    if (!text || String(text).trim() === '') {\r\n      console.warn('PronounceText: No text provided.');\r\n      // Resolve an empty promise as there's nothing to speak.\r\n      // Or reject, depending on desired behavior for empty text. For now, resolving.\r\n      resolve(); \r\n      return;\r\n    }\r\n\r\n    const speechLang = mapLanguageToSpeechCode(cosyLanguage);\r\n    const utterance = new SpeechSynthesisUtterance(String(text).trim());\r\n    utterance.lang = speechLang;\r\n    \r\n    // Cancel any ongoing speech before speaking a new one\r\n    window.speechSynthesis.cancel(); \r\n\r\n    utterance.onstart = () => {\r\n      console.log(`SpeechUtils: Speaking \"${text}\" in ${cosyLanguage} (mapped to ${speechLang})`);\r\n      resolve();\r\n    };\r\n\r\n    utterance.onerror = (event) => {\r\n      console.error('SpeechUtils: SpeechSynthesisUtterance.onerror - Error speaking:', event.error, 'for text:', text, 'lang:', speechLang);\r\n      reject(event.error instanceof Error ? event.error : new Error(String(event.error || 'Unknown speech error')));\r\n    };\r\n    \r\n    // Some browsers might not fire onstart immediately or reliably.\r\n    // Fallback: resolve after a short delay if onstart doesn't fire,\r\n    // but this is less ideal than relying on the event.\r\n    // For simplicity, we'll rely on onstart and onerror.\r\n\r\n    window.speechSynthesis.speak(utterance);\r\n  });\r\n};\r\n\r\n/**\r\n * Attempts to unlock audio playback in the browser.\r\n * Call this after a user interaction if speech synthesis isn't working.\r\n */\r\nexport const unlockAudioPlayback = () => {\r\n  if (typeof window !== 'undefined' && typeof Audio !== 'undefined') {\r\n    try {\r\n      const silentAudio = new Audio(\"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA\");\r\n      silentAudio.volume = 0;\r\n      const playPromise = silentAudio.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise.then(_ => {\r\n          console.log(\"SpeechUtils: Audio playback likely unlocked.\");\r\n        }).catch(error => {\r\n          console.warn(\"SpeechUtils: Audio unlock failed (this is common, user interaction might be needed for audio):\", error);\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.error(\"SpeechUtils: Error trying to unlock audio:\", e);\r\n    }\r\n  }\r\n};\r\n\r\n// Speech Recognition (STT) logic will be handled separately, likely in a custom hook.\r\nconsole.log('[SpeechUtils] Service loaded with TTS and language mapping.');\r\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAA,uBAAuBA,CAACC,YAAY,CAAE,CACpD,GAAI,CAAAC,UAAU,CACd,GAAI,CAAAC,UAAU,CAAG,KAAK,CACtB;AACA,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACJ,YAAY,EAAI,EAAE,CAAC,CAE1C,OAAOG,OAAO,EACZ,IAAK,aAAa,CAAEF,UAAU,CAAG,OAAO,CAAE,MAC1C,IAAK,cAAc,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC3C,IAAK,aAAa,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC1C,IAAK,cAAc,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC3C,IAAK,aAAa,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC1C,IAAK,eAAe,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC5C,IAAK,cAAc,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC3C,IAAK,cAAc,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC3C,IAAK,cAAc,CAAEA,UAAU,CAAG,OAAO,CAAE,MAC3C,IAAK,eAAe,CAAEA,UAAU,CAAG,OAAO,CAAEC,UAAU,CAAG,IAAI,CAAE,MAAO;AACtE,IAAK,aAAa,CAAED,UAAU,CAAG,OAAO,CAAEC,UAAU,CAAG,IAAI,CAAE,MAAS;AACtE,IAAK,cAAc,CAAED,UAAU,CAAG,OAAO,CAAEC,UAAU,CAAG,IAAI,CAAE,MAAO;AACrE,QACEG,OAAO,CAACC,IAAI,wCAAAC,MAAA,CAAuCJ,OAAO,4BAAyB,CAAC,CACpFF,UAAU,CAAG,OAAO,CACpBC,UAAU,CAAG,IAAI,CACjB,MACJ,CACA,GAAIA,UAAU,EAAIC,OAAO,GAAK,EAAE,CAAE,CAAE;AAClCE,OAAO,CAACC,IAAI,sDAAAC,MAAA,CAAsDP,YAAY,sBAAAO,MAAA,CAAoBN,UAAU,KAAG,CAAC,CAClH,CACA,MAAO,CAAAA,UAAU,CACnB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAO,aAAa,CAAGA,CAACC,IAAI,CAAET,YAAY,GAAK,CACnD,MAAO,IAAI,CAAAU,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAI,CAACA,MAAM,CAACC,eAAe,CAAE,CAC5DT,OAAO,CAACU,KAAK,CAAC,8FAA8F,CAAC,CAC7GH,MAAM,CAAC,GAAI,CAAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CACnD,OACF,CAEA,GAAI,CAACP,IAAI,EAAIL,MAAM,CAACK,IAAI,CAAC,CAACQ,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACvCZ,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC,CAChD;AACA;AACAK,OAAO,CAAC,CAAC,CACT,OACF,CAEA,KAAM,CAAAO,UAAU,CAAGnB,uBAAuB,CAACC,YAAY,CAAC,CACxD,KAAM,CAAAmB,SAAS,CAAG,GAAI,CAAAC,wBAAwB,CAAChB,MAAM,CAACK,IAAI,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC,CACnEE,SAAS,CAACE,IAAI,CAAGH,UAAU,CAE3B;AACAL,MAAM,CAACC,eAAe,CAACQ,MAAM,CAAC,CAAC,CAE/BH,SAAS,CAACI,OAAO,CAAG,IAAM,CACxBlB,OAAO,CAACmB,GAAG,4BAAAjB,MAAA,CAA2BE,IAAI,WAAAF,MAAA,CAAQP,YAAY,iBAAAO,MAAA,CAAeW,UAAU,KAAG,CAAC,CAC3FP,OAAO,CAAC,CAAC,CACX,CAAC,CAEDQ,SAAS,CAACM,OAAO,CAAIC,KAAK,EAAK,CAC7BrB,OAAO,CAACU,KAAK,CAAC,iEAAiE,CAAEW,KAAK,CAACX,KAAK,CAAE,WAAW,CAAEN,IAAI,CAAE,OAAO,CAAES,UAAU,CAAC,CACrIN,MAAM,CAACc,KAAK,CAACX,KAAK,WAAY,CAAAC,KAAK,CAAGU,KAAK,CAACX,KAAK,CAAG,GAAI,CAAAC,KAAK,CAACZ,MAAM,CAACsB,KAAK,CAACX,KAAK,EAAI,sBAAsB,CAAC,CAAC,CAAC,CAC/G,CAAC,CAED;AACA;AACA;AACA;AAEAF,MAAM,CAACC,eAAe,CAACa,KAAK,CAACR,SAAS,CAAC,CACzC,CAAC,CAAC,CACJ,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAS,mBAAmB,CAAGA,CAAA,GAAM,CACvC,GAAI,MAAO,CAAAf,MAAM,GAAK,WAAW,EAAI,MAAO,CAAAgB,KAAK,GAAK,WAAW,CAAE,CACjE,GAAI,CACF,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAD,KAAK,CAAC,wFAAwF,CAAC,CACvHC,WAAW,CAACC,MAAM,CAAG,CAAC,CACtB,KAAM,CAAAC,WAAW,CAAGF,WAAW,CAACG,IAAI,CAAC,CAAC,CAEtC,GAAID,WAAW,GAAKE,SAAS,CAAE,CAC7BF,WAAW,CAACG,IAAI,CAACC,CAAC,EAAI,CACpB/B,OAAO,CAACmB,GAAG,CAAC,8CAA8C,CAAC,CAC7D,CAAC,CAAC,CAACa,KAAK,CAACtB,KAAK,EAAI,CAChBV,OAAO,CAACC,IAAI,CAAC,gGAAgG,CAAES,KAAK,CAAC,CACvH,CAAC,CAAC,CACJ,CACF,CAAE,MAAOuB,CAAC,CAAE,CACVjC,OAAO,CAACU,KAAK,CAAC,4CAA4C,CAAEuB,CAAC,CAAC,CAChE,CACF,CACF,CAAC,CAED;AACAjC,OAAO,CAACmB,GAAG,CAAC,6DAA6D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}