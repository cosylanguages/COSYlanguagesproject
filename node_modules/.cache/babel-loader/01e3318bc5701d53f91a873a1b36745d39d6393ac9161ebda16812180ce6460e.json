{"ast":null,"code":"import _objectSpread from\"/workspaces/COSYlanguagesproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import ExerciseControls from'../../ExerciseControls';import FeedbackDisplay from'../../FeedbackDisplay';import{useI18n}from'../../../../i18n/I18nContext';import{loadWritingPromptsData}from'../../../../utils/exerciseDataService';import{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WhatHappenedBeforeExercise=_ref=>{let{language,days,onNext}=_ref;const{t}=useI18n();const[text,setText]=useState('');const[currentPrompt,setCurrentPrompt]=useState('');const[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const fetchNewPrompt=useCallback(async()=>{setIsLoading(true);setError(null);setCurrentPrompt('');setText('');setFeedback({message:'',type:''});try{const{data:promptsData,error:fetchError}=await loadWritingPromptsData(language,days);if(fetchError)throw new Error(fetchError.message||'Failed to load writing prompts.');const prompts=promptsData===null||promptsData===void 0?void 0:promptsData.what_happened_before;if(prompts&&prompts.length>0){setCurrentPrompt(prompts[Math.floor(Math.random()*prompts.length)]);}else{setError(t('exercises.noWhatHappenedBeforePrompts','No \"What happened before?\" prompts found.'));}}catch(err){console.error(\"WhatHappenedBeforeExercise - Error fetching prompt:\",err);setError(err.message||t('errors.unexpectedError','An unexpected error occurred.'));}finally{setIsLoading(false);}},[language,days,t]);useEffect(()=>{if(language&&days&&days.length>0){fetchNewPrompt();}else{setIsLoading(false);setError(t('errors.selectLangDay',\"Please select a language and day(s).\"));}},[fetchNewPrompt,language,days]);const handleSubmit=()=>{if(text.trim().length<10){setFeedback({message:t('feedback.pleaseWriteMore','Please write a bit more for your story.'),type:'warning'});}else{setFeedback({message:t('feedback.prequelSubmitted','Great! Prequel submitted.'),type:'success'});}};const handleNextRequest=()=>{fetchNewPrompt();if(onNext)onNext();};const showHint=()=>{setFeedback({message:t('feedback.hintWhatHappenedBefore',\"Hint: Consider the events or character motivations that could lead to this situation.\"),type:'hint'});};if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:t('loading.writingPrompts','Loading writing prompt...')});if(error)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});if(!currentPrompt&&!isLoading)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noPromptsToDisplay','No prompt to display.'),type:\"info\"});const latinizedPrompt=getLatinizedText(currentPrompt,language);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #eee',borderRadius:'8px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h4\",{children:t('titles.whatHappenedBefore',\"What Happened Before?\")}),/*#__PURE__*/_jsxs(\"p\",{style:_objectSpread({fontStyle:'italic',margin:'20px'},isLatinized&&currentPrompt!==latinizedPrompt&&{fontStyle:'italic'}),children:[\"\\\"\",latinizedPrompt,\"\\\"\"]}),/*#__PURE__*/_jsx(\"textarea\",{value:text,onChange:e=>setText(e.target.value),rows:\"10\",placeholder:t('placeholders.typeYourPrequelHere','Type what led to this...'),style:{width:'95%',padding:'10px',marginBottom:'15px',border:'1px solid #ccc',borderRadius:'4px',fontSize:'1em'}}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:handleSubmit,checkButtonText:t('buttons.done','Done'),onShowHint:showHint,onNextExercise:handleNextRequest,config:{showCheck:true,showHint:true,showReveal:false,showNext:true}})]});};export default WhatHappenedBeforeExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ExerciseControls","FeedbackDisplay","useI18n","loadWritingPromptsData","useLatinizationContext","useLatinization","jsx","_jsx","jsxs","_jsxs","WhatHappenedBeforeExercise","_ref","language","days","onNext","t","text","setText","currentPrompt","setCurrentPrompt","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","fetchNewPrompt","data","promptsData","fetchError","Error","prompts","what_happened_before","length","Math","floor","random","err","console","handleSubmit","trim","handleNextRequest","showHint","children","latinizedPrompt","style","padding","border","borderRadius","textAlign","_objectSpread","fontStyle","margin","value","onChange","e","target","rows","placeholder","width","marginBottom","fontSize","onCheckAnswer","checkButtonText","onShowHint","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/WhatHappenedBeforeExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { loadWritingPromptsData } from '../../../../utils/exerciseDataService';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\n\r\nconst WhatHappenedBeforeExercise = ({ language, days, onNext }) => {\r\n  const { t } = useI18n();\r\n  const [text, setText] = useState('');\r\n  const [currentPrompt, setCurrentPrompt] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n\r\n  const fetchNewPrompt = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCurrentPrompt('');\r\n    setText('');\r\n    setFeedback({ message: '', type: '' });\r\n    try {\r\n      const { data: promptsData, error: fetchError } = await loadWritingPromptsData(language, days);\r\n      if (fetchError) throw new Error(fetchError.message || 'Failed to load writing prompts.');\r\n\r\n      const prompts = promptsData?.what_happened_before;\r\n      if (prompts && prompts.length > 0) {\r\n        setCurrentPrompt(prompts[Math.floor(Math.random() * prompts.length)]);\r\n      } else {\r\n        setError(t('exercises.noWhatHappenedBeforePrompts', 'No \"What happened before?\" prompts found.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"WhatHappenedBeforeExercise - Error fetching prompt:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n     if (language && days && days.length > 0) {\r\n        fetchNewPrompt();\r\n    } else {\r\n        setIsLoading(false);\r\n        setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewPrompt, language, days]);\r\n  \r\n  const handleSubmit = () => {\r\n    if (text.trim().length < 10) {\r\n      setFeedback({ message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'), type: 'warning' });\r\n    } else {\r\n      setFeedback({ message: t('feedback.prequelSubmitted', 'Great! Prequel submitted.'), type: 'success' });\r\n    }\r\n  };\r\n  \r\n  const handleNextRequest = () => {\r\n      fetchNewPrompt();\r\n      if(onNext) onNext();\r\n  }\r\n  \r\n  const showHint = () => {\r\n      setFeedback({ message: t('feedback.hintWhatHappenedBefore', \"Hint: Consider the events or character motivations that could lead to this situation.\"), type: 'hint' });\r\n  }\r\n\r\n  if (isLoading) return <p>{t('loading.writingPrompts', 'Loading writing prompt...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!currentPrompt && !isLoading) return <FeedbackDisplay message={t('exercises.noPromptsToDisplay', 'No prompt to display.')} type=\"info\" />;\r\n\r\n  const latinizedPrompt = getLatinizedText(currentPrompt, language);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', textAlign: 'center' }}>\r\n      <h4>{t('titles.whatHappenedBefore', \"What Happened Before?\")}</h4>\r\n      <p style={{ fontStyle: 'italic', margin: '20px', ...(isLatinized && currentPrompt !== latinizedPrompt && {fontStyle: 'italic'}) }}>\r\n        \"{latinizedPrompt}\"\r\n      </p>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        rows=\"10\"\r\n        placeholder={t('placeholders.typeYourPrequelHere', 'Type what led to this...')}\r\n        style={{ width: '95%', padding: '10px', marginBottom: '15px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em' }}\r\n      />\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} />\r\n      <ExerciseControls\r\n        onCheckAnswer={handleSubmit}\r\n        checkButtonText={t('buttons.done', 'Done')}\r\n        onShowHint={showHint}\r\n        onNextExercise={handleNextRequest}\r\n        config={{\r\n          showCheck: true,\r\n          showHint: true,\r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhatHappenedBeforeExercise;\r\n"],"mappings":"qHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,MAAO,CAAAC,gBAAgB,KAAM,wBAAwB,CACrD,MAAO,CAAAC,eAAe,KAAM,uBAAuB,CACnD,OAASC,OAAO,KAAQ,8BAA8B,CACtD,OAASC,sBAAsB,KAAQ,uCAAuC,CAC9E,OAASC,sBAAsB,KAAQ,0CAA0C,CACjF,MAAO,CAAAC,eAAe,KAAM,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhE,KAAM,CAAAC,0BAA0B,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,IAAI,CAAEC,MAAO,CAAC,CAAAH,IAAA,CAC5D,KAAM,CAAEI,CAAE,CAAC,CAAGb,OAAO,CAAC,CAAC,CACvB,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACqB,aAAa,CAAEC,gBAAgB,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACuB,QAAQ,CAAEC,WAAW,CAAC,CAAGxB,QAAQ,CAAC,CAAEyB,OAAO,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CACnE,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAAC6B,KAAK,CAAEC,QAAQ,CAAC,CAAG9B,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAE+B,WAAY,CAAC,CAAGxB,sBAAsB,CAAC,CAAC,CAChD,KAAM,CAAAyB,gBAAgB,CAAGxB,eAAe,CAExC,KAAM,CAAAyB,cAAc,CAAG/B,WAAW,CAAC,SAAY,CAC7C0B,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,IAAI,CAAC,CACdR,gBAAgB,CAAC,EAAE,CAAC,CACpBF,OAAO,CAAC,EAAE,CAAC,CACXI,WAAW,CAAC,CAAEC,OAAO,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAC,CACtC,GAAI,CACF,KAAM,CAAEQ,IAAI,CAAEC,WAAW,CAAEN,KAAK,CAAEO,UAAW,CAAC,CAAG,KAAM,CAAA9B,sBAAsB,CAACS,QAAQ,CAAEC,IAAI,CAAC,CAC7F,GAAIoB,UAAU,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACD,UAAU,CAACX,OAAO,EAAI,iCAAiC,CAAC,CAExF,KAAM,CAAAa,OAAO,CAAGH,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEI,oBAAoB,CACjD,GAAID,OAAO,EAAIA,OAAO,CAACE,MAAM,CAAG,CAAC,CAAE,CACjClB,gBAAgB,CAACgB,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGL,OAAO,CAACE,MAAM,CAAC,CAAC,CAAC,CACvE,CAAC,IAAM,CACLV,QAAQ,CAACZ,CAAC,CAAC,uCAAuC,CAAE,2CAA2C,CAAC,CAAC,CACnG,CACF,CAAE,MAAO0B,GAAG,CAAE,CACZC,OAAO,CAAChB,KAAK,CAAC,qDAAqD,CAAEe,GAAG,CAAC,CACzEd,QAAQ,CAACc,GAAG,CAACnB,OAAO,EAAIP,CAAC,CAAC,wBAAwB,CAAE,+BAA+B,CAAC,CAAC,CACvF,CAAC,OAAS,CACRU,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAE,CAACb,QAAQ,CAAEC,IAAI,CAAEE,CAAC,CAAC,CAAC,CAEvBjB,SAAS,CAAC,IAAM,CACb,GAAIc,QAAQ,EAAIC,IAAI,EAAIA,IAAI,CAACwB,MAAM,CAAG,CAAC,CAAE,CACtCP,cAAc,CAAC,CAAC,CACpB,CAAC,IAAM,CACHL,YAAY,CAAC,KAAK,CAAC,CACnBE,QAAQ,CAACZ,CAAC,CAAC,sBAAsB,CAAE,sCAAsC,CAAC,CAAC,CAC/E,CACF,CAAC,CAAE,CAACe,cAAc,CAAElB,QAAQ,CAAEC,IAAI,CAAC,CAAC,CAEpC,KAAM,CAAA8B,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI3B,IAAI,CAAC4B,IAAI,CAAC,CAAC,CAACP,MAAM,CAAG,EAAE,CAAE,CAC3BhB,WAAW,CAAC,CAAEC,OAAO,CAAEP,CAAC,CAAC,0BAA0B,CAAE,yCAAyC,CAAC,CAAEQ,IAAI,CAAE,SAAU,CAAC,CAAC,CACrH,CAAC,IAAM,CACLF,WAAW,CAAC,CAAEC,OAAO,CAAEP,CAAC,CAAC,2BAA2B,CAAE,2BAA2B,CAAC,CAAEQ,IAAI,CAAE,SAAU,CAAC,CAAC,CACxG,CACF,CAAC,CAED,KAAM,CAAAsB,iBAAiB,CAAGA,CAAA,GAAM,CAC5Bf,cAAc,CAAC,CAAC,CAChB,GAAGhB,MAAM,CAAEA,MAAM,CAAC,CAAC,CACvB,CAAC,CAED,KAAM,CAAAgC,QAAQ,CAAGA,CAAA,GAAM,CACnBzB,WAAW,CAAC,CAAEC,OAAO,CAAEP,CAAC,CAAC,iCAAiC,CAAE,uFAAuF,CAAC,CAAEQ,IAAI,CAAE,MAAO,CAAC,CAAC,CACzK,CAAC,CAED,GAAIC,SAAS,CAAE,mBAAOjB,IAAA,MAAAwC,QAAA,CAAIhC,CAAC,CAAC,wBAAwB,CAAE,2BAA2B,CAAC,CAAI,CAAC,CACvF,GAAIW,KAAK,CAAE,mBAAOnB,IAAA,CAACN,eAAe,EAACqB,OAAO,CAAEI,KAAM,CAACH,IAAI,CAAC,OAAO,CAAE,CAAC,CAClE,GAAI,CAACL,aAAa,EAAI,CAACM,SAAS,CAAE,mBAAOjB,IAAA,CAACN,eAAe,EAACqB,OAAO,CAAEP,CAAC,CAAC,8BAA8B,CAAE,uBAAuB,CAAE,CAACQ,IAAI,CAAC,MAAM,CAAE,CAAC,CAE7I,KAAM,CAAAyB,eAAe,CAAGnB,gBAAgB,CAACX,aAAa,CAAEN,QAAQ,CAAC,CAEjE,mBACEH,KAAA,QAAKwC,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAK,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAN,QAAA,eAClGxC,IAAA,OAAAwC,QAAA,CAAKhC,CAAC,CAAC,2BAA2B,CAAE,uBAAuB,CAAC,CAAK,CAAC,cAClEN,KAAA,MAAGwC,KAAK,CAAAK,aAAA,EAAIC,SAAS,CAAE,QAAQ,CAAEC,MAAM,CAAE,MAAM,EAAM5B,WAAW,EAAIV,aAAa,GAAK8B,eAAe,EAAI,CAACO,SAAS,CAAE,QAAQ,CAAC,CAAI,CAAAR,QAAA,EAAC,IAChI,CAACC,eAAe,CAAC,IACpB,EAAG,CAAC,cACJzC,IAAA,aACEkD,KAAK,CAAEzC,IAAK,CACZ0C,QAAQ,CAAGC,CAAC,EAAK1C,OAAO,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACzCI,IAAI,CAAC,IAAI,CACTC,WAAW,CAAE/C,CAAC,CAAC,kCAAkC,CAAE,0BAA0B,CAAE,CAC/EkC,KAAK,CAAE,CAAEc,KAAK,CAAE,KAAK,CAAEb,OAAO,CAAE,MAAM,CAAEc,YAAY,CAAE,MAAM,CAAEb,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAK,CAAEa,QAAQ,CAAE,KAAM,CAAE,CAChI,CAAC,cACF1D,IAAA,CAACN,eAAe,EAACqB,OAAO,CAAEF,QAAQ,CAACE,OAAQ,CAACC,IAAI,CAAEH,QAAQ,CAACG,IAAK,CAAE,CAAC,cACnEhB,IAAA,CAACP,gBAAgB,EACfkE,aAAa,CAAEvB,YAAa,CAC5BwB,eAAe,CAAEpD,CAAC,CAAC,cAAc,CAAE,MAAM,CAAE,CAC3CqD,UAAU,CAAEtB,QAAS,CACrBuB,cAAc,CAAExB,iBAAkB,CAClCyB,MAAM,CAAE,CACNC,SAAS,CAAE,IAAI,CACfzB,QAAQ,CAAE,IAAI,CACd0B,UAAU,CAAE,KAAK,CACjBC,QAAQ,CAAE,IACZ,CAAE,CACH,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/D,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}