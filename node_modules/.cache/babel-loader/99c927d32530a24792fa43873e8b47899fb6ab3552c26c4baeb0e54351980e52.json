{"ast":null,"code":"// Defines API functions related to authentication.\nconst BASE_URL='http://localhost:3001/api';// Matches the one in plan.js\n/**\r\n * Logs in a teacher user with a PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If the network response is not ok or login fails.\r\n */export async function loginTeacher(pin){const res=await fetch(\"\".concat(BASE_URL,\"/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({pin})});const data=await res.json();// Attempt to parse JSON regardless of res.ok for error messages\nif(!res.ok){throw new Error(data.message||\"Login failed. Status: \".concat(res.status));}return data;// Expected: { token, userId, role }\n}/**\r\n * Logs out a user.\r\n * @param {string} token - The authentication token of the user.\r\n * @returns {Promise<object>} A promise that resolves to the logout confirmation.\r\n * @throws {Error} If the network response is not ok.\r\n */export async function logoutUser(token){const res=await fetch(\"\".concat(BASE_URL,\"/auth/logout\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'}});const data=await res.json();if(!res.ok){throw new Error(data.message||\"Logout failed. Status: \".concat(res.status));}return data;}","map":{"version":3,"names":["BASE_URL","loginTeacher","pin","res","fetch","concat","method","headers","body","JSON","stringify","data","json","ok","Error","message","status","logoutUser","token"],"sources":["/workspaces/COSYlanguagesproject/src/api/auth.js"],"sourcesContent":["// Defines API functions related to authentication.\r\n\r\nconst BASE_URL = 'http://localhost:3001/api'; // Matches the one in plan.js\r\n\r\n/**\r\n * Logs in a teacher user with a PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If the network response is not ok or login fails.\r\n */\r\nexport async function loginTeacher(pin) {\r\n    const res = await fetch(`${BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ pin }),\r\n    });\r\n\r\n    const data = await res.json(); // Attempt to parse JSON regardless of res.ok for error messages\r\n\r\n    if (!res.ok) {\r\n        throw new Error(data.message || `Login failed. Status: ${res.status}`);\r\n    }\r\n    return data; // Expected: { token, userId, role }\r\n}\r\n\r\n/**\r\n * Logs out a user.\r\n * @param {string} token - The authentication token of the user.\r\n * @returns {Promise<object>} A promise that resolves to the logout confirmation.\r\n * @throws {Error} If the network response is not ok.\r\n */\r\nexport async function logoutUser(token) {\r\n    const res = await fetch(`${BASE_URL}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) {\r\n        throw new Error(data.message || `Logout failed. Status: ${res.status}`);\r\n    }\r\n    return data;\r\n}\r\n"],"mappings":"AAAA;AAEA,KAAM,CAAAA,QAAQ,CAAG,2BAA2B,CAAE;AAE9C;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAC,YAAYA,CAACC,GAAG,CAAE,CACpC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,gBAAe,CAC9CM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,GAAI,CAAC,CAChC,CAAC,CAAC,CAEF,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAAE;AAE/B,GAAI,CAACT,GAAG,CAACU,EAAE,CAAE,CACT,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,OAAO,2BAAAV,MAAA,CAA6BF,GAAG,CAACa,MAAM,CAAE,CAAC,CAC1E,CACA,MAAO,CAAAL,IAAI,CAAE;AACjB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAM,UAAUA,CAACC,KAAK,CAAE,CACpC,KAAM,CAAAf,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,iBAAgB,CAC/CM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,eAAe,WAAAF,MAAA,CAAYa,KAAK,CAAE,CAClC,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF,KAAM,CAAAP,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAE7B,GAAI,CAACT,GAAG,CAACU,EAAE,CAAE,CACT,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,OAAO,4BAAAV,MAAA,CAA8BF,GAAG,CAACa,MAAM,CAAE,CAAC,CAC3E,CACA,MAAO,CAAAL,IAAI,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}