{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/SubPracticeMenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useI18n } from '../../i18n/I18nContext'; // Import useI18n\n\n// Translation keys for sub-practice options\n// These keys should exist in the translations.js file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUB_PRACTICE_OPTIONS = {\n  vocabulary: [{\n    id: 'random-word',\n    labelKey: 'subPractice.vocabulary.randomWord'\n  }, {\n    id: 'random-image',\n    labelKey: 'subPractice.vocabulary.randomImage'\n  }, {\n    id: 'match-image-word',\n    labelKey: 'subPractice.vocabulary.matchImageWord'\n  }, {\n    id: 'listening',\n    labelKey: 'subPractice.vocabulary.listening'\n  }, {\n    id: 'type-opposite',\n    labelKey: 'subPractice.vocabulary.typeOpposite'\n  }, {\n    id: 'match-opposites',\n    labelKey: 'subPractice.vocabulary.matchOpposites'\n  }, {\n    id: 'build-word',\n    labelKey: 'subPractice.vocabulary.buildWord'\n  }],\n  grammar: [{\n    id: 'gender-articles',\n    labelKey: 'subPractice.grammar.genderArticles'\n  }, {\n    id: 'verbs-conjugation',\n    labelKey: 'subPractice.grammar.verbsConjugation'\n  }, {\n    id: 'possessives',\n    labelKey: 'subPractice.grammar.possessives'\n  }, {\n    id: 'word-order',\n    labelKey: 'subPractice.grammar.wordOrder'\n  }],\n  reading: [{\n    id: 'story',\n    labelKey: 'subPractice.reading.story'\n  }, {\n    id: 'interesting-fact',\n    labelKey: 'subPractice.reading.interestingFact'\n  }],\n  speaking: [{\n    id: 'question-practice',\n    labelKey: 'subPractice.speaking.question'\n  }, {\n    id: 'monologue',\n    labelKey: 'subPractice.speaking.monologue'\n  }],\n  writing: [{\n    id: 'writing-question',\n    labelKey: 'subPractice.writing.question'\n  }, {\n    id: 'storytelling',\n    labelKey: 'subPractice.writing.storytelling'\n  }]\n};\nconst SubPracticeMenu = ({\n  mainCategory,\n  activeSubPractice,\n  onSubPracticeSelect\n}) => {\n  _s();\n  const {\n    t\n  } = useI18n(); // Initialize the t function\n\n  if (!mainCategory || !SUB_PRACTICE_OPTIONS[mainCategory]) {\n    return null;\n  }\n  const options = SUB_PRACTICE_OPTIONS[mainCategory];\n  const mainCategoryTitle = t(`mainCategory.${mainCategory.toLowerCase()}`, mainCategory.charAt(0).toUpperCase() + mainCategory.slice(1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 0',\n      padding: '10px',\n      border: '1px solid #eee',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: '0',\n        textAlign: 'center'\n      },\n      children: [mainCategoryTitle, \" \", t('titles.options', 'Options')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        gap: '10px'\n      },\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSubPracticeSelect(option.id),\n        style: {\n          padding: '8px 12px',\n          fontSize: '0.9rem',\n          cursor: 'pointer',\n          backgroundColor: activeSubPractice === option.id ? '#28a745' : '#f8f9fa',\n          color: activeSubPractice === option.id ? 'white' : 'black',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          minWidth: '150px',\n          // Ensure buttons have a decent width\n          textAlign: 'center'\n        },\n        \"aria-pressed\": activeSubPractice === option.id,\n        children: [t(option.labelKey, option.id.replace(/-/g, ' ')), \" \"]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SubPracticeMenu, \"82N5KF9nLzZ6+2WH7KIjzIXRkLw=\", false, function () {\n  return [useI18n];\n});\n_c = SubPracticeMenu;\nexport default SubPracticeMenu;\nvar _c;\n$RefreshReg$(_c, \"SubPracticeMenu\");","map":{"version":3,"names":["React","useI18n","jsxDEV","_jsxDEV","SUB_PRACTICE_OPTIONS","vocabulary","id","labelKey","grammar","reading","speaking","writing","SubPracticeMenu","mainCategory","activeSubPractice","onSubPracticeSelect","_s","t","options","mainCategoryTitle","toLowerCase","charAt","toUpperCase","slice","style","margin","padding","border","borderRadius","children","marginTop","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","gap","map","option","onClick","fontSize","cursor","backgroundColor","color","minWidth","replace","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/SubPracticeMenu.js"],"sourcesContent":["import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext'; // Import useI18n\r\n\r\n// Translation keys for sub-practice options\r\n// These keys should exist in the translations.js file\r\nconst SUB_PRACTICE_OPTIONS = {\r\n  vocabulary: [\r\n    { id: 'random-word', labelKey: 'subPractice.vocabulary.randomWord' }, \r\n    { id: 'random-image', labelKey: 'subPractice.vocabulary.randomImage' }, \r\n    { id: 'match-image-word', labelKey: 'subPractice.vocabulary.matchImageWord' },\r\n    { id: 'listening', labelKey: 'subPractice.vocabulary.listening' }, \r\n    { id: 'type-opposite', labelKey: 'subPractice.vocabulary.typeOpposite' }, \r\n    { id: 'match-opposites', labelKey: 'subPractice.vocabulary.matchOpposites' },\r\n    { id: 'build-word', labelKey: 'subPractice.vocabulary.buildWord' },\r\n  ],\r\n  grammar: [\r\n    { id: 'gender-articles', labelKey: 'subPractice.grammar.genderArticles' },\r\n    { id: 'verbs-conjugation', labelKey: 'subPractice.grammar.verbsConjugation' },\r\n    { id: 'possessives', labelKey: 'subPractice.grammar.possessives' },\r\n    { id: 'word-order', labelKey: 'subPractice.grammar.wordOrder' },\r\n  ],\r\n  reading: [\r\n    { id: 'story', labelKey: 'subPractice.reading.story' },\r\n    { id: 'interesting-fact', labelKey: 'subPractice.reading.interestingFact' },\r\n  ],\r\n  speaking: [\r\n    { id: 'question-practice', labelKey: 'subPractice.speaking.question' },\r\n    { id: 'monologue', labelKey: 'subPractice.speaking.monologue' },\r\n  ],\r\n  writing: [\r\n    { id: 'writing-question', labelKey: 'subPractice.writing.question' },\r\n    { id: 'storytelling', labelKey: 'subPractice.writing.storytelling' },\r\n  ],\r\n};\r\n\r\nconst SubPracticeMenu = ({ mainCategory, activeSubPractice, onSubPracticeSelect }) => {\r\n  const { t } = useI18n(); // Initialize the t function\r\n\r\n  if (!mainCategory || !SUB_PRACTICE_OPTIONS[mainCategory]) {\r\n    return null;\r\n  }\r\n\r\n  const options = SUB_PRACTICE_OPTIONS[mainCategory];\r\n  const mainCategoryTitle = t(`mainCategory.${mainCategory.toLowerCase()}`, mainCategory.charAt(0).toUpperCase() + mainCategory.slice(1));\r\n\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #eee', borderRadius: '5px' }}>\r\n      <h3 style={{ marginTop: '0', textAlign: 'center' }}>{mainCategoryTitle} {t('titles.options', 'Options')}</h3>\r\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '10px' }}>\r\n        {options.map((option) => (\r\n          <button\r\n            key={option.id}\r\n            onClick={() => onSubPracticeSelect(option.id)}\r\n            style={{\r\n              padding: '8px 12px',\r\n              fontSize: '0.9rem',\r\n              cursor: 'pointer',\r\n              backgroundColor: activeSubPractice === option.id ? '#28a745' : '#f8f9fa',\r\n              color: activeSubPractice === option.id ? 'white' : 'black',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '4px',\r\n              minWidth: '150px', // Ensure buttons have a decent width\r\n              textAlign: 'center',\r\n            }}\r\n            aria-pressed={activeSubPractice === option.id}\r\n          >\r\n            {t(option.labelKey, option.id.replace(/-/g, ' '))} {/* Use t function for labels, with fallback */}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubPracticeMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}