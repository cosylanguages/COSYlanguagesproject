{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/StoryEmojisExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ExerciseControls from '../../ExerciseControls';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { shuffleArray } from '../../../../utils/arrayUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storyEmojiPool = ['😀', '😂', '😊', '😍', '🤔', '😲', '😱', '🔥', '🎉', '🎈', '⭐', '❤️', '💔', '👍', '👎', '🙌', '🙏', '💀', '👻', '👽', '🤖', '👑', '💎', '💰', '📚', '✏️', '🌍', '🌙', '☀️', '🌳', '🍎', '🍌', '🍕', '🚗', '✈️', '🏠', '⏰', '🔑', '🎁', '✉️'];\nconst StoryEmojisExercise = ({\n  onNext\n}) => {\n  _s();\n  const {\n    t\n  } = useI18n();\n  const [text, setText] = useState('');\n  const [currentEmojis, setCurrentEmojis] = useState([]);\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const selectNewEmojis = useCallback(() => {\n    setCurrentEmojis(shuffleArray(storyEmojiPool).slice(0, 5));\n    setText('');\n    setFeedback({\n      message: '',\n      type: ''\n    });\n  }, []);\n  useEffect(() => {\n    selectNewEmojis();\n  }, [selectNewEmojis]);\n  const handleSubmit = () => {\n    if (text.trim().length < 10) {\n      setFeedback({\n        message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'),\n        type: 'warning'\n      });\n    } else {\n      setFeedback({\n        message: t('feedback.storySubmitted', 'Great! Story submitted.'),\n        type: 'success'\n      });\n    }\n  };\n  const handleNextRequest = () => {\n    selectNewEmojis(); // Get new emojis for this specific exercise type\n    if (onNext) onNext(); // Also inform parent if it wants to switch story type\n  };\n  const showHint = () => {\n    setFeedback({\n      message: t('feedback.hintEmojiStory', \"Hint: Try to incorporate all emojis into your narrative in a creative way!\"),\n      type: 'hint'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: t('titles.emojiStory', \"Emoji Story\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('exercises.emojiStoryPrompt', \"Write a short story based on these emojis:\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '2.5em',\n        margin: '20px 0',\n        textAlign: 'center'\n      },\n      children: currentEmojis.join(' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      rows: \"10\",\n      placeholder: t('placeholders.typeYourStoryHere', 'Type your story here...'),\n      style: {\n        width: '95%',\n        padding: '10px',\n        marginBottom: '15px',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        fontSize: '1em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onCheckAnswer: handleSubmit,\n      checkButtonText: t('buttons.done', 'Done'),\n      onShowHint: showHint,\n      onNextExercise: handleNextRequest,\n      config: {\n        showCheck: true,\n        showHint: true,\n        showReveal: false,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryEmojisExercise, \"V1TWZ3vyqv/x+OPcTEqAxpCHaWc=\", false, function () {\n  return [useI18n];\n});\n_c = StoryEmojisExercise;\nexport default StoryEmojisExercise;\nvar _c;\n$RefreshReg$(_c, \"StoryEmojisExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ExerciseControls","FeedbackDisplay","useI18n","shuffleArray","jsxDEV","_jsxDEV","storyEmojiPool","StoryEmojisExercise","onNext","_s","t","text","setText","currentEmojis","setCurrentEmojis","feedback","setFeedback","message","type","selectNewEmojis","slice","handleSubmit","trim","length","handleNextRequest","showHint","style","padding","border","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","margin","join","value","onChange","e","target","rows","placeholder","width","marginBottom","onCheckAnswer","checkButtonText","onShowHint","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/writing/StoryEmojisExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\n\r\nconst storyEmojiPool = [\r\n    '😀', '😂', '😊', '😍', '🤔', '😲', '😱', '🔥', '🎉', '🎈', \r\n    '⭐', '❤️', '💔', '👍', '👎', '🙌', '🙏', '💀', '👻', '👽', \r\n    '🤖', '👑', '💎', '💰', '📚', '✏️', '🌍', '🌙', '☀️', '🌳', \r\n    '🍎', '🍌', '🍕', '🚗', '✈️', '🏠', '⏰', '🔑', '🎁', '✉️'\r\n];\r\n\r\nconst StoryEmojisExercise = ({ onNext }) => {\r\n  const { t } = useI18n();\r\n  const [text, setText] = useState('');\r\n  const [currentEmojis, setCurrentEmojis] = useState([]);\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n\r\n  const selectNewEmojis = useCallback(() => {\r\n    setCurrentEmojis(shuffleArray(storyEmojiPool).slice(0, 5));\r\n    setText('');\r\n    setFeedback({ message: '', type: ''});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectNewEmojis();\r\n  }, [selectNewEmojis]);\r\n\r\n  const handleSubmit = () => {\r\n    if (text.trim().length < 10) {\r\n      setFeedback({ message: t('feedback.pleaseWriteMore', 'Please write a bit more for your story.'), type: 'warning' });\r\n    } else {\r\n      setFeedback({ message: t('feedback.storySubmitted', 'Great! Story submitted.'), type: 'success' });\r\n    }\r\n  };\r\n  \r\n  const handleNextRequest = () => {\r\n      selectNewEmojis(); // Get new emojis for this specific exercise type\r\n      if(onNext) onNext(); // Also inform parent if it wants to switch story type\r\n  }\r\n  \r\n  const showHint = () => {\r\n      setFeedback({ message: t('feedback.hintEmojiStory', \"Hint: Try to incorporate all emojis into your narrative in a creative way!\"), type: 'hint' });\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', textAlign: 'center' }}>\r\n      <h4>{t('titles.emojiStory', \"Emoji Story\")}</h4>\r\n      <p>{t('exercises.emojiStoryPrompt', \"Write a short story based on these emojis:\")}</p>\r\n      <div style={{ fontSize: '2.5em', margin: '20px 0', textAlign: 'center' }}>\r\n        {currentEmojis.join(' ')}\r\n      </div>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        rows=\"10\"\r\n        placeholder={t('placeholders.typeYourStoryHere', 'Type your story here...')}\r\n        style={{ width: '95%', padding: '10px', marginBottom: '15px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em' }}\r\n      />\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} />\r\n      <ExerciseControls\r\n        onCheckAnswer={handleSubmit}\r\n        checkButtonText={t('buttons.done', 'Done')}\r\n        onShowHint={showHint}\r\n        onNextExercise={handleNextRequest}\r\n        config={{\r\n          showCheck: true,\r\n          showHint: true,\r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryEmojisExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}