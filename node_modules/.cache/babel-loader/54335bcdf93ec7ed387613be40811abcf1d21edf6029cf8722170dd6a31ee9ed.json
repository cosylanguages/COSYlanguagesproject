{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/reading/StoryReadingExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadReadingData } from '../../../../utils/exerciseDataService';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StoryReadingExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [currentStory, setCurrentStory] = useState(null); // { title: string, paragraphs: string[] }\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const {\n    t\n  } = useI18n();\n  const fetchNewStory = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setCurrentStory(null);\n    try {\n      const {\n        data: stories,\n        error: fetchError\n      } = await loadReadingData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load reading data.');\n      }\n      if (stories && stories.length > 0) {\n        const randomIndex = Math.floor(Math.random() * stories.length);\n        setCurrentStory(stories[randomIndex]);\n      } else {\n        setError(t('exercises.noStories', 'No stories found for the selected criteria.'));\n      }\n    } catch (err) {\n      console.error(\"StoryReadingExercise - Error fetching story:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchNewStory();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n    }\n  }, [fetchNewStory, exerciseKey, language, days, t]);\n\n  // For reading exercises, \"Hint\", \"Check Answer\", \"Reveal Answer\" might not be directly applicable\n  // or would require more complex logic (e.g., comprehension questions, vocabulary popups).\n  // For this migration, we'll focus on displaying the story and providing a \"Next\" button.\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: t('loading.readingExercise', 'Loading story...')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: error,\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  if (!currentStory && !isLoading) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: t('exercises.noStoryToDisplay', 'No story to display. Try different selections.'),\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 43\n  }, this);\n  const storyTitle = currentStory ? getLatinizedText(currentStory.title, language) : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [currentStory && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px',\n          ...(isLatinized && currentStory.title !== storyTitle && {\n            fontStyle: 'italic'\n          })\n        },\n        children: storyTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          lineHeight: '1.8',\n          fontSize: '1.1rem'\n        },\n        children: currentStory.paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '1rem',\n            ...(isLatinized && paragraph !== getLatinizedText(paragraph, language) && {\n              fontStyle: 'italic'\n            })\n          },\n          children: getLatinizedText(paragraph, language)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onNextExercise: fetchNewStory,\n      config: {\n        showCheck: false,\n        showHint: false,\n        showReveal: false,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryReadingExercise, \"hFDzweEyks62P66RIAiJzxrpZwI=\", false, function () {\n  return [useLatinizationContext, useI18n];\n});\n_c = StoryReadingExercise;\nexport default StoryReadingExercise;\nvar _c;\n$RefreshReg$(_c, \"StoryReadingExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadReadingData","useLatinizationContext","useLatinization","FeedbackDisplay","ExerciseControls","useI18n","jsxDEV","_jsxDEV","Fragment","_Fragment","StoryReadingExercise","language","days","exerciseKey","_s","currentStory","setCurrentStory","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","t","fetchNewStory","data","stories","fetchError","Error","message","length","randomIndex","Math","floor","random","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","storyTitle","title","style","padding","border","borderRadius","maxWidth","margin","textAlign","marginBottom","fontStyle","lineHeight","fontSize","paragraphs","map","paragraph","index","onNextExercise","config","showCheck","showHint","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/reading/StoryReadingExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadReadingData } from '../../../../utils/exerciseDataService';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst StoryReadingExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentStory, setCurrentStory] = useState(null); // { title: string, paragraphs: string[] }\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t } = useI18n();\r\n\r\n  const fetchNewStory = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCurrentStory(null);\r\n\r\n    try {\r\n      const { data: stories, error: fetchError } = await loadReadingData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load reading data.');\r\n      }\r\n\r\n      if (stories && stories.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * stories.length);\r\n        setCurrentStory(stories[randomIndex]);\r\n      } else {\r\n        setError(t('exercises.noStories', 'No stories found for the selected criteria.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"StoryReadingExercise - Error fetching story:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchNewStory();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewStory, exerciseKey, language, days, t]);\r\n\r\n  // For reading exercises, \"Hint\", \"Check Answer\", \"Reveal Answer\" might not be directly applicable\r\n  // or would require more complex logic (e.g., comprehension questions, vocabulary popups).\r\n  // For this migration, we'll focus on displaying the story and providing a \"Next\" button.\r\n\r\n  if (isLoading) return <p>{t('loading.readingExercise', 'Loading story...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!currentStory && !isLoading) return <FeedbackDisplay message={t('exercises.noStoryToDisplay', 'No story to display. Try different selections.')} type=\"info\" />;\r\n  \r\n  const storyTitle = currentStory ? getLatinizedText(currentStory.title, language) : \"\";\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '800px', margin: '0 auto' }}>\r\n      {currentStory && (\r\n        <>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '20px', ...(isLatinized && currentStory.title !== storyTitle && {fontStyle: 'italic'}) }}>\r\n            {storyTitle}\r\n          </h3>\r\n          <div style={{ textAlign: 'left', lineHeight: '1.8', fontSize: '1.1rem' }}>\r\n            {currentStory.paragraphs.map((paragraph, index) => (\r\n              <p key={index} style={{ marginBottom: '1rem', ...(isLatinized && paragraph !== getLatinizedText(paragraph, language) && {fontStyle: 'italic'}) }}>\r\n                {getLatinizedText(paragraph, language)}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <ExerciseControls\r\n        onNextExercise={fetchNewStory}\r\n        config={{\r\n          showCheck: false,\r\n          showHint: false, \r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryReadingExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}