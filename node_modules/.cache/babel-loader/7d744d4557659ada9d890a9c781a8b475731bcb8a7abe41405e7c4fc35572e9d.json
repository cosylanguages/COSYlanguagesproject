{"ast":null,"code":"// Defines API functions related to authentication (STATIC VERSION).\n\nconst STATIC_TEACHER_PIN = \"0000\"; // A simple PIN for static mode\n\n/**\r\n * Logs in a teacher user with a PIN by checking against a static PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If login fails (e.g., incorrect PIN).\r\n */\nexport async function loginTeacher(pin) {\n  console.log('Attempting static login with PIN:', pin);\n  return new Promise((resolve, reject) => {\n    // Simulate async operation\n    setTimeout(() => {\n      if (pin === STATIC_TEACHER_PIN) {\n        console.log('Static login successful.');\n        resolve({\n          token: 'static-mock-token',\n          // Dummy token\n          userId: 'static-teacher-01',\n          role: 'teacher',\n          username: 'Mock Teacher'\n        });\n      } else {\n        console.warn('Static login failed: Incorrect PIN.');\n        reject(new Error('Incorrect PIN. Please try again.'));\n      }\n    }, 500); // Simulate network delay\n  });\n}\n\n/**\r\n * Logs out a user (client-side only in static version).\r\n * @param {string} token - The authentication token (unused in static version).\r\n * @returns {Promise<object>} A promise that resolves to a logout confirmation.\r\n */\nexport async function logoutUser(token) {\n  // In a static version, logout is primarily a client-side state clearing operation.\n  // No server call is made. Token is unused.\n  console.log('Static logout. Token (unused):', token);\n  return Promise.resolve({\n    message: 'Logged out successfully (static).'\n  });\n}","map":{"version":3,"names":["STATIC_TEACHER_PIN","loginTeacher","pin","console","log","Promise","resolve","reject","setTimeout","token","userId","role","username","warn","Error","logoutUser","message"],"sources":["/workspaces/COSYlanguagesproject/src/api/auth.js"],"sourcesContent":["// Defines API functions related to authentication (STATIC VERSION).\r\n\r\nconst STATIC_TEACHER_PIN = \"0000\"; // A simple PIN for static mode\r\n\r\n/**\r\n * Logs in a teacher user with a PIN by checking against a static PIN.\r\n * @param {string} pin - The teacher's PIN.\r\n * @returns {Promise<object>} A promise that resolves to the auth data (token, userId, role).\r\n * @throws {Error} If login fails (e.g., incorrect PIN).\r\n */\r\nexport async function loginTeacher(pin) {\r\n    console.log('Attempting static login with PIN:', pin);\r\n    return new Promise((resolve, reject) => {\r\n        // Simulate async operation\r\n        setTimeout(() => {\r\n            if (pin === STATIC_TEACHER_PIN) {\r\n                console.log('Static login successful.');\r\n                resolve({\r\n                    token: 'static-mock-token', // Dummy token\r\n                    userId: 'static-teacher-01',\r\n                    role: 'teacher',\r\n                    username: 'Mock Teacher'\r\n                });\r\n            } else {\r\n                console.warn('Static login failed: Incorrect PIN.');\r\n                reject(new Error('Incorrect PIN. Please try again.'));\r\n            }\r\n        }, 500); // Simulate network delay\r\n    });\r\n}\r\n\r\n/**\r\n * Logs out a user (client-side only in static version).\r\n * @param {string} token - The authentication token (unused in static version).\r\n * @returns {Promise<object>} A promise that resolves to a logout confirmation.\r\n */\r\nexport async function logoutUser(token) {\r\n    // In a static version, logout is primarily a client-side state clearing operation.\r\n    // No server call is made. Token is unused.\r\n    console.log('Static logout. Token (unused):', token);\r\n    return Promise.resolve({ message: 'Logged out successfully (static).' });\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,kBAAkB,GAAG,MAAM,CAAC,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,YAAYA,CAACC,GAAG,EAAE;EACpCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,GAAG,CAAC;EACrD,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC;IACAC,UAAU,CAAC,MAAM;MACb,IAAIN,GAAG,KAAKF,kBAAkB,EAAE;QAC5BG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCE,OAAO,CAAC;UACJG,KAAK,EAAE,mBAAmB;UAAE;UAC5BC,MAAM,EAAE,mBAAmB;UAC3BC,IAAI,EAAE,SAAS;UACfC,QAAQ,EAAE;QACd,CAAC,CAAC;MACN,CAAC,MAAM;QACHT,OAAO,CAACU,IAAI,CAAC,qCAAqC,CAAC;QACnDN,MAAM,CAAC,IAAIO,KAAK,CAAC,kCAAkC,CAAC,CAAC;MACzD;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,UAAUA,CAACN,KAAK,EAAE;EACpC;EACA;EACAN,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEK,KAAK,CAAC;EACpD,OAAOJ,OAAO,CAACC,OAAO,CAAC;IAAEU,OAAO,EAAE;EAAoC,CAAC,CAAC;AAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}