{"ast":null,"code":"// frontend/src/utils/transliteration.js\n// Function to latinize Russian text\nfunction latinizeRussian(text){const russianToLatinMap={'А':'A','а':'a','Б':'B','б':'b','В':'V','в':'v','Г':'G','г':'g','Д':'D','д':'d','Е':'E','е':'e','Ё':'YO','ё':'yo','Ж':'ZH','ж':'zh','З':'Z','з':'z','И':'I','и':'i','Й':'Y','й':'y','К':'K','к':'k','Л':'L','л':'l','М':'M','м':'m','Н':'N','н':'n','О':'O','о':'o','П':'P','п':'p','Р':'R','р':'r','С':'S','с':'s','Т':'T','т':'t','У':'U','у':'u','Ф':'F','ф':'f','Х':'KH','х':'kh','Ц':'TS','ц':'ts','Ч':'CH','ч':'ch','Ш':'SH','ш':'sh','Щ':'SHCH','щ':'shch','Ъ':'','ъ':'',// Hard sign often omitted or handled by context in some systems\n'Ы':'Y','ы':'y','Ь':'','ь':'',// Soft sign often omitted or handled by context\n'Э':'E','э':'e','Ю':'YU','ю':'yu','Я':'YA','я':'ya'};let latinizedText='';for(let i=0;i<text.length;i++){const char=text[i];latinizedText+=russianToLatinMap[char]||char;}return latinizedText;}// Function to latinize Armenian text\nfunction latinizeArmenian(text){const simplerArmenianMap={'Ա':'A','Բ':'B','Գ':'G','Դ':'D','Ե':'YE','Զ':'Z','Է':'E','Ը':'E','Թ':'T\\'','Ժ':'ZH','Ի':'I','Լ':'L','Խ':'KH','Ծ':'TS','Կ':'K','Հ':'H','Ձ':'DZ','Ղ':'GH','Ճ':'CH','Մ':'M','Յ':'Y','Ն':'N','Շ':'SH','Ո':'VO','Չ':'CH\\'','Պ':'P','Ջ':'J','Ռ':'R','Ս':'S','Վ':'V','Տ':'T','Ր':'R','Ց':'TS\\'','Ւ':'V','Փ':'P\\'','Ք':'K\\'','Օ':'O','Ֆ':'F','ա':'a','բ':'b','գ':'g','դ':'d','ե':'ye','զ':'z','է':'e','ը':'e','թ':'t\\'','ժ':'zh','ի':'i','լ':'l','խ':'kh','ծ':'ts','կ':'k','հ':'h','ձ':'dz','ղ':'gh','ճ':'ch','մ':'m','յ':'y','ն':'n','շ':'sh','ո':'vo','չ':'ch\\'','պ':'p','ջ':'j','ռ':'r','ս':'s','վ':'v','տ':'t','ր':'r','ց':'ts\\'','ւ':'v','փ':'p\\'','ք':'k\\'','օ':'o','ֆ':'f','և':'ev'};let latinizedText='';for(let i=0;i<text.length;i++){const char=text[i];latinizedText+=simplerArmenianMap[char]||char;}return latinizedText;}// Function to latinize Greek text\nfunction latinizeGreek(text){const greekToLatinMap={// Uppercase\n'Α':'A','Β':'V','Γ':'G','Δ':'D','Ε':'E','Ζ':'Z','Η':'I','Θ':'TH','Ι':'I','Κ':'K','Λ':'L','Μ':'M','Ν':'N','Ξ':'X','Ο':'O','Π':'P','Ρ':'R','Σ':'S','Τ':'T','Υ':'Y','Φ':'F','Χ':'CH','Ψ':'PS','Ω':'O',// Lowercase\n'α':'a','β':'v','γ':'g','δ':'d','ε':'e','ζ':'z','η':'i','θ':'th','ι':'i','κ':'k','λ':'l','μ':'m','ν':'n','ξ':'x','ο':'o','π':'p','ρ':'r','σ':'s','ς':'s','τ':'t','υ':'y','φ':'f','χ':'ch','ψ':'ps','ω':'o',// Accented Uppercase\n'Ά':'A','Έ':'E','Ή':'I','Ί':'I','Ό':'O','Ύ':'Y','Ώ':'O',// Accented Lowercase\n'ά':'a','έ':'e','ή':'i','ί':'i','ό':'o','ύ':'y','ώ':'o',// Lowercase with diaeresis\n'ϊ':'i','ϋ':'y',// Accented with diaeresis\n'ΐ':'i','ΰ':'y',// Digraphs\n'αι':'ai','ει':'ei','οι':'oi','ου':'ou','γγ':'ng','γκ':'gk','γχ':'nch','τσ':'ts','μπ':'b','ντ':'d',// Uppercase Digraphs\n'ΑΙ':'AI','ΕΙ':'EI','ΟΙ':'OI','ΟΥ':'OU','ΓΓ':'NG','ΓΚ':'GK','ΓΧ':'NCH','ΤΣ':'TS','ΜΠ':'B','ΝΤ':'D',// Accented Digraphs\n'άι':'ai','έι':'ei','όι':'oi','ού':'ou'};let latinizedText=\"\";let i=0;while(i<text.length){let foundDigraph=false;// Check for 2-character digraphs\nif(i+1<text.length){const digraph=text.substring(i,i+2);if(greekToLatinMap.hasOwnProperty(digraph)){latinizedText+=greekToLatinMap[digraph];i+=2;foundDigraph=true;}}if(!foundDigraph){const char=text[i];if(greekToLatinMap.hasOwnProperty(char)){latinizedText+=greekToLatinMap[char];}else{latinizedText+=char;// Append original character if not in map\n}i+=1;}}return latinizedText;}// Add other specific latinization functions here if needed (e.g., Tatar, Bashkir)\n// For now, they will fall through in getLatinization\n/**\r\n * Main latinization dispatcher function.\r\n * @param {string} text - The text to latinize.\r\n * @param {string} languageIdentifier - The COSYlanguages internal code (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The latinized text or original text if no specific latinizer is found.\r\n */export function getLatinization(text,languageIdentifier){if(!text||typeof text.trim!=='function'||text.trim()===''){return text;}const normalizedIdentifier=(languageIdentifier||'').toLowerCase();if(normalizedIdentifier.includes('русский')||normalizedIdentifier.includes('russian')||languageIdentifier==='ТАКОЙрусский'){return latinizeRussian(text);}else if(normalizedIdentifier.includes('ελληνικά')||normalizedIdentifier.includes('greek')||languageIdentifier==='ΚΟΖΥελληνικά'){return latinizeGreek(text);}else if(normalizedIdentifier.includes('հայկական')||normalizedIdentifier.includes('armenian')||languageIdentifier==='ԾՈՍՅհայկական'){return latinizeArmenian(text);}// Add more language conditions here:\n// else if (languageIdentifier === 'COSYtatarça') { return latinizeTatar(text); }\n// else if (languageIdentifier === 'COSYbashkort') { return latinizeBashkir(text); }\nreturn text;// Return original text if no specific latinizer matches\n}","map":{"version":3,"names":["latinizeRussian","text","russianToLatinMap","latinizedText","i","length","char","latinizeArmenian","simplerArmenianMap","latinizeGreek","greekToLatinMap","foundDigraph","digraph","substring","hasOwnProperty","getLatinization","languageIdentifier","trim","normalizedIdentifier","toLowerCase","includes"],"sources":["/workspaces/COSYlanguagesproject/src/utils/transliteration.js"],"sourcesContent":["// frontend/src/utils/transliteration.js\r\n\r\n// Function to latinize Russian text\r\nfunction latinizeRussian(text) {\r\n  const russianToLatinMap = {\r\n    'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V', 'в': 'v',\r\n    'Г': 'G', 'г': 'g', 'Д': 'D', 'д': 'd', 'Е': 'E', 'е': 'e',\r\n    'Ё': 'YO', 'ё': 'yo', 'Ж': 'ZH', 'ж': 'zh', 'З': 'Z', 'з': 'z',\r\n    'И': 'I', 'и': 'i', 'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k',\r\n    'Л': 'L', 'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n',\r\n    'О': 'O', 'о': 'o', 'П': 'P', 'п': 'p', 'Р': 'R', 'р': 'r',\r\n    'С': 'S', 'с': 's', 'Т': 'T', 'т': 't', 'У': 'U', 'у': 'u',\r\n    'Ф': 'F', 'ф': 'f', 'Х': 'KH', 'х': 'kh', 'Ц': 'TS', 'ц': 'ts',\r\n    'Ч': 'CH', 'ч': 'ch', 'Ш': 'SH', 'ш': 'sh', 'Щ': 'SHCH', 'щ': 'shch',\r\n    'Ъ': '', 'ъ': '', // Hard sign often omitted or handled by context in some systems\r\n    'Ы': 'Y', 'ы': 'y',\r\n    'Ь': '', 'ь': '', // Soft sign often omitted or handled by context\r\n    'Э': 'E', 'э': 'e', 'Ю': 'YU', 'ю': 'yu', 'Я': 'YA', 'я': 'ya'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += russianToLatinMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Armenian text\r\nfunction latinizeArmenian(text) {\r\n  const simplerArmenianMap = {\r\n    'Ա': 'A', 'Բ': 'B', 'Գ': 'G', 'Դ': 'D', 'Ե': 'YE', 'Զ': 'Z', 'Է': 'E', 'Ը': 'E',\r\n    'Թ': 'T\\'', 'Ժ': 'ZH', 'Ի': 'I', 'Լ': 'L', 'Խ': 'KH', 'Ծ': 'TS', 'Կ': 'K', 'Հ': 'H',\r\n    'Ձ': 'DZ', 'Ղ': 'GH', 'Ճ': 'CH', 'Մ': 'M', 'Յ': 'Y', 'Ն': 'N', 'Շ': 'SH', 'Ո': 'VO',\r\n    'Չ': 'CH\\'', 'Պ': 'P', 'Ջ': 'J', 'Ռ': 'R', 'Ս': 'S', 'Վ': 'V', 'Տ': 'T', 'Ր': 'R',\r\n    'Ց': 'TS\\'', 'Ւ': 'V', 'Փ': 'P\\'', 'Ք': 'K\\'', 'Օ': 'O', 'Ֆ': 'F',\r\n    'ա': 'a', 'բ': 'b', 'գ': 'g', 'դ': 'd', 'ե': 'ye', 'զ': 'z', 'է': 'e', 'ը': 'e',\r\n    'թ': 't\\'', 'ժ': 'zh', 'ի': 'i', 'լ': 'l', 'խ': 'kh', 'ծ': 'ts', 'կ': 'k', 'հ': 'h',\r\n    'ձ': 'dz', 'ղ': 'gh', 'ճ': 'ch', 'մ': 'm', 'յ': 'y', 'ն': 'n', 'շ': 'sh', 'ո': 'vo',\r\n    'չ': 'ch\\'', 'պ': 'p', 'ջ': 'j', 'ռ': 'r', 'ս': 's', 'վ': 'v', 'տ': 't', 'ր': 'r',\r\n    'ց': 'ts\\'', 'ւ': 'v', 'փ': 'p\\'', 'ք': 'k\\'', 'օ': 'o', 'ֆ': 'f',\r\n    'և': 'ev'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += simplerArmenianMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Greek text\r\nfunction latinizeGreek(text) {\r\n  const greekToLatinMap = {\r\n    // Uppercase\r\n    'Α': 'A', 'Β': 'V', 'Γ': 'G', 'Δ': 'D', 'Ε': 'E', 'Ζ': 'Z', 'Η': 'I', 'Θ': 'TH',\r\n    'Ι': 'I', 'Κ': 'K', 'Λ': 'L', 'Μ': 'M', 'Ν': 'N', 'Ξ': 'X', 'Ο': 'O', 'Π': 'P',\r\n    'Ρ': 'R', 'Σ': 'S', 'Τ': 'T', 'Υ': 'Y', 'Φ': 'F', 'Χ': 'CH', 'Ψ': 'PS', 'Ω': 'O',\r\n    // Lowercase\r\n    'α': 'a', 'β': 'v', 'γ': 'g', 'δ': 'd', 'ε': 'e', 'ζ': 'z', 'η': 'i', 'θ': 'th',\r\n    'ι': 'i', 'κ': 'k', 'λ': 'l', 'μ': 'm', 'ν': 'n', 'ξ': 'x', 'ο': 'o', 'π': 'p',\r\n    'ρ': 'r', 'σ': 's', 'ς': 's', 'τ': 't', 'υ': 'y', 'φ': 'f', 'χ': 'ch', 'ψ': 'ps', 'ω': 'o',\r\n    // Accented Uppercase\r\n    'Ά': 'A', 'Έ': 'E', 'Ή': 'I', 'Ί': 'I', 'Ό': 'O', 'Ύ': 'Y', 'Ώ': 'O',\r\n    // Accented Lowercase\r\n    'ά': 'a', 'έ': 'e', 'ή': 'i', 'ί': 'i', 'ό': 'o', 'ύ': 'y', 'ώ': 'o',\r\n    // Lowercase with diaeresis\r\n    'ϊ': 'i', 'ϋ': 'y',\r\n    // Accented with diaeresis\r\n    'ΐ': 'i', 'ΰ': 'y',\r\n    // Digraphs\r\n    'αι': 'ai', 'ει': 'ei', 'οι': 'oi', 'ου': 'ou', 'γγ': 'ng', 'γκ': 'gk', 'γχ': 'nch', 'τσ': 'ts',\r\n    'μπ': 'b', 'ντ': 'd',\r\n    // Uppercase Digraphs\r\n    'ΑΙ': 'AI', 'ΕΙ': 'EI', 'ΟΙ': 'OI', 'ΟΥ': 'OU', 'ΓΓ': 'NG', 'ΓΚ': 'GK', 'ΓΧ': 'NCH', 'ΤΣ': 'TS',\r\n    'ΜΠ': 'B', 'ΝΤ': 'D',\r\n    // Accented Digraphs\r\n    'άι': 'ai', 'έι': 'ei', 'όι': 'oi', 'ού': 'ou'\r\n  };\r\n\r\n  let latinizedText = \"\";\r\n  let i = 0;\r\n  while (i < text.length) {\r\n    let foundDigraph = false;\r\n    // Check for 2-character digraphs\r\n    if (i + 1 < text.length) {\r\n      const digraph = text.substring(i, i + 2);\r\n      if (greekToLatinMap.hasOwnProperty(digraph)) {\r\n        latinizedText += greekToLatinMap[digraph];\r\n        i += 2;\r\n        foundDigraph = true;\r\n      }\r\n    }\r\n    \r\n    if (!foundDigraph) {\r\n      const char = text[i];\r\n      if (greekToLatinMap.hasOwnProperty(char)) {\r\n        latinizedText += greekToLatinMap[char];\r\n      } else {\r\n        latinizedText += char; // Append original character if not in map\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Add other specific latinization functions here if needed (e.g., Tatar, Bashkir)\r\n// For now, they will fall through in getLatinization\r\n\r\n/**\r\n * Main latinization dispatcher function.\r\n * @param {string} text - The text to latinize.\r\n * @param {string} languageIdentifier - The COSYlanguages internal code (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The latinized text or original text if no specific latinizer is found.\r\n */\r\nexport function getLatinization(text, languageIdentifier) {\r\n  if (!text || typeof text.trim !== 'function' || text.trim() === '') {\r\n    return text;\r\n  }\r\n\r\n  const normalizedIdentifier = (languageIdentifier || '').toLowerCase();\r\n\r\n  if (normalizedIdentifier.includes('русский') || normalizedIdentifier.includes('russian') || languageIdentifier === 'ТАКОЙрусский') {\r\n    return latinizeRussian(text);\r\n  } else if (normalizedIdentifier.includes('ελληνικά') || normalizedIdentifier.includes('greek') || languageIdentifier === 'ΚΟΖΥελληνικά') {\r\n    return latinizeGreek(text);\r\n  } else if (normalizedIdentifier.includes('հայկական') || normalizedIdentifier.includes('armenian') || languageIdentifier === 'ԾՈՍՅհայկական') {\r\n    return latinizeArmenian(text);\r\n  }\r\n  // Add more language conditions here:\r\n  // else if (languageIdentifier === 'COSYtatarça') { return latinizeTatar(text); }\r\n  // else if (languageIdentifier === 'COSYbashkort') { return latinizeBashkir(text); }\r\n  \r\n  return text; // Return original text if no specific latinizer matches\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}