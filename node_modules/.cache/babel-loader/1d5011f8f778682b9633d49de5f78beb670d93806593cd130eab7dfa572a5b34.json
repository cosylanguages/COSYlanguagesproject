{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/TypeOppositeExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadOppositesData } from '../../../../utils/exerciseDataService';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { pronounceText } from '../../../../utils/speechUtils';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useProgress } from '../../../../contexts/ProgressContext';\nimport { normalizeString } from '../../../../utils/stringUtils';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeOppositeExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [currentWord, setCurrentWord] = useState('');\n  const [correctOpposite, setCorrectOpposite] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [isAnsweredCorrectly, setIsAnsweredCorrectly] = useState(false); // To manage post-correct state\n\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const progress = useProgress();\n  const {\n    t\n  } = useI18n();\n  const displayCurrentWord = getLatinizedText(currentWord, language);\n  const displayCorrectOpposite = getLatinizedText(correctOpposite, language);\n  const fetchNewOppositePair = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setFeedback({\n      message: '',\n      type: ''\n    });\n    setUserInput('');\n    setIsRevealed(false);\n    setCurrentWord('');\n    setCorrectOpposite('');\n    setIsAnsweredCorrectly(false); // Reset for new pair\n\n    try {\n      const {\n        data: oppositesMap,\n        error: oppositesError\n      } = await loadOppositesData(language, days);\n      if (oppositesError) {\n        throw new Error(oppositesError.message || oppositesError.error || 'Failed to load opposites data.');\n      }\n      if (!oppositesMap || Object.keys(oppositesMap).length === 0) {\n        setError(t('exercises.noOppositesData', 'No opposites data found for the selected criteria.'));\n        setIsLoading(false);\n        return;\n      }\n      const wordsWithOpposites = Object.keys(oppositesMap);\n      if (wordsWithOpposites.length === 0) {\n        setError(t('exercises.noWordsWithOpposites', 'No words with opposites found in the data.'));\n        setIsLoading(false);\n        return;\n      }\n      const randomWord = wordsWithOpposites[Math.floor(Math.random() * wordsWithOpposites.length)];\n      setCurrentWord(randomWord);\n      setCorrectOpposite(oppositesMap[randomWord]);\n    } catch (err) {\n      console.error(\"TypeOppositeExercise - Error fetching data:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      fetchNewOppositePair();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n    }\n  }, [fetchNewOppositePair, exerciseKey, language, days, t]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n    if (feedback.message) setFeedback({\n      message: '',\n      type: ''\n    });\n  };\n  const checkAnswer = () => {\n    if (!correctOpposite || isRevealed || !currentWord || isAnsweredCorrectly) return;\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\n    const isCorrect = normalizeString(userInput) === normalizeString(correctOpposite);\n    if (isCorrect) {\n      setFeedback({\n        message: t('feedback.correct', 'Correct!'),\n        type: 'correct'\n      });\n      progress.awardCorrectAnswer(itemId, 'vocab-type-opposite', language);\n      setIsAnsweredCorrectly(true); // Mark as correctly answered\n      // Auto-progress after a short delay\n      setTimeout(() => {\n        fetchNewOppositePair();\n      }, 1500); // 1.5-second delay\n    } else {\n      setFeedback({\n        message: t('feedback.incorrectOpposite', `Incorrect. The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, {\n          word: displayCurrentWord,\n          opposite: displayCorrectOpposite\n        }),\n        type: 'incorrect'\n      });\n      progress.awardIncorrectAnswer(itemId, 'vocab-type-opposite', language);\n    }\n  };\n  const showHint = () => {\n    if (!correctOpposite || isRevealed || isAnsweredCorrectly) return;\n    const hintLetter = getLatinizedText(correctOpposite[0], language);\n    setFeedback({\n      message: t('feedback.hintStartsWith', `Hint: The opposite starts with '${hintLetter}'.`, {\n        letter: hintLetter\n      }),\n      type: 'hint'\n    });\n  };\n  const revealAnswer = () => {\n    if (!correctOpposite || !currentWord || isAnsweredCorrectly) return;\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\n    setUserInput(correctOpposite);\n    setFeedback({\n      message: t('feedback.revealedOpposite', `The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, {\n        word: displayCurrentWord,\n        opposite: displayCorrectOpposite\n      }),\n      type: 'info'\n    });\n    setIsRevealed(true);\n    progress.scheduleReview(itemId, 'vocab-type-opposite', language, false); // Ensure language is passed\n    // Auto-progress after showing revealed answer\n    setTimeout(() => {\n      fetchNewOppositePair();\n    }, 2000); // Slightly longer delay for revealed answers\n  };\n  const handleNext = () => {\n    // Manual next button action\n    fetchNewOppositePair();\n  };\n  const handlePronounceWord = wordToPronounce => {\n    if (wordToPronounce && language) {\n      pronounceText(wordToPronounce, language).catch(err => {\n        console.error(\"Pronunciation error:\", err);\n        setFeedback({\n          message: t('errors.pronunciationError', 'Could not pronounce the word.'),\n          type: 'error'\n        });\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: t('loading.oppositesExercise', 'Loading opposites exercise...')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: error,\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentWord || !correctOpposite) {\n    return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: t('exercises.noOppositesPair', 'No opposites pair available. Try different selections.'),\n      type: \"info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t('titles.whatIsTheOpposite', 'What is the opposite of:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '2rem',\n          padding: '10px',\n          ...(isLatinized && currentWord !== displayCurrentWord && {\n            fontStyle: 'italic'\n          })\n        },\n        children: displayCurrentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePronounceWord(currentWord),\n        disabled: !currentWord,\n        title: t('tooltips.pronounceWord', `Pronounce word`),\n        style: {\n          background: 'none',\n          border: 'none',\n          fontSize: '1.5rem',\n          cursor: 'pointer',\n          marginLeft: '5px'\n        },\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: handleInputChange,\n      placeholder: t('placeholders.typeTheOpposite', \"Type the opposite...\"),\n      disabled: isRevealed || isAnsweredCorrectly // Disable input after correct answer or reveal\n      ,\n      style: {\n        padding: '10px',\n        fontSize: '1rem',\n        width: '250px',\n        marginBottom: '10px',\n        border: '1px solid #ccc',\n        borderRadius: '4px'\n      },\n      onKeyPress: event => {\n        if (event.key === 'Enter' && !isRevealed && !isAnsweredCorrectly) {\n          checkAnswer();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onCheckAnswer: !isRevealed && !isAnsweredCorrectly && currentWord ? checkAnswer : undefined,\n      onShowHint: !isRevealed && !isAnsweredCorrectly && currentWord ? showHint : undefined,\n      onRevealAnswer: !isRevealed && !isAnsweredCorrectly && currentWord ? revealAnswer : undefined,\n      onNextExercise: handleNext // Manual next still available\n      ,\n      config: {\n        showCheck: !isRevealed && !isAnsweredCorrectly && !!currentWord,\n        showHint: !isRevealed && !isAnsweredCorrectly && !!currentWord,\n        showReveal: !isRevealed && !isAnsweredCorrectly && !!currentWord,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TypeOppositeExercise, \"pbnKK2EBpgDCjPWaEcU8svp7l1Q=\", false, function () {\n  return [useLatinizationContext, useProgress, useI18n];\n});\n_c = TypeOppositeExercise;\nexport default TypeOppositeExercise;\nvar _c;\n$RefreshReg$(_c, \"TypeOppositeExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadOppositesData","useLatinizationContext","useLatinization","pronounceText","FeedbackDisplay","ExerciseControls","useProgress","normalizeString","useI18n","jsxDEV","_jsxDEV","TypeOppositeExercise","language","days","exerciseKey","_s","currentWord","setCurrentWord","correctOpposite","setCorrectOpposite","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","isAnsweredCorrectly","setIsAnsweredCorrectly","isLatinized","getLatinizedText","progress","t","displayCurrentWord","displayCorrectOpposite","fetchNewOppositePair","data","oppositesMap","oppositesError","Error","Object","keys","length","wordsWithOpposites","randomWord","Math","floor","random","err","console","handleInputChange","e","target","value","checkAnswer","itemId","isCorrect","awardCorrectAnswer","setTimeout","word","opposite","awardIncorrectAnswer","showHint","hintLetter","letter","revealAnswer","scheduleReview","handleNext","handlePronounceWord","wordToPronounce","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","padding","border","borderRadius","display","justifyContent","alignItems","margin","fontSize","fontStyle","onClick","disabled","title","background","cursor","marginLeft","onChange","placeholder","width","marginBottom","onKeyPress","event","key","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/vocabulary/TypeOppositeExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadOppositesData } from '../../../../utils/exerciseDataService'; \r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { pronounceText } from '../../../../utils/speechUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useProgress } from '../../../../contexts/ProgressContext';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\n\r\nconst TypeOppositeExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentWord, setCurrentWord] = useState('');\r\n  const [correctOpposite, setCorrectOpposite] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [isAnsweredCorrectly, setIsAnsweredCorrectly] = useState(false); // To manage post-correct state\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const progress = useProgress();\r\n  const { t } = useI18n();\r\n\r\n  const displayCurrentWord = getLatinizedText(currentWord, language);\r\n  const displayCorrectOpposite = getLatinizedText(correctOpposite, language);\r\n\r\n  const fetchNewOppositePair = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setUserInput('');\r\n    setIsRevealed(false);\r\n    setCurrentWord('');\r\n    setCorrectOpposite('');\r\n    setIsAnsweredCorrectly(false); // Reset for new pair\r\n\r\n    try {\r\n      const { data: oppositesMap, error: oppositesError } = await loadOppositesData(language, days);\r\n      if (oppositesError) {\r\n        throw new Error(oppositesError.message || oppositesError.error || 'Failed to load opposites data.');\r\n      }\r\n\r\n      if (!oppositesMap || Object.keys(oppositesMap).length === 0) {\r\n        setError(t('exercises.noOppositesData', 'No opposites data found for the selected criteria.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const wordsWithOpposites = Object.keys(oppositesMap);\r\n      if (wordsWithOpposites.length === 0) {\r\n        setError(t('exercises.noWordsWithOpposites', 'No words with opposites found in the data.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const randomWord = wordsWithOpposites[Math.floor(Math.random() * wordsWithOpposites.length)];\r\n      setCurrentWord(randomWord);\r\n      setCorrectOpposite(oppositesMap[randomWord]);\r\n\r\n    } catch (err) {\r\n      console.error(\"TypeOppositeExercise - Error fetching data:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchNewOppositePair();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewOppositePair, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!correctOpposite || isRevealed || !currentWord || isAnsweredCorrectly) return;\r\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\r\n    const isCorrect = normalizeString(userInput) === normalizeString(correctOpposite);\r\n\r\n    if (isCorrect) {\r\n      setFeedback({ message: t('feedback.correct', 'Correct!'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'vocab-type-opposite', language);\r\n      setIsAnsweredCorrectly(true); // Mark as correctly answered\r\n      // Auto-progress after a short delay\r\n      setTimeout(() => {\r\n        fetchNewOppositePair();\r\n      }, 1500); // 1.5-second delay\r\n    } else {\r\n      setFeedback({ message: t('feedback.incorrectOpposite', `Incorrect. The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, { word: displayCurrentWord, opposite: displayCorrectOpposite }), type: 'incorrect' });\r\n      progress.awardIncorrectAnswer(itemId, 'vocab-type-opposite', language);\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!correctOpposite || isRevealed || isAnsweredCorrectly) return;\r\n    const hintLetter = getLatinizedText(correctOpposite[0], language);\r\n    setFeedback({ message: t('feedback.hintStartsWith', `Hint: The opposite starts with '${hintLetter}'.`, { letter: hintLetter }), type: 'hint' });\r\n  };\r\n\r\n  const revealAnswer = () => {\r\n    if (!correctOpposite || !currentWord || isAnsweredCorrectly) return;\r\n    const itemId = `typeopposite_${normalizeString(currentWord)}_${normalizeString(correctOpposite)}`;\r\n    setUserInput(correctOpposite);\r\n    setFeedback({ message: t('feedback.revealedOpposite', `The opposite of \"${displayCurrentWord}\" is \"${displayCorrectOpposite}\".`, { word: displayCurrentWord, opposite: displayCorrectOpposite }), type: 'info' });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'vocab-type-opposite', language, false); // Ensure language is passed\r\n     // Auto-progress after showing revealed answer\r\n    setTimeout(() => {\r\n        fetchNewOppositePair();\r\n    }, 2000); // Slightly longer delay for revealed answers\r\n  };\r\n\r\n  const handleNext = () => { // Manual next button action\r\n    fetchNewOppositePair();\r\n  };\r\n\r\n  const handlePronounceWord = (wordToPronounce) => {\r\n    if (wordToPronounce && language) {\r\n      pronounceText(wordToPronounce, language).catch(err => {\r\n          console.error(\"Pronunciation error:\", err);\r\n          setFeedback({message: t('errors.pronunciationError', 'Could not pronounce the word.'), type: 'error'});\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>{t('loading.oppositesExercise', 'Loading opposites exercise...')}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <FeedbackDisplay message={error} type=\"error\" />;\r\n  }\r\n\r\n  if (!currentWord || !correctOpposite) {\r\n    return <FeedbackDisplay message={t('exercises.noOppositesPair', 'No opposites pair available. Try different selections.')} type=\"info\"/>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}>\r\n      <h3>{t('titles.whatIsTheOpposite', 'What is the opposite of:')}</h3>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '20px 0' }}>\r\n        <div style={{ fontSize: '2rem', padding: '10px', ...(isLatinized && currentWord !== displayCurrentWord && {fontStyle: 'italic'}) }}>\r\n          {displayCurrentWord}\r\n        </div>\r\n        <button onClick={() => handlePronounceWord(currentWord)} disabled={!currentWord} title={t('tooltips.pronounceWord', `Pronounce word`)} style={{background:'none', border:'none', fontSize:'1.5rem', cursor:'pointer', marginLeft:'5px'}}>🔊</button>\r\n      </div>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        value={userInput}\r\n        onChange={handleInputChange}\r\n        placeholder={t('placeholders.typeTheOpposite', \"Type the opposite...\")}\r\n        disabled={isRevealed || isAnsweredCorrectly} // Disable input after correct answer or reveal\r\n        style={{ padding: '10px', fontSize: '1rem', width: '250px', marginBottom: '10px', border: '1px solid #ccc', borderRadius: '4px' }}\r\n        onKeyPress={(event) => {\r\n            if (event.key === 'Enter' && !isRevealed && !isAnsweredCorrectly) {\r\n              checkAnswer();\r\n            }\r\n        }}\r\n      />\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      \r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed && !isAnsweredCorrectly && currentWord ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed && !isAnsweredCorrectly && currentWord ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && !isAnsweredCorrectly && currentWord ? revealAnswer : undefined}\r\n        onNextExercise={handleNext} // Manual next still available\r\n        config={{ \r\n            showCheck: !isRevealed && !isAnsweredCorrectly && !!currentWord, \r\n            showHint: !isRevealed && !isAnsweredCorrectly && !!currentWord, \r\n            showReveal: !isRevealed && !isAnsweredCorrectly && !!currentWord,\r\n            showNext: true, \r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeOppositeExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}