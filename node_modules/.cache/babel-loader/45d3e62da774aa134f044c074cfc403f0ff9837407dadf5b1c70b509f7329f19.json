{"ast":null,"code":"import React from'react';// These would ideally come from a config or be derived from available exercise types\nimport{jsx as _jsx}from\"react/jsx-runtime\";const PRACTICE_CATEGORIES=[{id:'vocabulary',label:'🔠 Vocabulary'},{id:'grammar',label:'🧩 Grammar'},{id:'reading',label:'📚 Reading'},{id:'speaking',label:'🗣️ Speaking'},{id:'writing',label:'✍️ Writing'}// { id: 'practice-all', label: '🔄 Practice All' }, // Consider how to handle this\n];const PracticeCategoryNav=_ref=>{let{activeCategory,onCategorySelect}=_ref;return/*#__PURE__*/_jsx(\"div\",{style:{margin:'20px 0',display:'flex',justifyContent:'center',flexWrap:'wrap',gap:'10px'},children:PRACTICE_CATEGORIES.map(category=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>onCategorySelect(category.id),style:{padding:'10px 15px',fontSize:'1rem',cursor:'pointer',backgroundColor:activeCategory===category.id?'#007bff':'#f0f0f0',color:activeCategory===category.id?'white':'black',border:'1px solid #ccc',borderRadius:'5px'},\"aria-pressed\":activeCategory===category.id,children:category.label},category.id))});};export default PracticeCategoryNav;","map":{"version":3,"names":["React","jsx","_jsx","PRACTICE_CATEGORIES","id","label","PracticeCategoryNav","_ref","activeCategory","onCategorySelect","style","margin","display","justifyContent","flexWrap","gap","children","map","category","onClick","padding","fontSize","cursor","backgroundColor","color","border","borderRadius"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/PracticeCategoryNav.js"],"sourcesContent":["import React from 'react';\r\n\r\n// These would ideally come from a config or be derived from available exercise types\r\nconst PRACTICE_CATEGORIES = [\r\n  { id: 'vocabulary', label: '🔠 Vocabulary' },\r\n  { id: 'grammar', label: '🧩 Grammar' },\r\n  { id: 'reading', label: '📚 Reading' },\r\n  { id: 'speaking', label: '🗣️ Speaking' },\r\n  { id: 'writing', label: '✍️ Writing' },\r\n  // { id: 'practice-all', label: '🔄 Practice All' }, // Consider how to handle this\r\n];\r\n\r\nconst PracticeCategoryNav = ({ activeCategory, onCategorySelect }) => {\r\n  return (\r\n    <div style={{ margin: '20px 0', display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '10px' }}>\r\n      {PRACTICE_CATEGORIES.map((category) => (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => onCategorySelect(category.id)}\r\n          style={{\r\n            padding: '10px 15px',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            backgroundColor: activeCategory === category.id ? '#007bff' : '#f0f0f0',\r\n            color: activeCategory === category.id ? 'white' : 'black',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '5px',\r\n          }}\r\n          aria-pressed={activeCategory === category.id}\r\n        >\r\n          {category.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticeCategoryNav;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,mBAAmB,CAAG,CAC1B,CAAEC,EAAE,CAAE,YAAY,CAAEC,KAAK,CAAE,eAAgB,CAAC,CAC5C,CAAED,EAAE,CAAE,SAAS,CAAEC,KAAK,CAAE,YAAa,CAAC,CACtC,CAAED,EAAE,CAAE,SAAS,CAAEC,KAAK,CAAE,YAAa,CAAC,CACtC,CAAED,EAAE,CAAE,UAAU,CAAEC,KAAK,CAAE,cAAe,CAAC,CACzC,CAAED,EAAE,CAAE,SAAS,CAAEC,KAAK,CAAE,YAAa,CACrC;AAAA,CACD,CAED,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,cAAc,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CAC/D,mBACEL,IAAA,QAAKQ,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAQ,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,MAAO,CAAE,CAAAC,QAAA,CACxGb,mBAAmB,CAACc,GAAG,CAAEC,QAAQ,eAChChB,IAAA,WAEEiB,OAAO,CAAEA,CAAA,GAAMV,gBAAgB,CAACS,QAAQ,CAACd,EAAE,CAAE,CAC7CM,KAAK,CAAE,CACLU,OAAO,CAAE,WAAW,CACpBC,QAAQ,CAAE,MAAM,CAChBC,MAAM,CAAE,SAAS,CACjBC,eAAe,CAAEf,cAAc,GAAKU,QAAQ,CAACd,EAAE,CAAG,SAAS,CAAG,SAAS,CACvEoB,KAAK,CAAEhB,cAAc,GAAKU,QAAQ,CAACd,EAAE,CAAG,OAAO,CAAG,OAAO,CACzDqB,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,KAChB,CAAE,CACF,eAAclB,cAAc,GAAKU,QAAQ,CAACd,EAAG,CAAAY,QAAA,CAE5CE,QAAQ,CAACb,KAAK,EAbVa,QAAQ,CAACd,EAcR,CACT,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAE,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}