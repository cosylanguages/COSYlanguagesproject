{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{loadVerbGrammarData,loadVocabularyData}from'../../../../utils/exerciseDataService';import{processVerbData,generateGrammarExerciseSentence,setGrammarGeneratorTranslations}from'../../../../utils/grammarSentenceGenerator';import{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{normalizeString}from'../../../../utils/stringUtils';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{pronounceText}from'../../../../utils/speechUtils';import{useI18n}from'../../../../i18n/I18nContext';import{useProgress}from'../../../../contexts/ProgressContext';// Import useProgress\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FillGapsExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[exerciseData,setExerciseData]=useState(null);const[userInput,setUserInput]=useState('');const[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[isRevealed,setIsRevealed]=useState(false);const{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const{t,allTranslations}=useI18n();const progress=useProgress();useEffect(()=>{if(allTranslations){setGrammarGeneratorTranslations(allTranslations);}},[allTranslations]);const setupNewExercise=useCallback(async()=>{setIsLoading(true);setError(null);setFeedback({message:'',type:''});setUserInput('');setIsRevealed(false);setExerciseData(null);try{const{data:rawVerbItems,error:verbError}=await loadVerbGrammarData(language,days);if(verbError){throw new Error(verbError.message||verbError.error||'Failed to load verb grammar data.');}const{data:vocabItems,error:vocabError}=await loadVocabularyData(language,days);if(vocabError){console.warn(\"FillGapsExercise: Failed to load vocabulary data. Sentence objects might be generic.\");}if(rawVerbItems&&rawVerbItems.length>0){const processedVerbItems=processVerbData(rawVerbItems,language);if(!processedVerbItems||processedVerbItems.length===0){setError(t('errors.noProcessableVerbData','No processable verb items found.'));setIsLoading(false);return;}const sentenceDetails=await generateGrammarExerciseSentence(language,days,processedVerbItems,vocabItems||[]);if(sentenceDetails&&sentenceDetails.questionPrompt&&sentenceDetails.answer){setExerciseData(sentenceDetails);}else{setError(t('errors.couldNotGenerateSentence','Could not generate a fill-gaps exercise sentence.'));}}else{setError(t('errors.noVerbData','No verb grammar data found for the selected criteria.'));}}catch(err){console.error(\"FillGapsExercise - Error setting up:\",err);setError(err.message||t('errors.unexpectedError','An unexpected error occurred.'));}finally{setIsLoading(false);}},[language,days,t]);useEffect(()=>{if(language&&days&&days.length>0){setupNewExercise();}else{setIsLoading(false);setError(t('errors.selectLangDay',\"Please select a language and day(s).\"));}},[setupNewExercise,exerciseKey,language,days,t]);const handleInputChange=e=>{setUserInput(e.target.value);if(feedback.message)setFeedback({message:'',type:''});};const checkAnswer=()=>{if(!exerciseData||isRevealed)return;const correctAnswer=exerciseData.answer;const latinizedCorrect=getLatinizedText(correctAnswer,language);const displayCorrect=isLatinized?latinizedCorrect:correctAnswer;let possibleAnswers=correctAnswer.split('/').map(ans=>normalizeString(ans.trim()));const itemId=\"fillgaps_\".concat(normalizeString(exerciseData.correctSentence),\"_\").concat(normalizeString(correctAnswer));if(possibleAnswers.includes(normalizeString(userInput))){setFeedback({message:t('feedback.correct','Correct!'),type:'correct'});progress.awardCorrectAnswer(itemId,'grammar-fillgaps');}else{setFeedback({message:t('feedback.incorrectFillGaps',\"Incorrect. The correct answer is: \".concat(displayCorrect,\". Full sentence: \").concat(getLatinizedText(exerciseData.correctSentence,language)),{correctAnswer:displayCorrect,correctSentence:getLatinizedText(exerciseData.correctSentence,language)}),type:'incorrect'});progress.awardIncorrectAnswer(itemId,'grammar-fillgaps');}};const showHint=()=>{if(!exerciseData||isRevealed)return;const answerForHint=exerciseData.answer.split('/')[0].trim();let hintLetter='';if(answerForHint&&answerForHint.length>0){hintLetter=answerForHint[0];}setFeedback({message:t('feedback.hintFillGaps',\"Hint: The answer starts with '\".concat(getLatinizedText(hintLetter,language),\"'.\"),{letter:getLatinizedText(hintLetter,language)}),type:'hint'});};const revealTheAnswer=()=>{if(!exerciseData)return;const correctAnswer=exerciseData.answer.split('/')[0].trim();const latinizedCorrect=getLatinizedText(correctAnswer,language);const displayCorrect=isLatinized?latinizedCorrect:correctAnswer;const itemId=\"fillgaps_\".concat(normalizeString(exerciseData.correctSentence),\"_\").concat(normalizeString(exerciseData.answer));setUserInput(correctAnswer);setFeedback({message:t('feedback.revealedFillGaps',\"The correct answer is: \".concat(displayCorrect,\". Full sentence: \").concat(getLatinizedText(exerciseData.correctSentence,language)),{correctAnswer:displayCorrect,correctSentence:getLatinizedText(exerciseData.correctSentence,language)}),type:'info'});setIsRevealed(true);progress.scheduleReview(itemId,'grammar-fillgaps',false);};const handlePronounceSentence=()=>{if(exerciseData&&exerciseData.correctSentence&&language){pronounceText(exerciseData.correctSentence,language).catch(err=>{console.error(\"Pronunciation error:\",err);setFeedback({message:t('errors.pronunciationError',\"Could not pronounce the sentence.\"),type:\"error\"});});}};if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:t('loading.fillGapsExercise','Loading fill the gaps exercise...')});if(error)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});if(!exerciseData&&!isLoading)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noData',\"No exercise data available. Try different selections.\"),type:\"info\"});const questionParts=exerciseData.questionPrompt.split('___');const questionDisplay=/*#__PURE__*/_jsxs(\"span\",{style:{lineHeight:'2'},children:[getLatinizedText(questionParts[0],language),questionParts.length>1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:handleInputChange,placeholder:t('placeholders.typeHere',\"type here\"),disabled:isRevealed,style:{margin:'0 5px',padding:'5px',fontSize:'inherit',width:'120px',border:'1px solid #ccc',borderRadius:'4px',textAlign:'center'}}),getLatinizedText(questionParts[1],language)]})]});return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'20px',border:'1px solid #eee',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:t('titles.fillTheGap','Fill in the Gap')}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',margin:'20px 0',fontSize:'1.3rem',flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(\"div\",{children:questionDisplay}),exerciseData.correctSentence&&/*#__PURE__*/_jsx(\"button\",{onClick:handlePronounceSentence,title:t('tooltips.pronounceSentence',\"Pronounce sentence\"),style:{background:'none',border:'none',fontSize:'1.5rem',cursor:'pointer',marginLeft:'10px'},children:\"\\uD83D\\uDD0A\"})]}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type,language:language}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:!isRevealed?checkAnswer:undefined,onShowHint:!isRevealed?showHint:undefined,onRevealAnswer:!isRevealed?revealTheAnswer:undefined,onNextExercise:setupNewExercise,config:{showCheck:!isRevealed,showHint:!isRevealed,showReveal:!isRevealed,showNext:true}})]});};export default FillGapsExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadVerbGrammarData","loadVocabularyData","processVerbData","generateGrammarExerciseSentence","setGrammarGeneratorTranslations","useLatinizationContext","useLatinization","normalizeString","FeedbackDisplay","ExerciseControls","pronounceText","useI18n","useProgress","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FillGapsExercise","_ref","language","days","exerciseKey","exerciseData","setExerciseData","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","isLatinized","getLatinizedText","t","allTranslations","progress","setupNewExercise","data","rawVerbItems","verbError","Error","vocabItems","vocabError","console","warn","length","processedVerbItems","sentenceDetails","questionPrompt","answer","err","handleInputChange","e","target","value","checkAnswer","correctAnswer","latinizedCorrect","displayCorrect","possibleAnswers","split","map","ans","trim","itemId","concat","correctSentence","includes","awardCorrectAnswer","awardIncorrectAnswer","showHint","answerForHint","hintLetter","letter","revealTheAnswer","scheduleReview","handlePronounceSentence","catch","children","questionParts","questionDisplay","style","lineHeight","onChange","placeholder","disabled","margin","padding","fontSize","width","border","borderRadius","textAlign","display","justifyContent","alignItems","flexWrap","onClick","title","background","cursor","marginLeft","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/FillGapsExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadVerbGrammarData, loadVocabularyData } from '../../../../utils/exerciseDataService';\r\nimport { processVerbData, generateGrammarExerciseSentence, setGrammarGeneratorTranslations } from '../../../../utils/grammarSentenceGenerator'; \r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { pronounceText } from '../../../../utils/speechUtils';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { useProgress } from '../../../../contexts/ProgressContext'; // Import useProgress\r\n\r\nconst FillGapsExercise = ({ language, days, exerciseKey }) => {\r\n  const [exerciseData, setExerciseData] = useState(null); \r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t, allTranslations } = useI18n();\r\n  const progress = useProgress();\r\n\r\n  useEffect(() => {\r\n    if (allTranslations) {\r\n      setGrammarGeneratorTranslations(allTranslations);\r\n    }\r\n  }, [allTranslations]);\r\n\r\n  const setupNewExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setUserInput('');\r\n    setIsRevealed(false);\r\n    setExerciseData(null);\r\n\r\n    try {\r\n      const { data: rawVerbItems, error: verbError } = await loadVerbGrammarData(language, days);\r\n      if (verbError) {\r\n        throw new Error(verbError.message || verbError.error || 'Failed to load verb grammar data.');\r\n      }\r\n\r\n      const { data: vocabItems, error: vocabError } = await loadVocabularyData(language, days);\r\n      if (vocabError) {\r\n        console.warn(\"FillGapsExercise: Failed to load vocabulary data. Sentence objects might be generic.\");\r\n      }\r\n      \r\n      if (rawVerbItems && rawVerbItems.length > 0) {\r\n        const processedVerbItems = processVerbData(rawVerbItems, language);\r\n        if (!processedVerbItems || processedVerbItems.length === 0) {\r\n            setError(t('errors.noProcessableVerbData', 'No processable verb items found.'));\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        const sentenceDetails = await generateGrammarExerciseSentence(language, days, processedVerbItems, vocabItems || []);\r\n        \r\n        if (sentenceDetails && sentenceDetails.questionPrompt && sentenceDetails.answer) {\r\n          setExerciseData(sentenceDetails);\r\n        } else {\r\n          setError(t('errors.couldNotGenerateSentence', 'Could not generate a fill-gaps exercise sentence.'));\r\n        }\r\n      } else {\r\n        setError(t('errors.noVerbData', 'No verb grammar data found for the selected criteria.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"FillGapsExercise - Error setting up:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      setupNewExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [setupNewExercise, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!exerciseData || isRevealed) return;\r\n    \r\n    const correctAnswer = exerciseData.answer;\r\n    const latinizedCorrect = getLatinizedText(correctAnswer, language);\r\n    const displayCorrect = isLatinized ? latinizedCorrect : correctAnswer;\r\n    let possibleAnswers = correctAnswer.split('/').map(ans => normalizeString(ans.trim()));\r\n    const itemId = `fillgaps_${normalizeString(exerciseData.correctSentence)}_${normalizeString(correctAnswer)}`;\r\n\r\n    if (possibleAnswers.includes(normalizeString(userInput))) {\r\n      setFeedback({ message: t('feedback.correct', 'Correct!'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'grammar-fillgaps');\r\n    } else {\r\n      setFeedback({ \r\n        message: t('feedback.incorrectFillGaps', `Incorrect. The correct answer is: ${displayCorrect}. Full sentence: ${getLatinizedText(exerciseData.correctSentence, language)}`, { correctAnswer: displayCorrect, correctSentence: getLatinizedText(exerciseData.correctSentence, language) }), \r\n        type: 'incorrect' \r\n      });\r\n      progress.awardIncorrectAnswer(itemId, 'grammar-fillgaps');\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!exerciseData || isRevealed) return;\r\n    const answerForHint = exerciseData.answer.split('/')[0].trim();\r\n    let hintLetter = '';\r\n    if (answerForHint && answerForHint.length > 0) {\r\n      hintLetter = answerForHint[0];\r\n    }\r\n    setFeedback({ message: t('feedback.hintFillGaps', `Hint: The answer starts with '${getLatinizedText(hintLetter, language)}'.`, { letter: getLatinizedText(hintLetter, language) }), type: 'hint' });\r\n  };\r\n\r\n  const revealTheAnswer = () => {\r\n    if (!exerciseData) return;\r\n    const correctAnswer = exerciseData.answer.split('/')[0].trim();\r\n    const latinizedCorrect = getLatinizedText(correctAnswer, language);\r\n    const displayCorrect = isLatinized ? latinizedCorrect : correctAnswer;\r\n    const itemId = `fillgaps_${normalizeString(exerciseData.correctSentence)}_${normalizeString(exerciseData.answer)}`;\r\n\r\n    setUserInput(correctAnswer); \r\n    setFeedback({ \r\n      message: t('feedback.revealedFillGaps', `The correct answer is: ${displayCorrect}. Full sentence: ${getLatinizedText(exerciseData.correctSentence, language)}`, { correctAnswer: displayCorrect, correctSentence: getLatinizedText(exerciseData.correctSentence, language) }),\r\n      type: 'info' \r\n    });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'grammar-fillgaps', false);\r\n  };\r\n  \r\n  const handlePronounceSentence = () => {\r\n    if (exerciseData && exerciseData.correctSentence && language) {\r\n        pronounceText(exerciseData.correctSentence, language).catch(err => {\r\n            console.error(\"Pronunciation error:\", err);\r\n            setFeedback({message: t('errors.pronunciationError', \"Could not pronounce the sentence.\"), type: \"error\"});\r\n        });\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <p>{t('loading.fillGapsExercise', 'Loading fill the gaps exercise...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!exerciseData && !isLoading) return <FeedbackDisplay message={t('exercises.noData', \"No exercise data available. Try different selections.\")} type=\"info\" />;\r\n\r\n  const questionParts = exerciseData.questionPrompt.split('___');\r\n  const questionDisplay = (\r\n    <span style={{lineHeight: '2'}}> \r\n      {getLatinizedText(questionParts[0], language)}\r\n      {questionParts.length > 1 && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput}\r\n            onChange={handleInputChange}\r\n            placeholder={t('placeholders.typeHere', \"type here\")}\r\n            disabled={isRevealed}\r\n            style={{ margin: '0 5px', padding: '5px', fontSize: 'inherit', width: '120px', border: '1px solid #ccc', borderRadius: '4px', textAlign: 'center' }}\r\n          />\r\n          {getLatinizedText(questionParts[1], language)}\r\n        </>\r\n      )}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}>\r\n      <h3>{t('titles.fillTheGap', 'Fill in the Gap')}</h3>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '20px 0', fontSize: '1.3rem', flexWrap: 'wrap' }}>\r\n        <div>{questionDisplay}</div>\r\n        {exerciseData.correctSentence && (\r\n            <button \r\n                onClick={handlePronounceSentence} \r\n                title={t('tooltips.pronounceSentence',`Pronounce sentence`)}\r\n                style={{background:'none', border:'none', fontSize:'1.5rem', cursor:'pointer', marginLeft:'10px'}}\r\n            >\r\n            🔊\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      \r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed ? revealTheAnswer : undefined}\r\n        onNextExercise={setupNewExercise}\r\n        config={{ \r\n            showCheck: !isRevealed, \r\n            showHint: !isRevealed, \r\n            showReveal: !isRevealed,\r\n            showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FillGapsExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}