{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{loadPossessivesData}from'../../../../utils/exerciseDataService';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import{normalizeString}from'../../../../utils/stringUtils';import{useProgress}from'../../../../contexts/ProgressContext';import{useI18n}from'../../../../i18n/I18nContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PossessivesExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[currentExercise,setCurrentExercise]=useState(null);const[userInput,setUserInput]=useState('');const[feedback,setFeedback]=useState({message:'',type:''});const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[isRevealed,setIsRevealed]=useState(false);const[exerciseData,setExerciseData]=useState([]);const{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization();const progress=useProgress();const{t}=useI18n();const pickNewExercise=useCallback(data=>{if(data&&data.length>0){const randomIndex=Math.floor(Math.random()*data.length);setCurrentExercise(data[randomIndex]);setUserInput('');setFeedback({message:'',type:''});setIsRevealed(false);setError(null);}else{setError(t('exercises.noPossessivesFound','No possessives exercises found for the selected criteria.'));setCurrentExercise(null);}setIsLoading(false);},[t]);const fetchAndSetNewExercise=useCallback(async()=>{setIsLoading(true);setError(null);try{const{data,error:fetchError}=await loadPossessivesData(language,days);if(fetchError){throw new Error(fetchError.message||fetchError.error||t('errors.failedLoadPossessives'));}// Data for possessives is expected to be an array of items for the given day(s)\n// loadPossessivesData already handles filtering by day.\nsetExerciseData(data||[]);pickNewExercise(data||[]);}catch(err){console.error(\"PossessivesExercise - Error fetching exercises:\",err);setError(err.message||t('errors.unexpectedError'));setIsLoading(false);setCurrentExercise(null);}},[language,days,pickNewExercise,t]);useEffect(()=>{if(language&&days&&days.length>0){fetchAndSetNewExercise();}else{setIsLoading(false);setError(t('errors.selectLangDay'));setCurrentExercise(null);}},[fetchAndSetNewExercise,exerciseKey,language,days,t]);const handleInputChange=e=>{setUserInput(e.target.value);if(feedback.message)setFeedback({message:'',type:''});};const checkAnswer=()=>{if(!currentExercise||isRevealed)return;const correctAnswer=currentExercise.answer;const normalizedUserInput=normalizeString(userInput);const normalizedCorrectAnswer=normalizeString(correctAnswer);const displayAnswer=isLatinized?getLatinizedText(correctAnswer,language):correctAnswer;const itemId=\"possessive_\".concat(normalizeString(currentExercise.sentence.split(\" \")[0]),\"_\").concat(normalizeString(correctAnswer));if(normalizedUserInput===normalizedCorrectAnswer){setFeedback({message:t('feedback.correct'),type:'correct'});progress.awardCorrectAnswer(itemId,'grammar-possessive');}else{setFeedback({message:t('feedback.incorrectAnswerIs',{correctAnswer:displayAnswer}),type:'incorrect'});progress.awardIncorrectAnswer(itemId,'grammar-possessive');}};const showHint=()=>{if(!currentExercise||isRevealed)return;// Basic hint: show the first letter of the answer\nconst firstLetter=currentExercise.answer[0];const latinizedFirstLetter=getLatinizedText(firstLetter,language);setFeedback({message:t('feedback.hintFirstLetterIs',{letter:latinizedFirstLetter}),type:'hint'});};const revealTheAnswer=()=>{if(!currentExercise)return;const correctAnswer=currentExercise.answer;const displayAnswer=isLatinized?getLatinizedText(correctAnswer,language):correctAnswer;const itemId=\"possessive_\".concat(normalizeString(currentExercise.sentence.split(\" \")[0]),\"_\").concat(normalizeString(correctAnswer));setUserInput(correctAnswer);// Show the full answer in the input\nsetFeedback({message:t('feedback.correctAnswerIs',{correctAnswer:displayAnswer}),type:'info'});setIsRevealed(true);progress.scheduleReview(itemId,'grammar-possessive',false);};const handleNext=()=>{setIsLoading(true);pickNewExercise(exerciseData);};if(isLoading){return/*#__PURE__*/_jsx(\"p\",{children:t('loading.possessivesExercise','Loading possessives exercise...')});}if(error){return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});}if(!currentExercise){return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noPossessivesLoaded','No possessive exercise loaded. Try different selections or check data.'),type:\"info\"});}// Display logic for \"fill_blank\" type\nlet sentenceParts=[];let placeholder=\"____\";// Default placeholder\nif(currentExercise.sentence.includes('____')){sentenceParts=currentExercise.sentence.split('____');}else if(currentExercise.sentence.includes('_')){// Allow single underscore as placeholder\nsentenceParts=currentExercise.sentence.split('_');placeholder=\"_\";}else{sentenceParts=[currentExercise.sentence,\"\"];// No placeholder found, input after sentence\n}return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'20px',border:'1px solid #eee',borderRadius:'8px',maxWidth:'600px',margin:'auto'},children:[/*#__PURE__*/_jsx(\"h3\",{children:t('titles.fillThePossessive','Fill in the Correct Possessive')}),/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'1.1rem',margin:'15px 0'},children:[getLatinizedText(sentenceParts[0],language),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:handleInputChange,placeholder:placeholder,disabled:isRevealed||isLoading,style:{padding:'8px',fontSize:'1rem',width:\"\".concat(Math.max(currentExercise.answer.length*10,60),\"px\"),// Dynamic width\nminWidth:'60px',maxWidth:'150px',margin:'0 5px',border:'1px solid #ccc',borderRadius:'4px',textAlign:'center'}}),getLatinizedText(sentenceParts[1]||'',language)]}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:feedback.message,type:feedback.type,language:language}),/*#__PURE__*/_jsx(ExerciseControls,{onCheckAnswer:!isRevealed&&!!currentExercise?checkAnswer:undefined,onShowHint:!isRevealed&&!!currentExercise?showHint:undefined,onRevealAnswer:!isRevealed&&!!currentExercise?revealTheAnswer:undefined,onNextExercise:handleNext,config:{showCheck:!isRevealed&&!!currentExercise,showHint:!isRevealed&&!!currentExercise,showReveal:!isRevealed&&!!currentExercise,showNext:true}})]});};export default PossessivesExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadPossessivesData","FeedbackDisplay","ExerciseControls","useLatinizationContext","useLatinization","normalizeString","useProgress","useI18n","jsx","_jsx","jsxs","_jsxs","PossessivesExercise","_ref","language","days","exerciseKey","currentExercise","setCurrentExercise","userInput","setUserInput","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","isRevealed","setIsRevealed","exerciseData","setExerciseData","isLatinized","getLatinizedText","progress","t","pickNewExercise","data","length","randomIndex","Math","floor","random","fetchAndSetNewExercise","fetchError","Error","err","console","handleInputChange","e","target","value","checkAnswer","correctAnswer","answer","normalizedUserInput","normalizedCorrectAnswer","displayAnswer","itemId","concat","sentence","split","awardCorrectAnswer","awardIncorrectAnswer","showHint","firstLetter","latinizedFirstLetter","letter","revealTheAnswer","scheduleReview","handleNext","children","sentenceParts","placeholder","includes","style","textAlign","padding","border","borderRadius","maxWidth","margin","fontSize","onChange","disabled","width","max","minWidth","onCheckAnswer","undefined","onShowHint","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/PossessivesExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadPossessivesData } from '../../../../utils/exerciseDataService';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { normalizeString } from '../../../../utils/stringUtils';\r\nimport { useProgress } from '../../../../contexts/ProgressContext';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst PossessivesExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentExercise, setCurrentExercise] = useState(null);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization();\r\n  const progress = useProgress();\r\n  const { t } = useI18n();\r\n\r\n  const pickNewExercise = useCallback((data) => {\r\n    if (data && data.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * data.length);\r\n      setCurrentExercise(data[randomIndex]);\r\n      setUserInput('');\r\n      setFeedback({ message: '', type: '' });\r\n      setIsRevealed(false);\r\n      setError(null);\r\n    } else {\r\n      setError(t('exercises.noPossessivesFound', 'No possessives exercises found for the selected criteria.'));\r\n      setCurrentExercise(null);\r\n    }\r\n    setIsLoading(false);\r\n  }, [t]);\r\n\r\n  const fetchAndSetNewExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const { data, error: fetchError } = await loadPossessivesData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || t('errors.failedLoadPossessives'));\r\n      }\r\n      // Data for possessives is expected to be an array of items for the given day(s)\r\n      // loadPossessivesData already handles filtering by day.\r\n      setExerciseData(data || []); \r\n      pickNewExercise(data || []);\r\n    } catch (err) {\r\n      console.error(\"PossessivesExercise - Error fetching exercises:\", err);\r\n      setError(err.message || t('errors.unexpectedError'));\r\n      setIsLoading(false);\r\n      setCurrentExercise(null);\r\n    }\r\n  }, [language, days, pickNewExercise, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchAndSetNewExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay'));\r\n      setCurrentExercise(null);\r\n    }\r\n  }, [fetchAndSetNewExercise, exerciseKey, language, days, t]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n    if (feedback.message) setFeedback({ message: '', type: '' });\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!currentExercise || isRevealed) return;\r\n\r\n    const correctAnswer = currentExercise.answer;\r\n    const normalizedUserInput = normalizeString(userInput);\r\n    const normalizedCorrectAnswer = normalizeString(correctAnswer);\r\n    \r\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\r\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\r\n\r\n    if (normalizedUserInput === normalizedCorrectAnswer) {\r\n      setFeedback({ message: t('feedback.correct'), type: 'correct' });\r\n      progress.awardCorrectAnswer(itemId, 'grammar-possessive');\r\n    } else {\r\n      setFeedback({ message: t('feedback.incorrectAnswerIs', { correctAnswer: displayAnswer }), type: 'incorrect' });\r\n      progress.awardIncorrectAnswer(itemId, 'grammar-possessive');\r\n    }\r\n  };\r\n\r\n  const showHint = () => {\r\n    if (!currentExercise || isRevealed) return;\r\n    // Basic hint: show the first letter of the answer\r\n    const firstLetter = currentExercise.answer[0];\r\n    const latinizedFirstLetter = getLatinizedText(firstLetter, language);\r\n    setFeedback({ message: t('feedback.hintFirstLetterIs', { letter: latinizedFirstLetter }), type: 'hint' });\r\n  };\r\n\r\n  const revealTheAnswer = () => {\r\n    if (!currentExercise) return;\r\n    const correctAnswer = currentExercise.answer;\r\n    const displayAnswer = isLatinized ? getLatinizedText(correctAnswer, language) : correctAnswer;\r\n    const itemId = `possessive_${normalizeString(currentExercise.sentence.split(\" \")[0])}_${normalizeString(correctAnswer)}`;\r\n\r\n    setUserInput(correctAnswer); // Show the full answer in the input\r\n    setFeedback({ message: t('feedback.correctAnswerIs', { correctAnswer: displayAnswer }), type: 'info' });\r\n    setIsRevealed(true);\r\n    progress.scheduleReview(itemId, 'grammar-possessive', false);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setIsLoading(true);\r\n    pickNewExercise(exerciseData);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <p>{t('loading.possessivesExercise', 'Loading possessives exercise...')}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <FeedbackDisplay message={error} type=\"error\" />;\r\n  }\r\n\r\n  if (!currentExercise) {\r\n    return <FeedbackDisplay message={t('exercises.noPossessivesLoaded', 'No possessive exercise loaded. Try different selections or check data.')} type=\"info\" />;\r\n  }\r\n\r\n  // Display logic for \"fill_blank\" type\r\n  let sentenceParts = [];\r\n  let placeholder = \"____\"; // Default placeholder\r\n  if (currentExercise.sentence.includes('____')) {\r\n    sentenceParts = currentExercise.sentence.split('____');\r\n  } else if (currentExercise.sentence.includes('_')) { // Allow single underscore as placeholder\r\n    sentenceParts = currentExercise.sentence.split('_');\r\n    placeholder = \"_\";\r\n  } else {\r\n    sentenceParts = [currentExercise.sentence, \"\"]; // No placeholder found, input after sentence\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '600px', margin: 'auto' }}>\r\n      <h3>{t('titles.fillThePossessive', 'Fill in the Correct Possessive')}</h3>\r\n      <p style={{ fontSize: '1.1rem', margin: '15px 0' }}>\r\n        {getLatinizedText(sentenceParts[0], language)}\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleInputChange}\r\n          placeholder={placeholder}\r\n          disabled={isRevealed || isLoading}\r\n          style={{ \r\n            padding: '8px', \r\n            fontSize: '1rem', \r\n            width: `${Math.max(currentExercise.answer.length * 10, 60)}px`, // Dynamic width\r\n            minWidth: '60px',\r\n            maxWidth: '150px',\r\n            margin: '0 5px', \r\n            border: '1px solid #ccc', \r\n            borderRadius: '4px',\r\n            textAlign: 'center'\r\n          }}\r\n        />\r\n        {getLatinizedText(sentenceParts[1] || '', language)}\r\n      </p>\r\n      \r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      <ExerciseControls\r\n        onCheckAnswer={!isRevealed && !!currentExercise ? checkAnswer : undefined}\r\n        onShowHint={!isRevealed && !!currentExercise ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && !!currentExercise ? revealTheAnswer : undefined}\r\n        onNextExercise={handleNext}\r\n        config={{\r\n          showCheck: !isRevealed && !!currentExercise,\r\n          showHint: !isRevealed && !!currentExercise,\r\n          showReveal: !isRevealed && !!currentExercise,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PossessivesExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}