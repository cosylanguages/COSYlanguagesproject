{"ast":null,"code":"import React,{Suspense}from'react';// Vocabulary Exercise Components (lazy)\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ShowWordExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/ShowWordExercise'));const IdentifyImageExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/IdentifyImageExercise'));const TranscribeWordExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/TranscribeWordExercise'));const TypeOppositeExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/TypeOppositeExercise'));const MatchOppositesExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/MatchOppositesExercise'));const BuildWordExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/BuildWordExercise'));const MatchImageWordExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/vocabulary/MatchImageWordExercise'));// Grammar Exercise Components (lazy)\nconst ArticleWordExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/ArticleWordExercise'));const MatchArticlesWordsExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/MatchArticlesWordsExercise'));const SelectArticleExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/SelectArticleExercise'));const TypeVerbExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/TypeVerbExercise'));const MatchVerbsPronounsExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/MatchVerbsPronounsExercise'));const FillGapsExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/FillGapsExercise'));const WordOrderExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/WordOrderExercise'));const PossessivesExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/grammar/PossessivesExercise'));// Reading Exercise Components (lazy)\nconst StoryReadingExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/reading/StoryReadingExercise'));const InterestingFactExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/reading/InterestingFactExercise'));// Speaking Exercise Components (lazy)\nconst SpeakingQuestionExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/speaking/SpeakingQuestionExercise'));const MonologueExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/speaking/MonologueExercise'));const RolePlayExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/speaking/RolePlayExercise'));// Writing Exercise Components (lazy)\nconst WritingQuestionExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/writing/WritingQuestionExercise'));const StorytellingExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/writing/StorytellingExercise'));const DiaryPracticeExercise=/*#__PURE__*/React.lazy(()=>import('./exercises/writing/DiaryPracticeExercise'));// Placeholder component for exercises not yet migrated (though not currently used after possessives added)\nconst PlaceholderExercise=_ref=>{let{name,subPracticeType}=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #ddd',borderRadius:'5px',backgroundColor:'#f9f9f9'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[name||subPracticeType,\" Exercise\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"This is a placeholder for the \",/*#__PURE__*/_jsx(\"em\",{children:name||subPracticeType}),\" exercise.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Implementation is pending.\"})]});};// Mapping of sub-practice IDs to their components\nconst exerciseMap={// Vocabulary\n'random-word':ShowWordExercise,'random-image':IdentifyImageExercise,'match-image-word':MatchImageWordExercise,'listening':TranscribeWordExercise,'type-opposite':TypeOppositeExercise,'match-opposites':MatchOppositesExercise,'build-word':BuildWordExercise,// Grammar\n'gender-articles':SelectArticleExercise,'verbs-conjugation':TypeVerbExercise,'possessives':PossessivesExercise,// Updated from PlaceholderExercise\n'word-order':WordOrderExercise,// Reading\n'story':StoryReadingExercise,'interesting-fact':InterestingFactExercise,// Speaking\n'question-practice':SpeakingQuestionExercise,'monologue':MonologueExercise,'role-play':RolePlayExercise,// Writing\n'writing-question':WritingQuestionExercise,'storytelling':StorytellingExercise,'diary':DiaryPracticeExercise};const ExerciseHost=_ref2=>{let{subPracticeType,language,days,exerciseKey}=_ref2;if(!subPracticeType){return/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontStyle:'italic',color:'#666'},children:\"Please select an exercise type above.\"});}let ExerciseComponent=exerciseMap[subPracticeType];if(!ExerciseComponent){const simpleKey=subPracticeType.split('/').pop();if(exerciseMap[simpleKey]){ExerciseComponent=exerciseMap[simpleKey];}else{const foundKey=Object.keys(exerciseMap).find(key=>key.endsWith(\"/\".concat(subPracticeType)));ExerciseComponent=foundKey?exerciseMap[foundKey]:null;}if(!ExerciseComponent){return/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',textAlign:'center',padding:'20px',border:'1px solid red',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Exercise Error\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Exercise type \\\"\",/*#__PURE__*/_jsx(\"strong\",{children:subPracticeType}),\"\\\" not found or not yet implemented.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please check the mapping in ExerciseHost.js or select another exercise.\"})]});}}return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'20px'},children:\"Chargement de l'exercice...\"}),children:/*#__PURE__*/_jsx(ExerciseComponent,{language:language,days:days,exerciseKey:exerciseKey})});};export default ExerciseHost;","map":{"version":3,"names":["React","Suspense","jsxs","_jsxs","jsx","_jsx","ShowWordExercise","lazy","IdentifyImageExercise","TranscribeWordExercise","TypeOppositeExercise","MatchOppositesExercise","BuildWordExercise","MatchImageWordExercise","ArticleWordExercise","MatchArticlesWordsExercise","SelectArticleExercise","TypeVerbExercise","MatchVerbsPronounsExercise","FillGapsExercise","WordOrderExercise","PossessivesExercise","StoryReadingExercise","InterestingFactExercise","SpeakingQuestionExercise","MonologueExercise","RolePlayExercise","WritingQuestionExercise","StorytellingExercise","DiaryPracticeExercise","PlaceholderExercise","_ref","name","subPracticeType","style","padding","border","borderRadius","backgroundColor","children","exerciseMap","ExerciseHost","_ref2","language","days","exerciseKey","textAlign","fontStyle","color","ExerciseComponent","simpleKey","split","pop","foundKey","Object","keys","find","key","endsWith","concat","fallback"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/ExerciseControls.js"],"sourcesContent":["import React, { Suspense } from 'react';\r\n\r\n// Vocabulary Exercise Components (lazy)\r\nconst ShowWordExercise = React.lazy(() => import('./exercises/vocabulary/ShowWordExercise'));\r\nconst IdentifyImageExercise = React.lazy(() => import('./exercises/vocabulary/IdentifyImageExercise'));\r\nconst TranscribeWordExercise = React.lazy(() => import('./exercises/vocabulary/TranscribeWordExercise'));\r\nconst TypeOppositeExercise = React.lazy(() => import('./exercises/vocabulary/TypeOppositeExercise'));\r\nconst MatchOppositesExercise = React.lazy(() => import('./exercises/vocabulary/MatchOppositesExercise'));\r\nconst BuildWordExercise = React.lazy(() => import('./exercises/vocabulary/BuildWordExercise'));\r\nconst MatchImageWordExercise = React.lazy(() => import('./exercises/vocabulary/MatchImageWordExercise'));\r\n\r\n// Grammar Exercise Components (lazy)\r\nconst ArticleWordExercise = React.lazy(() => import('./exercises/grammar/ArticleWordExercise'));\r\nconst MatchArticlesWordsExercise = React.lazy(() => import('./exercises/grammar/MatchArticlesWordsExercise'));\r\nconst SelectArticleExercise = React.lazy(() => import('./exercises/grammar/SelectArticleExercise'));\r\nconst TypeVerbExercise = React.lazy(() => import('./exercises/grammar/TypeVerbExercise'));\r\nconst MatchVerbsPronounsExercise = React.lazy(() => import('./exercises/grammar/MatchVerbsPronounsExercise'));\r\nconst FillGapsExercise = React.lazy(() => import('./exercises/grammar/FillGapsExercise'));\r\nconst WordOrderExercise = React.lazy(() => import('./exercises/grammar/WordOrderExercise'));\r\nconst PossessivesExercise = React.lazy(() => import('./exercises/grammar/PossessivesExercise'));\r\n\r\n// Reading Exercise Components (lazy)\r\nconst StoryReadingExercise = React.lazy(() => import('./exercises/reading/StoryReadingExercise'));\r\nconst InterestingFactExercise = React.lazy(() => import('./exercises/reading/InterestingFactExercise'));\r\n\r\n// Speaking Exercise Components (lazy)\r\nconst SpeakingQuestionExercise = React.lazy(() => import('./exercises/speaking/SpeakingQuestionExercise'));\r\nconst MonologueExercise = React.lazy(() => import('./exercises/speaking/MonologueExercise'));\r\nconst RolePlayExercise = React.lazy(() => import('./exercises/speaking/RolePlayExercise'));\r\n\r\n// Writing Exercise Components (lazy)\r\nconst WritingQuestionExercise = React.lazy(() => import('./exercises/writing/WritingQuestionExercise'));\r\nconst StorytellingExercise = React.lazy(() => import('./exercises/writing/StorytellingExercise'));\r\nconst DiaryPracticeExercise = React.lazy(() => import('./exercises/writing/DiaryPracticeExercise'));\r\n\r\n// Placeholder component for exercises not yet migrated (though not currently used after possessives added)\r\nconst PlaceholderExercise = ({ name, subPracticeType }) => (\r\n  <div style={{ padding: '20px', border: '1px solid #ddd', borderRadius: '5px', backgroundColor: '#f9f9f9' }}>\r\n    <h3>{name || subPracticeType} Exercise</h3>\r\n    <p>This is a placeholder for the <em>{name || subPracticeType}</em> exercise.</p>\r\n    <p>Implementation is pending.</p>\r\n  </div>\r\n);\r\n\r\n// Mapping of sub-practice IDs to their components\r\nconst exerciseMap = {\r\n  // Vocabulary\r\n  'random-word': ShowWordExercise,\r\n  'random-image': IdentifyImageExercise,\r\n  'match-image-word': MatchImageWordExercise,\r\n  'listening': TranscribeWordExercise,\r\n  'type-opposite': TypeOppositeExercise,\r\n  'match-opposites': MatchOppositesExercise,\r\n  'build-word': BuildWordExercise,\r\n  \r\n  // Grammar\r\n  'gender-articles': SelectArticleExercise, \r\n  'verbs-conjugation': TypeVerbExercise, \r\n  'possessives': PossessivesExercise, // Updated from PlaceholderExercise\r\n  'word-order': WordOrderExercise, \r\n  \r\n  // Reading\r\n  'story': StoryReadingExercise,\r\n  'interesting-fact': InterestingFactExercise,\r\n  \r\n  // Speaking\r\n  'question-practice': SpeakingQuestionExercise,\r\n  'monologue': MonologueExercise,\r\n  'role-play': RolePlayExercise,\r\n  \r\n  // Writing\r\n  'writing-question': WritingQuestionExercise,\r\n  'storytelling': StorytellingExercise, \r\n  'diary': DiaryPracticeExercise, \r\n};\r\n\r\nconst ExerciseHost = ({ subPracticeType, language, days, exerciseKey }) => {\r\n  if (!subPracticeType) {\r\n    return <p style={{ textAlign: 'center', fontStyle: 'italic', color: '#666' }}>Please select an exercise type above.</p>;\r\n  }\r\n\r\n  let ExerciseComponent = exerciseMap[subPracticeType];\r\n\r\n  if (!ExerciseComponent) {\r\n    const simpleKey = subPracticeType.split('/').pop();\r\n    if (exerciseMap[simpleKey]) {\r\n        ExerciseComponent = exerciseMap[simpleKey];\r\n    } else {\r\n        const foundKey = Object.keys(exerciseMap).find(key => key.endsWith(`/${subPracticeType}`));\r\n        ExerciseComponent = foundKey ? exerciseMap[foundKey] : null;\r\n    }\r\n\r\n    if (!ExerciseComponent) {\r\n        return (\r\n          <div style={{ color: 'red', textAlign: 'center', padding: '20px', border: '1px solid red', borderRadius: '5px' }}>\r\n            <h3>Exercise Error</h3>\r\n            <p>Exercise type \"<strong>{subPracticeType}</strong>\" not found or not yet implemented.</p>\r\n            <p>Please check the mapping in ExerciseHost.js or select another exercise.</p>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Suspense fallback={<div style={{textAlign: 'center', padding: '20px'}}>Chargement de l'exercice...</div>}>\r\n      <ExerciseComponent language={language} days={days} exerciseKey={exerciseKey} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ExerciseHost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}