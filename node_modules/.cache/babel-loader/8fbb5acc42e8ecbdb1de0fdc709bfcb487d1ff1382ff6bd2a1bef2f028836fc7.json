{"ast":null,"code":"import _objectSpread from\"/workspaces/COSYlanguagesproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{loadReadingData}from'../../../../utils/exerciseDataService';// Assuming facts are part of general reading data\nimport{useLatinizationContext}from'../../../../contexts/LatinizationContext';import useLatinization from'../../../../hooks/useLatinization';import FeedbackDisplay from'../../FeedbackDisplay';import ExerciseControls from'../../ExerciseControls';import{useI18n}from'../../../../i18n/I18nContext';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const InterestingFactExercise=_ref=>{let{language,days,exerciseKey}=_ref;const[currentFact,setCurrentFact]=useState(null);// { title: string, text: string } or similar\nconst[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const{isLatinized}=useLatinizationContext();const getLatinizedText=useLatinization;const{t}=useI18n();const fetchNewFact=useCallback(async()=>{setIsLoading(true);setError(null);setCurrentFact(null);try{// Assuming facts are loaded via loadReadingData and are identified by a type or specific structure\n// Or, a new loadFactsData function could be created in exerciseDataService if facts are in separate files.\n// For now, let's assume loadReadingData can fetch an array of objects, some of which are facts.\n// This might require the data JSON to have a 'type: \"fact\"' field or similar.\nconst{data:items,error:fetchError}=await loadReadingData(language,days);if(fetchError){throw new Error(fetchError.message||fetchError.error||'Failed to load reading data for facts.');}// Filter for items that are facts (example: check for a 'text' field and not 'paragraphs')\nconst facts=items.filter(item=>item&&item.text&&!item.paragraphs);if(facts&&facts.length>0){const randomIndex=Math.floor(Math.random()*facts.length);setCurrentFact(facts[randomIndex]);}else{setError(t('exercises.noFacts','No interesting facts found for the selected criteria. Ensure reading data includes items with a \"text\" field.'));}}catch(err){console.error(\"InterestingFactExercise - Error fetching fact:\",err);setError(err.message||t('errors.unexpectedError','An unexpected error occurred.'));}finally{setIsLoading(false);}},[language,days,t]);useEffect(()=>{if(language&&days&&days.length>0){fetchNewFact();}else{setIsLoading(false);setError(t('errors.selectLangDay',\"Please select a language and day(s).\"));}},[fetchNewFact,exerciseKey,language,days,t]);if(isLoading)return/*#__PURE__*/_jsx(\"p\",{children:t('loading.readingExercise','Loading interesting fact...')});if(error)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:error,type:\"error\"});if(!currentFact&&!isLoading)return/*#__PURE__*/_jsx(FeedbackDisplay,{message:t('exercises.noFactToDisplay','No fact to display. Try different selections.'),type:\"info\"});const factTitle=currentFact?getLatinizedText(currentFact.title||\"Interesting Fact\",language):\"\";const factText=currentFact?getLatinizedText(currentFact.text,language):\"\";return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #eee',borderRadius:'8px',maxWidth:'700px',margin:'0 auto'},children:[currentFact&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{style:_objectSpread({textAlign:'center',marginBottom:'15px'},isLatinized&&currentFact.title&&currentFact.title!==factTitle&&{fontStyle:'italic'}),children:factTitle}),/*#__PURE__*/_jsx(\"div\",{style:_objectSpread({textAlign:'left',lineHeight:'1.7',fontSize:'1.1rem',padding:'10px',background:'#f9f9f9',borderRadius:'5px'},isLatinized&&currentFact.text!==factText&&{fontStyle:'italic'}),children:factText})]}),/*#__PURE__*/_jsx(ExerciseControls,{onNextExercise:fetchNewFact,config:{showCheck:false,showHint:false,showReveal:false,showNext:true}})]});};export default InterestingFactExercise;","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadReadingData","useLatinizationContext","useLatinization","FeedbackDisplay","ExerciseControls","useI18n","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","InterestingFactExercise","_ref","language","days","exerciseKey","currentFact","setCurrentFact","isLoading","setIsLoading","error","setError","isLatinized","getLatinizedText","t","fetchNewFact","data","items","fetchError","Error","message","facts","filter","item","text","paragraphs","length","randomIndex","Math","floor","random","err","console","children","type","factTitle","title","factText","style","padding","border","borderRadius","maxWidth","margin","_objectSpread","textAlign","marginBottom","fontStyle","lineHeight","fontSize","background","onNextExercise","config","showCheck","showHint","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/reading/InterestingFactExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadReadingData } from '../../../../utils/exerciseDataService'; // Assuming facts are part of general reading data\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst InterestingFactExercise = ({ language, days, exerciseKey }) => {\r\n  const [currentFact, setCurrentFact] = useState(null); // { title: string, text: string } or similar\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t } = useI18n();\r\n\r\n  const fetchNewFact = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setCurrentFact(null);\r\n\r\n    try {\r\n      // Assuming facts are loaded via loadReadingData and are identified by a type or specific structure\r\n      // Or, a new loadFactsData function could be created in exerciseDataService if facts are in separate files.\r\n      // For now, let's assume loadReadingData can fetch an array of objects, some of which are facts.\r\n      // This might require the data JSON to have a 'type: \"fact\"' field or similar.\r\n      const { data: items, error: fetchError } = await loadReadingData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load reading data for facts.');\r\n      }\r\n\r\n      // Filter for items that are facts (example: check for a 'text' field and not 'paragraphs')\r\n      const facts = items.filter(item => item && item.text && !item.paragraphs);\r\n\r\n      if (facts && facts.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * facts.length);\r\n        setCurrentFact(facts[randomIndex]);\r\n      } else {\r\n        setError(t('exercises.noFacts', 'No interesting facts found for the selected criteria. Ensure reading data includes items with a \"text\" field.'));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"InterestingFactExercise - Error fetching fact:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      fetchNewFact();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [fetchNewFact, exerciseKey, language, days, t]);\r\n\r\n  if (isLoading) return <p>{t('loading.readingExercise', 'Loading interesting fact...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (!currentFact && !isLoading) return <FeedbackDisplay message={t('exercises.noFactToDisplay', 'No fact to display. Try different selections.')} type=\"info\" />;\r\n  \r\n  const factTitle = currentFact ? getLatinizedText(currentFact.title || \"Interesting Fact\", language) : \"\";\r\n  const factText = currentFact ? getLatinizedText(currentFact.text, language) : \"\";\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #eee', borderRadius: '8px', maxWidth: '700px', margin: '0 auto' }}>\r\n      {currentFact && (\r\n        <>\r\n          <h3 style={{ textAlign: 'center', marginBottom: '15px', ...(isLatinized && currentFact.title && currentFact.title !== factTitle && {fontStyle: 'italic'}) }}>\r\n            {factTitle}\r\n          </h3>\r\n          <div style={{ textAlign: 'left', lineHeight: '1.7', fontSize: '1.1rem', padding: '10px', background: '#f9f9f9', borderRadius: '5px', ...(isLatinized && currentFact.text !== factText && {fontStyle: 'italic'}) }}>\r\n            {factText}\r\n          </div>\r\n        </>\r\n      )}\r\n      <ExerciseControls\r\n        onNextExercise={fetchNewFact}\r\n        config={{\r\n          showCheck: false,\r\n          showHint: false, \r\n          showReveal: false,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestingFactExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}