{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/MatchVerbsPronounsExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { loadVerbGrammarData } from '../../../../utils/exerciseDataService';\nimport { processVerbData } from '../../../../utils/grammarSentenceGenerator';\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\nimport useLatinization from '../../../../hooks/useLatinization';\nimport { shuffleArray } from '../../../../utils/arrayUtils';\nimport FeedbackDisplay from '../../FeedbackDisplay';\nimport ExerciseControls from '../../ExerciseControls';\nimport { useI18n } from '../../../../i18n/I18nContext';\nimport { useProgress } from '../../../../contexts/ProgressContext'; // Import useProgress\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchVerbsPronounsExercise = ({\n  language,\n  days,\n  exerciseKey\n}) => {\n  _s();\n  const [targetVerbInfinitive, setTargetVerbInfinitive] = useState('');\n  const [actualPairs, setActualPairs] = useState([]);\n  const [pronounsColumn, setPronounsColumn] = useState([]);\n  const [formsColumn, setFormsColumn] = useState([]);\n  const [selectedPronoun, setSelectedPronoun] = useState(null);\n  const [selectedForm, setSelectedForm] = useState(null);\n  const [matchedItems, setMatchedItems] = useState({});\n  const [feedback, setFeedback] = useState({\n    message: '',\n    type: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [numCorrectMatches, setNumCorrectMatches] = useState(0);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const {\n    isLatinized\n  } = useLatinizationContext();\n  const getLatinizedText = useLatinization;\n  const {\n    t\n  } = useI18n();\n  const progress = useProgress();\n  const NUM_PAIRS_TO_DISPLAY = 6;\n  const setupNewExercise = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setFeedback({\n      message: '',\n      type: ''\n    });\n    setSelectedPronoun(null);\n    setSelectedForm(null);\n    setMatchedItems({});\n    setNumCorrectMatches(0);\n    setIsRevealed(false);\n    setTargetVerbInfinitive('');\n    setActualPairs([]);\n    setPronounsColumn([]);\n    setFormsColumn([]);\n    try {\n      const {\n        data: rawVerbItems,\n        error: fetchError\n      } = await loadVerbGrammarData(language, days);\n      if (fetchError) {\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load verb grammar data.');\n      }\n      if (!rawVerbItems || rawVerbItems.length === 0) {\n        setError(t('errors.noVerbData', 'No verb grammar data found for the selected criteria.'));\n        setIsLoading(false);\n        return;\n      }\n      const processedVerbItems = processVerbData(rawVerbItems, language);\n      if (!processedVerbItems || processedVerbItems.length === 0) {\n        setError(t('errors.noProcessableVerbData', 'No processable verb items found.'));\n        setIsLoading(false);\n        return;\n      }\n      const randomVerbInfinitive = processedVerbItems[Math.floor(Math.random() * processedVerbItems.length)].verb;\n      setTargetVerbInfinitive(randomVerbInfinitive);\n      const itemsForThisVerb = processedVerbItems.filter(item => item.verb === randomVerbInfinitive);\n      if (!itemsForThisVerb || itemsForThisVerb.length < 2) {\n        setError(t('errors.notEnoughVerbForms', `Not enough forms for the verb \"${randomVerbInfinitive}\" to create this exercise. Need at least 2.`, {\n          verb: randomVerbInfinitive\n        }));\n        setIsLoading(false);\n        return;\n      }\n      const selectedItems = shuffleArray(itemsForThisVerb).slice(0, NUM_PAIRS_TO_DISPLAY);\n      setActualPairs(selectedItems);\n      setPronounsColumn(shuffleArray(selectedItems.map(p => p.pronoun)));\n      setFormsColumn(shuffleArray(selectedItems.map(p => p.form)));\n    } catch (err) {\n      console.error(\"MatchVerbsPronounsExercise - Error setting up:\", err);\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [language, days, t]);\n  useEffect(() => {\n    if (language && days && days.length > 0) {\n      setupNewExercise();\n    } else {\n      setIsLoading(false);\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\n    }\n  }, [setupNewExercise, exerciseKey, language, days, t]);\n  const handleItemClick = (value, type, ref) => {\n    if (matchedItems[value] || isRevealed) return;\n    if (type === 'pronoun') {\n      if (selectedPronoun && selectedPronoun.elementRef === ref) setSelectedPronoun(null);else setSelectedPronoun({\n        value,\n        elementRef: ref\n      });\n      setFeedback({\n        message: '',\n        type: ''\n      });\n    } else if (type === 'form') {\n      if (selectedForm && selectedForm.elementRef === ref) setSelectedForm(null);else setSelectedForm({\n        value,\n        elementRef: ref\n      });\n      setFeedback({\n        message: '',\n        type: ''\n      });\n    }\n  };\n  useEffect(() => {\n    if (selectedPronoun && selectedForm) {\n      const currentPronounValue = selectedPronoun.value;\n      const currentFormValue = selectedForm.value;\n      const isCorrectMatch = actualPairs.some(pair => pair.pronoun === currentPronounValue && pair.form === currentFormValue);\n      // Construct a unique ID for the specific pronoun-form pair of this verb\n      const itemId = `verbmatch_${targetVerbInfinitive}_${currentPronounValue}_${currentFormValue}`;\n      if (isCorrectMatch) {\n        setFeedback({\n          message: t('feedback.correctMatch', 'Correct Match!'),\n          type: 'correct'\n        });\n        setMatchedItems(prev => ({\n          ...prev,\n          [currentPronounValue]: true,\n          [currentFormValue]: true\n        }));\n        setNumCorrectMatches(prev => prev + 1);\n        progress.awardCorrectAnswer(itemId, 'grammar-match-verb');\n      } else {\n        setFeedback({\n          message: t('feedback.incorrectMatch', 'Incorrect Match. Try again.'),\n          type: 'incorrect'\n        });\n        progress.awardIncorrectAnswer(itemId, 'grammar-match-verb');\n        if (selectedPronoun.elementRef) selectedPronoun.elementRef.classList.add('incorrect-flash');\n        if (selectedForm.elementRef) selectedForm.elementRef.classList.add('incorrect-flash');\n        setTimeout(() => {\n          if (selectedPronoun && selectedPronoun.elementRef) selectedPronoun.elementRef.classList.remove('incorrect-flash');\n          if (selectedForm && selectedForm.elementRef) selectedForm.elementRef.classList.remove('incorrect-flash');\n        }, 1000);\n      }\n      setSelectedPronoun(null);\n      setSelectedForm(null);\n    }\n  }, [selectedPronoun, selectedForm, actualPairs, t, language, progress, targetVerbInfinitive]);\n  useEffect(() => {\n    if (actualPairs.length > 0 && numCorrectMatches === actualPairs.length && !isRevealed) {\n      setFeedback({\n        message: t('feedback.allPairsMatched', 'All pairs matched! Well done!'),\n        type: 'success'\n      });\n    }\n  }, [numCorrectMatches, actualPairs.length, isRevealed, t]);\n  const showHint = () => {\n    if (isRevealed || numCorrectMatches === actualPairs.length) return;\n    const unMatched = actualPairs.filter(p => !matchedItems[p.pronoun] || !matchedItems[p.form]);\n    if (unMatched.length > 0) {\n      const hintPair = unMatched[0];\n      setFeedback({\n        message: t('feedback.hintMatchVerb', `Hint: Try matching \"${getLatinizedText(hintPair.pronoun, language)}\" with \"${getLatinizedText(hintPair.form, language)}\".`, {\n          item1: getLatinizedText(hintPair.pronoun, language),\n          item2: getLatinizedText(hintPair.form, language)\n        }),\n        type: 'hint'\n      });\n    } else {\n      setFeedback({\n        message: t('feedback.noMoreHints', \"No more hints available.\"),\n        type: 'info'\n      });\n    }\n  };\n  const revealAllAnswers = () => {\n    setIsRevealed(true);\n    const allMatched = {};\n    actualPairs.forEach(p => {\n      allMatched[p.pronoun] = true;\n      allMatched[p.form] = true;\n      const itemId = `verbmatch_${targetVerbInfinitive}_${p.pronoun}_${p.form}`;\n      progress.scheduleReview(itemId, 'grammar-match-verb', false);\n    });\n    setMatchedItems(allMatched);\n    setNumCorrectMatches(actualPairs.length);\n    setFeedback({\n      message: t('feedback.allPairsRevealed', \"All pairs revealed.\"),\n      type: 'info'\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: t('loading.matchVerbExercise', 'Loading match verbs exercise...')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: error,\n    type: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 21\n  }, this);\n  if (actualPairs.length === 0 && !isLoading) return /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n    message: t('exercises.noData', \"No pairs available for this exercise.\"),\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 54\n  }, this);\n  const columnStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    alignItems: 'stretch',\n    margin: '0 15px',\n    flex: 1\n  };\n  const itemStyleBuilder = (value, type) => {\n    let isSelected = type === 'pronoun' && (selectedPronoun === null || selectedPronoun === void 0 ? void 0 : selectedPronoun.value) === value || type === 'form' && (selectedForm === null || selectedForm === void 0 ? void 0 : selectedForm.value) === value;\n    return {\n      padding: '12px 18px',\n      border: `2px solid ${isSelected ? '#007bff' : matchedItems[value] ? '#28a745' : '#ccc'}`,\n      borderRadius: '8px',\n      cursor: matchedItems[value] || isRevealed ? 'default' : 'pointer',\n      textAlign: 'center',\n      backgroundColor: matchedItems[value] ? '#d4edda' : isSelected ? '#cfe2ff' : '#f8f9fa',\n      transition: 'background-color 0.2s, border-color 0.2s',\n      opacity: isRevealed && !matchedItems[value] ? 0.5 : 1\n    };\n  };\n  const latinizedVerbInfinitive = getLatinizedText(targetVerbInfinitive, language);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: t('titles.matchVerbPronoun', 'Match Pronouns with Verb Forms')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '1.2em',\n        fontWeight: 'bold',\n        ...(isLatinized && targetVerbInfinitive !== latinizedVerbInfinitive && {\n          fontStyle: 'italic'\n        })\n      },\n      children: [t('labels.verb', 'Verb'), \": \", latinizedVerbInfinitive || targetVerbInfinitive]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: columnStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: t('labels.pronouns', 'Pronouns')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), pronounsColumn.map(pronoun => {\n          const ref = /*#__PURE__*/React.createRef();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            ref: ref,\n            style: itemStyleBuilder(pronoun, 'pronoun'),\n            onClick: () => handleItemClick(pronoun, 'pronoun', ref.current),\n            disabled: matchedItems[pronoun] || isRevealed,\n            children: getLatinizedText(pronoun, language)\n          }, `pronoun-${pronoun}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: columnStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: t('labels.verbForms', 'Verb Forms')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), formsColumn.map(form => {\n          const ref = /*#__PURE__*/React.createRef();\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            ref: ref,\n            style: itemStyleBuilder(form, 'form'),\n            onClick: () => handleItemClick(form, 'form', ref.current),\n            disabled: matchedItems[form] || isRevealed,\n            children: getLatinizedText(form, language)\n          }, `form-${form}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackDisplay, {\n      message: feedback.message,\n      type: feedback.type,\n      language: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseControls, {\n      onShowHint: !isRevealed && numCorrectMatches < actualPairs.length ? showHint : undefined,\n      onRevealAnswer: !isRevealed && numCorrectMatches < actualPairs.length ? revealAllAnswers : undefined,\n      onNextExercise: setupNewExercise,\n      config: {\n        showCheck: false,\n        showHint: !isRevealed && numCorrectMatches < actualPairs.length,\n        showReveal: !isRevealed && numCorrectMatches < actualPairs.length,\n        showNext: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchVerbsPronounsExercise, \"OaJviAcW5qOOx3UrdMncGKbW1nk=\", false, function () {\n  return [useLatinizationContext, useI18n, useProgress];\n});\n_c = MatchVerbsPronounsExercise;\nexport default MatchVerbsPronounsExercise;\nvar _c;\n$RefreshReg$(_c, \"MatchVerbsPronounsExercise\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","loadVerbGrammarData","processVerbData","useLatinizationContext","useLatinization","shuffleArray","FeedbackDisplay","ExerciseControls","useI18n","useProgress","jsxDEV","_jsxDEV","MatchVerbsPronounsExercise","language","days","exerciseKey","_s","targetVerbInfinitive","setTargetVerbInfinitive","actualPairs","setActualPairs","pronounsColumn","setPronounsColumn","formsColumn","setFormsColumn","selectedPronoun","setSelectedPronoun","selectedForm","setSelectedForm","matchedItems","setMatchedItems","feedback","setFeedback","message","type","isLoading","setIsLoading","error","setError","numCorrectMatches","setNumCorrectMatches","isRevealed","setIsRevealed","isLatinized","getLatinizedText","t","progress","NUM_PAIRS_TO_DISPLAY","setupNewExercise","data","rawVerbItems","fetchError","Error","length","processedVerbItems","randomVerbInfinitive","Math","floor","random","verb","itemsForThisVerb","filter","item","selectedItems","slice","map","p","pronoun","form","err","console","handleItemClick","value","ref","elementRef","currentPronounValue","currentFormValue","isCorrectMatch","some","pair","itemId","prev","awardCorrectAnswer","awardIncorrectAnswer","classList","add","setTimeout","remove","showHint","unMatched","hintPair","item1","item2","revealAllAnswers","allMatched","forEach","scheduleReview","children","fileName","_jsxFileName","lineNumber","columnNumber","columnStyle","display","flexDirection","gap","alignItems","margin","flex","itemStyleBuilder","isSelected","padding","border","borderRadius","cursor","textAlign","backgroundColor","transition","opacity","latinizedVerbInfinitive","style","fontSize","fontWeight","fontStyle","justifyContent","createRef","onClick","current","disabled","onShowHint","undefined","onRevealAnswer","onNextExercise","config","showCheck","showReveal","showNext","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/grammar/MatchVerbsPronounsExercise.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { loadVerbGrammarData } from '../../../../utils/exerciseDataService';\r\nimport { processVerbData } from '../../../../utils/grammarSentenceGenerator';\r\nimport { useLatinizationContext } from '../../../../contexts/LatinizationContext';\r\nimport useLatinization from '../../../../hooks/useLatinization';\r\nimport { shuffleArray } from '../../../../utils/arrayUtils';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\nimport { useProgress } from '../../../../contexts/ProgressContext'; // Import useProgress\r\n\r\nconst MatchVerbsPronounsExercise = ({ language, days, exerciseKey }) => {\r\n  const [targetVerbInfinitive, setTargetVerbInfinitive] = useState('');\r\n  const [actualPairs, setActualPairs] = useState([]); \r\n  const [pronounsColumn, setPronounsColumn] = useState([]);\r\n  const [formsColumn, setFormsColumn] = useState([]);\r\n  \r\n  const [selectedPronoun, setSelectedPronoun] = useState(null); \r\n  const [selectedForm, setSelectedForm] = useState(null); \r\n  \r\n  const [matchedItems, setMatchedItems] = useState({}); \r\n  const [feedback, setFeedback] = useState({ message: '', type: '' });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [numCorrectMatches, setNumCorrectMatches] = useState(0);\r\n  const [isRevealed, setIsRevealed] = useState(false);\r\n\r\n  const { isLatinized } = useLatinizationContext();\r\n  const getLatinizedText = useLatinization;\r\n  const { t } = useI18n();\r\n  const progress = useProgress();\r\n\r\n  const NUM_PAIRS_TO_DISPLAY = 6;\r\n\r\n  const setupNewExercise = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setFeedback({ message: '', type: '' });\r\n    setSelectedPronoun(null);\r\n    setSelectedForm(null);\r\n    setMatchedItems({});\r\n    setNumCorrectMatches(0);\r\n    setIsRevealed(false);\r\n    setTargetVerbInfinitive('');\r\n    setActualPairs([]);\r\n    setPronounsColumn([]);\r\n    setFormsColumn([]);\r\n\r\n    try {\r\n      const { data: rawVerbItems, error: fetchError } = await loadVerbGrammarData(language, days);\r\n      if (fetchError) {\r\n        throw new Error(fetchError.message || fetchError.error || 'Failed to load verb grammar data.');\r\n      }\r\n\r\n      if (!rawVerbItems || rawVerbItems.length === 0) {\r\n        setError(t('errors.noVerbData', 'No verb grammar data found for the selected criteria.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const processedVerbItems = processVerbData(rawVerbItems, language);\r\n      if (!processedVerbItems || processedVerbItems.length === 0) {\r\n        setError(t('errors.noProcessableVerbData', 'No processable verb items found.'));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const randomVerbInfinitive = processedVerbItems[Math.floor(Math.random() * processedVerbItems.length)].verb;\r\n      setTargetVerbInfinitive(randomVerbInfinitive);\r\n\r\n      const itemsForThisVerb = processedVerbItems.filter(item => item.verb === randomVerbInfinitive);\r\n\r\n      if (!itemsForThisVerb || itemsForThisVerb.length < 2) {\r\n        setError(t('errors.notEnoughVerbForms', `Not enough forms for the verb \"${randomVerbInfinitive}\" to create this exercise. Need at least 2.`, {verb: randomVerbInfinitive}));\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const selectedItems = shuffleArray(itemsForThisVerb).slice(0, NUM_PAIRS_TO_DISPLAY);\r\n      setActualPairs(selectedItems);\r\n      setPronounsColumn(shuffleArray(selectedItems.map(p => p.pronoun)));\r\n      setFormsColumn(shuffleArray(selectedItems.map(p => p.form)));\r\n\r\n    } catch (err) {\r\n      console.error(\"MatchVerbsPronounsExercise - Error setting up:\", err);\r\n      setError(err.message || t('errors.unexpectedError', 'An unexpected error occurred.'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [language, days, t]);\r\n\r\n  useEffect(() => {\r\n    if (language && days && days.length > 0) {\r\n      setupNewExercise();\r\n    } else {\r\n      setIsLoading(false);\r\n      setError(t('errors.selectLangDay', \"Please select a language and day(s).\"));\r\n    }\r\n  }, [setupNewExercise, exerciseKey, language, days, t]);\r\n  \r\n  const handleItemClick = (value, type, ref) => {\r\n    if (matchedItems[value] || isRevealed) return;\r\n\r\n    if (type === 'pronoun') {\r\n      if (selectedPronoun && selectedPronoun.elementRef === ref) setSelectedPronoun(null);\r\n      else setSelectedPronoun({ value, elementRef: ref });\r\n      setFeedback({message: '', type: ''});\r\n    } else if (type === 'form') {\r\n      if (selectedForm && selectedForm.elementRef === ref) setSelectedForm(null);\r\n      else setSelectedForm({ value, elementRef: ref });\r\n      setFeedback({message: '', type: ''});\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedPronoun && selectedForm) {\r\n      const currentPronounValue = selectedPronoun.value;\r\n      const currentFormValue = selectedForm.value;\r\n      const isCorrectMatch = actualPairs.some(pair => \r\n        pair.pronoun === currentPronounValue && pair.form === currentFormValue\r\n      );\r\n      // Construct a unique ID for the specific pronoun-form pair of this verb\r\n      const itemId = `verbmatch_${targetVerbInfinitive}_${currentPronounValue}_${currentFormValue}`;\r\n\r\n      if (isCorrectMatch) {\r\n        setFeedback({ message: t('feedback.correctMatch', 'Correct Match!'), type: 'correct' });\r\n        setMatchedItems(prev => ({ ...prev, [currentPronounValue]: true, [currentFormValue]: true }));\r\n        setNumCorrectMatches(prev => prev + 1);\r\n        progress.awardCorrectAnswer(itemId, 'grammar-match-verb');\r\n      } else {\r\n        setFeedback({ message: t('feedback.incorrectMatch', 'Incorrect Match. Try again.'), type: 'incorrect' });\r\n        progress.awardIncorrectAnswer(itemId, 'grammar-match-verb');\r\n        if (selectedPronoun.elementRef) selectedPronoun.elementRef.classList.add('incorrect-flash');\r\n        if (selectedForm.elementRef) selectedForm.elementRef.classList.add('incorrect-flash');\r\n        setTimeout(() => {\r\n            if (selectedPronoun && selectedPronoun.elementRef) selectedPronoun.elementRef.classList.remove('incorrect-flash');\r\n            if (selectedForm && selectedForm.elementRef) selectedForm.elementRef.classList.remove('incorrect-flash');\r\n        }, 1000);\r\n      }\r\n      setSelectedPronoun(null);\r\n      setSelectedForm(null);\r\n    }\r\n  }, [selectedPronoun, selectedForm, actualPairs, t, language, progress, targetVerbInfinitive]);\r\n\r\n  useEffect(() => {\r\n    if (actualPairs.length > 0 && numCorrectMatches === actualPairs.length && !isRevealed) {\r\n      setFeedback({ message: t('feedback.allPairsMatched', 'All pairs matched! Well done!'), type: 'success' });\r\n    }\r\n  }, [numCorrectMatches, actualPairs.length, isRevealed, t]);\r\n\r\n  const showHint = () => {\r\n    if (isRevealed || numCorrectMatches === actualPairs.length) return;\r\n    const unMatched = actualPairs.filter(p => !matchedItems[p.pronoun] || !matchedItems[p.form]);\r\n    if (unMatched.length > 0) {\r\n      const hintPair = unMatched[0];\r\n      setFeedback({ \r\n        message: t('feedback.hintMatchVerb', `Hint: Try matching \"${getLatinizedText(hintPair.pronoun, language)}\" with \"${getLatinizedText(hintPair.form, language)}\".`, {item1: getLatinizedText(hintPair.pronoun, language), item2: getLatinizedText(hintPair.form, language)}), \r\n        type: 'hint' \r\n      });\r\n    } else {\r\n      setFeedback({ message: t('feedback.noMoreHints', \"No more hints available.\"), type: 'info' });\r\n    }\r\n  };\r\n  \r\n  const revealAllAnswers = () => {\r\n    setIsRevealed(true);\r\n    const allMatched = {};\r\n    actualPairs.forEach(p => {\r\n      allMatched[p.pronoun] = true;\r\n      allMatched[p.form] = true;\r\n      const itemId = `verbmatch_${targetVerbInfinitive}_${p.pronoun}_${p.form}`;\r\n      progress.scheduleReview(itemId, 'grammar-match-verb', false);\r\n    });\r\n    setMatchedItems(allMatched);\r\n    setNumCorrectMatches(actualPairs.length);\r\n    setFeedback({ message: t('feedback.allPairsRevealed', \"All pairs revealed.\"), type: 'info' });\r\n  };\r\n\r\n  if (isLoading) return <p>{t('loading.matchVerbExercise', 'Loading match verbs exercise...')}</p>;\r\n  if (error) return <FeedbackDisplay message={error} type=\"error\" />;\r\n  if (actualPairs.length === 0 && !isLoading) return <FeedbackDisplay message={t('exercises.noData', \"No pairs available for this exercise.\")} type=\"info\" />;\r\n\r\n  const columnStyle = { display: 'flex', flexDirection: 'column', gap: '8px', alignItems: 'stretch', margin: '0 15px', flex: 1 };\r\n  const itemStyleBuilder = (value, type) => {\r\n    let isSelected = (type === 'pronoun' && selectedPronoun?.value === value) || (type === 'form' && selectedForm?.value === value);\r\n    return { \r\n        padding: '12px 18px', \r\n        border: `2px solid ${isSelected ? '#007bff' : (matchedItems[value] ? '#28a745' : '#ccc')}`, \r\n        borderRadius: '8px', \r\n        cursor: (matchedItems[value] || isRevealed) ? 'default' : 'pointer', \r\n        textAlign: 'center',\r\n        backgroundColor: matchedItems[value] ? '#d4edda' : (isSelected ? '#cfe2ff' : '#f8f9fa'),\r\n        transition: 'background-color 0.2s, border-color 0.2s',\r\n        opacity: (isRevealed && !matchedItems[value]) ? 0.5 : 1,\r\n    };\r\n  };\r\n  const latinizedVerbInfinitive = getLatinizedText(targetVerbInfinitive, language);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}>\r\n      <h3>{t('titles.matchVerbPronoun', 'Match Pronouns with Verb Forms')}</h3>\r\n      <p style={{fontSize: '1.2em', fontWeight: 'bold', ...(isLatinized && targetVerbInfinitive !== latinizedVerbInfinitive && {fontStyle: 'italic'})}}>\r\n        {t('labels.verb', 'Verb')}: {latinizedVerbInfinitive || targetVerbInfinitive}\r\n      </p>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start', margin: '20px 0' }}>\r\n        <div style={columnStyle}>\r\n          <h4>{t('labels.pronouns', 'Pronouns')}</h4>\r\n          {pronounsColumn.map(pronoun => {\r\n            const ref = React.createRef();\r\n            return (\r\n            <button \r\n              key={`pronoun-${pronoun}`} \r\n              ref={ref}\r\n              style={itemStyleBuilder(pronoun, 'pronoun')}\r\n              onClick={() => handleItemClick(pronoun, 'pronoun', ref.current)}\r\n              disabled={matchedItems[pronoun] || isRevealed}\r\n            >\r\n              {getLatinizedText(pronoun, language)}\r\n            </button>\r\n          )})}\r\n        </div>\r\n        <div style={columnStyle}>\r\n          <h4>{t('labels.verbForms', 'Verb Forms')}</h4>\r\n          {formsColumn.map(form => {\r\n            const ref = React.createRef();\r\n            return (\r\n            <button \r\n              key={`form-${form}`} \r\n              ref={ref}\r\n              style={itemStyleBuilder(form, 'form')}\r\n              onClick={() => handleItemClick(form, 'form', ref.current)}\r\n              disabled={matchedItems[form] || isRevealed}\r\n            >\r\n              {getLatinizedText(form, language)}\r\n            </button>\r\n          )})}\r\n        </div>\r\n      </div>\r\n      <FeedbackDisplay message={feedback.message} type={feedback.type} language={language} />\r\n      <ExerciseControls\r\n        onShowHint={!isRevealed && numCorrectMatches < actualPairs.length ? showHint : undefined}\r\n        onRevealAnswer={!isRevealed && numCorrectMatches < actualPairs.length ? revealAllAnswers : undefined}\r\n        onNextExercise={setupNewExercise}\r\n        config={{\r\n          showCheck: false, \r\n          showHint: !isRevealed && numCorrectMatches < actualPairs.length,\r\n          showReveal: !isRevealed && numCorrectMatches < actualPairs.length,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchVerbsPronounsExercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}