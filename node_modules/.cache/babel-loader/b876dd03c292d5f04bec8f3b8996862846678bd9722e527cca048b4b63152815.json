{"ast":null,"code":"import React from'react';import ExerciseControls from'../../ExerciseControls';import FeedbackDisplay from'../../FeedbackDisplay';import{useI18n}from'../../../../i18n/I18nContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MonologueExercise=_ref=>{let{language,days,exerciseKey}=_ref;const{t}=useI18n();// In a real implementation, this would involve:\n// - Potentially fetching a prompt or topic.\n// - Speech recognition for recording the monologue.\n// - Displaying the transcript.\n// - Maybe some basic feedback on duration or fluency (advanced).\nconst handleNewExercise=()=>{// For now, just a conceptual reset. A real version might fetch a new prompt.\nconsole.log(\"New Monologue exercise requested.\");// In a stateful component, you'd reset relevant states here.\n};const showHint=()=>{// Example hint\nalert(t('feedback.hintMonologueGeneric','Organize your thoughts before speaking. Use varied vocabulary and try to speak fluently.'));};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',border:'1px solid #ddd',borderRadius:'5px',backgroundColor:'#f9f9f9',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h3\",{children:t('titles.monologuePractice','Monologue Practice')}),/*#__PURE__*/_jsx(\"p\",{children:t('exercises.monologueNotImplemented','This monologue exercise is a placeholder.')}),/*#__PURE__*/_jsx(\"p\",{children:t('exercises.imagineMonologue','Imagine you can record a monologue here on a given topic or freely.')}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"button\",{style:{fontSize:'2rem',padding:'10px',cursor:'not-allowed'},disabled:true,children:\"\\uD83C\\uDFA4\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'10px',fontStyle:'italic'},children:t('labels.recordingControlsHere','(Recording controls and transcript would appear here)')})]}),/*#__PURE__*/_jsx(FeedbackDisplay,{message:\"\",type:\"info\"}),/*#__PURE__*/_jsx(ExerciseControls,{onNextExercise:handleNewExercise// Placeholder for fetching new prompt/resetting\n,onShowHint:showHint,config:{showCheck:false,showReveal:false,showHint:true,showNext:true}})]});};export default MonologueExercise;","map":{"version":3,"names":["React","ExerciseControls","FeedbackDisplay","useI18n","jsx","_jsx","jsxs","_jsxs","MonologueExercise","_ref","language","days","exerciseKey","t","handleNewExercise","console","log","showHint","alert","style","padding","border","borderRadius","backgroundColor","textAlign","children","margin","fontSize","cursor","disabled","marginTop","fontStyle","message","type","onNextExercise","onShowHint","config","showCheck","showReveal","showNext"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/exercises/speaking/MonologueExercise.js"],"sourcesContent":["import React from 'react';\r\nimport ExerciseControls from '../../ExerciseControls';\r\nimport FeedbackDisplay from '../../FeedbackDisplay';\r\nimport { useI18n } from '../../../../i18n/I18nContext';\r\n\r\nconst MonologueExercise = ({ language, days, exerciseKey }) => {\r\n  const { t } = useI18n();\r\n\r\n  // In a real implementation, this would involve:\r\n  // - Potentially fetching a prompt or topic.\r\n  // - Speech recognition for recording the monologue.\r\n  // - Displaying the transcript.\r\n  // - Maybe some basic feedback on duration or fluency (advanced).\r\n\r\n  const handleNewExercise = () => {\r\n    // For now, just a conceptual reset. A real version might fetch a new prompt.\r\n    console.log(\"New Monologue exercise requested.\");\r\n    // In a stateful component, you'd reset relevant states here.\r\n  };\r\n  \r\n  const showHint = () => {\r\n     // Example hint\r\n     alert(t('feedback.hintMonologueGeneric', 'Organize your thoughts before speaking. Use varied vocabulary and try to speak fluently.'));\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #ddd', borderRadius: '5px', backgroundColor: '#f9f9f9', textAlign: 'center' }}>\r\n      <h3>{t('titles.monologuePractice', 'Monologue Practice')}</h3>\r\n      <p>{t('exercises.monologueNotImplemented', 'This monologue exercise is a placeholder.')}</p>\r\n      <p>{t('exercises.imagineMonologue', 'Imagine you can record a monologue here on a given topic or freely.')}</p>\r\n      \r\n      {/* Placeholder for recording button and transcript display */}\r\n      <div style={{ margin: '20px 0' }}>\r\n        <button style={{fontSize: '2rem', padding: '10px', cursor: 'not-allowed'}} disabled>ðŸŽ¤</button>\r\n        <p style={{marginTop: '10px', fontStyle: 'italic'}}>{t('labels.recordingControlsHere', '(Recording controls and transcript would appear here)')}</p>\r\n      </div>\r\n\r\n      <FeedbackDisplay message=\"\" type=\"info\" /> \r\n      <ExerciseControls\r\n        onNextExercise={handleNewExercise} // Placeholder for fetching new prompt/resetting\r\n        onShowHint={showHint}\r\n        config={{\r\n          showCheck: false,\r\n          showReveal: false,\r\n          showHint: true,\r\n          showNext: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonologueExercise;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,gBAAgB,KAAM,wBAAwB,CACrD,MAAO,CAAAC,eAAe,KAAM,uBAAuB,CACnD,OAASC,OAAO,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,IAAI,CAAEC,WAAY,CAAC,CAAAH,IAAA,CACxD,KAAM,CAAEI,CAAE,CAAC,CAAGV,OAAO,CAAC,CAAC,CAEvB;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAW,iBAAiB,CAAGA,CAAA,GAAM,CAC9B;AACAC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC,CAChD;AACF,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACpB;AACAC,KAAK,CAACL,CAAC,CAAC,+BAA+B,CAAE,0FAA0F,CAAC,CAAC,CACxI,CAAC,CAGD,mBACEN,KAAA,QAAKY,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAK,CAAEC,eAAe,CAAE,SAAS,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAC,QAAA,eAC9HpB,IAAA,OAAAoB,QAAA,CAAKZ,CAAC,CAAC,0BAA0B,CAAE,oBAAoB,CAAC,CAAK,CAAC,cAC9DR,IAAA,MAAAoB,QAAA,CAAIZ,CAAC,CAAC,mCAAmC,CAAE,2CAA2C,CAAC,CAAI,CAAC,cAC5FR,IAAA,MAAAoB,QAAA,CAAIZ,CAAC,CAAC,4BAA4B,CAAE,qEAAqE,CAAC,CAAI,CAAC,cAG/GN,KAAA,QAAKY,KAAK,CAAE,CAAEO,MAAM,CAAE,QAAS,CAAE,CAAAD,QAAA,eAC/BpB,IAAA,WAAQc,KAAK,CAAE,CAACQ,QAAQ,CAAE,MAAM,CAAEP,OAAO,CAAE,MAAM,CAAEQ,MAAM,CAAE,aAAa,CAAE,CAACC,QAAQ,MAAAJ,QAAA,CAAC,cAAE,CAAQ,CAAC,cAC/FpB,IAAA,MAAGc,KAAK,CAAE,CAACW,SAAS,CAAE,MAAM,CAAEC,SAAS,CAAE,QAAQ,CAAE,CAAAN,QAAA,CAAEZ,CAAC,CAAC,8BAA8B,CAAE,uDAAuD,CAAC,CAAI,CAAC,EACjJ,CAAC,cAENR,IAAA,CAACH,eAAe,EAAC8B,OAAO,CAAC,EAAE,CAACC,IAAI,CAAC,MAAM,CAAE,CAAC,cAC1C5B,IAAA,CAACJ,gBAAgB,EACfiC,cAAc,CAAEpB,iBAAmB;AAAA,CACnCqB,UAAU,CAAElB,QAAS,CACrBmB,MAAM,CAAE,CACNC,SAAS,CAAE,KAAK,CAChBC,UAAU,CAAE,KAAK,CACjBrB,QAAQ,CAAE,IAAI,CACdsB,QAAQ,CAAE,IACZ,CAAE,CACH,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}