{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/i18n/I18nContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { translations } from './translations'; // Assuming translations.js is in the same directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst I18nContext = /*#__PURE__*/createContext();\nexport function useI18n() {\n  _s();\n  return useContext(I18nContext);\n}\n_s(useI18n, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function I18nProvider({\n  children\n}) {\n  _s2();\n  const [language, setLanguage] = useState(localStorage.getItem('cosyLanguage') || 'COSYenglish');\n  const [currentTranslations, setCurrentTranslations] = useState(translations[language] || translations.COSYenglish);\n  useEffect(() => {\n    localStorage.setItem('cosyLanguage', language);\n    setCurrentTranslations(translations[language] || translations.COSYenglish);\n    // Optionally, update document language attribute\n    document.documentElement.lang = language.substring(4).toLowerCase(); // e.g., \"en\" from \"COSYenglish\"\n  }, [language]);\n  const changeLanguage = useCallback(langKey => {\n    if (translations[langKey]) {\n      setLanguage(langKey);\n    } else {\n      console.warn(`Language key \"${langKey}\" not found in translations. Defaulting to English.`);\n      setLanguage('COSYenglish');\n    }\n  }, []);\n  const t = useCallback((key, options = {}) => {\n    let translation = currentTranslations[key] || translations.COSYenglish[key] || key;\n\n    // Basic placeholder replacement, e.g., t('levelUpToast', { level: 5 })\n    if (options && typeof translation === 'string') {\n      for (const placeholder in options) {\n        if (!placeholder) continue; // Ignore empty placeholder\n        const value = options[placeholder];\n        if (value === undefined || value === null) continue; // Ignore undefined/null values\n        // Escape special regex characters in placeholder\n        const escapedPlaceholder = placeholder.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        translation = translation.replace(new RegExp(`{${escapedPlaceholder}}`, 'g'), value);\n      }\n    }\n    return translation;\n  }, [currentTranslations]);\n\n  // Function to get translations for a specific language, primarily for dayNames\n  const getTranslationsForLang = useCallback((langKey, translationKey) => {\n    const targetLangTranslations = translations[langKey] || translations.COSYenglish;\n    return targetLangTranslations[translationKey] || {};\n  }, []);\n  const value = {\n    language,\n    changeLanguage,\n    t,\n    // Translation function\n    allTranslations: translations,\n    // Expose all translations if needed\n    getTranslationsForLang // Expose function to get dayNames for a specific language\n  };\n  return /*#__PURE__*/_jsxDEV(I18nContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s2(I18nProvider, \"mA7N4FwUHxntGmggiMjRXiR73dU=\");\n_c = I18nProvider;\nvar _c;\n$RefreshReg$(_c, \"I18nProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","translations","jsxDEV","_jsxDEV","I18nContext","useI18n","_s","I18nProvider","children","_s2","language","setLanguage","localStorage","getItem","currentTranslations","setCurrentTranslations","COSYenglish","setItem","document","documentElement","lang","substring","toLowerCase","changeLanguage","langKey","console","warn","t","key","options","translation","placeholder","value","undefined","escapedPlaceholder","replace","RegExp","getTranslationsForLang","translationKey","targetLangTranslations","allTranslations","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/i18n/I18nContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\nimport { translations } from './translations'; // Assuming translations.js is in the same directory\r\n\r\nconst I18nContext = createContext();\r\n\r\nexport function useI18n() {\r\n    return useContext(I18nContext);\r\n}\r\n\r\nexport function I18nProvider({ children }) {\r\n    const [language, setLanguage] = useState(localStorage.getItem('cosyLanguage') || 'COSYenglish');\r\n    const [currentTranslations, setCurrentTranslations] = useState(translations[language] || translations.COSYenglish);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cosyLanguage', language);\r\n        setCurrentTranslations(translations[language] || translations.COSYenglish);\r\n        // Optionally, update document language attribute\r\n        document.documentElement.lang = language.substring(4).toLowerCase(); // e.g., \"en\" from \"COSYenglish\"\r\n    }, [language]);\r\n\r\n    const changeLanguage = useCallback((langKey) => {\r\n        if (translations[langKey]) {\r\n            setLanguage(langKey);\r\n        } else {\r\n            console.warn(`Language key \"${langKey}\" not found in translations. Defaulting to English.`);\r\n            setLanguage('COSYenglish');\r\n        }\r\n    }, []);\r\n\r\n    const t = useCallback((key, options = {}) => {\r\n        let translation = currentTranslations[key] || translations.COSYenglish[key] || key;\r\n        \r\n        // Basic placeholder replacement, e.g., t('levelUpToast', { level: 5 })\r\n        if (options && typeof translation === 'string') {\r\n            for (const placeholder in options) {\r\n                if (!placeholder) continue; // Ignore empty placeholder\r\n                const value = options[placeholder];\r\n                if (value === undefined || value === null) continue; // Ignore undefined/null values\r\n                // Escape special regex characters in placeholder\r\n                const escapedPlaceholder = placeholder.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n                translation = translation.replace(new RegExp(`{${escapedPlaceholder}}`, 'g'), value);\r\n            }\r\n        }\r\n        return translation;\r\n    }, [currentTranslations]);\r\n\r\n    // Function to get translations for a specific language, primarily for dayNames\r\n    const getTranslationsForLang = useCallback((langKey, translationKey) => {\r\n        const targetLangTranslations = translations[langKey] || translations.COSYenglish;\r\n        return targetLangTranslations[translationKey] || {};\r\n    }, []);\r\n\r\n\r\n    const value = {\r\n        language,\r\n        changeLanguage,\r\n        t, // Translation function\r\n        allTranslations: translations, // Expose all translations if needed\r\n        getTranslationsForLang // Expose function to get dayNames for a specific language\r\n    };\r\n\r\n    return (\r\n        <I18nContext.Provider value={value}>\r\n            {children}\r\n        </I18nContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}