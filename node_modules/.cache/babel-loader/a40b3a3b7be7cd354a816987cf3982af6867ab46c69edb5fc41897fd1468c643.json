{"ast":null,"code":"import React from'react';import{useI18n}from'../../i18n/I18nContext';// Adjust path as needed\nimport'./LanguageSelector.css';// For styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LanguageSelector=()=>{const{language,changeLanguage,allTranslations}=useI18n();const availableLanguages=Object.keys(allTranslations).map(langKey=>{var _allTranslations$lang,_allTranslations$lang2;// Extract a more user-friendly name if possible, otherwise use the key\nlet name=((_allTranslations$lang=allTranslations[langKey])===null||_allTranslations$lang===void 0?void 0:_allTranslations$lang.languageNameInEnglish)||langKey.replace('COSY','').replace('ТАКОЙ','');// Basic cleanup\nif(langKey==='ΚΟΖΥελληνικά')name='Greek';// Specific override if needed\nelse if(langKey==='ТАКОЙрусский')name='Russian';else if(langKey==='ԾՈՍՅհայկական')name='Armenian';// Attempt to get native name if available in translations\nconst nativeName=(_allTranslations$lang2=allTranslations[langKey])===null||_allTranslations$lang2===void 0?void 0:_allTranslations$lang2.languageNameNative;if(nativeName){name=\"\".concat(nativeName,\" (\").concat(name,\")\");}return{key:langKey,name:name};});const handleChange=event=>{changeLanguage(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"language-selector-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"language-select\",className:\"language-select-label\",children:\"\\uD83C\\uDF0E: \"}),/*#__PURE__*/_jsx(\"select\",{id:\"language-select\",value:language,onChange:handleChange,className:\"language-select-dropdown\",children:availableLanguages.map(lang=>/*#__PURE__*/_jsx(\"option\",{value:lang.key,children:lang.name},lang.key))})]});};export default LanguageSelector;","map":{"version":3,"names":["React","useI18n","jsx","_jsx","jsxs","_jsxs","LanguageSelector","language","changeLanguage","allTranslations","availableLanguages","Object","keys","map","langKey","_allTranslations$lang","_allTranslations$lang2","name","languageNameInEnglish","replace","nativeName","languageNameNative","concat","key","handleChange","event","target","value","className","children","htmlFor","id","onChange","lang"],"sources":["/workspaces/COSYlanguagesproject/src/components/LanguageSelector/LanguageSelector.js"],"sourcesContent":["import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext'; // Adjust path as needed\r\nimport './LanguageSelector.css'; // For styling\r\n\r\nconst LanguageSelector = () => {\r\n    const { language, changeLanguage, allTranslations } = useI18n();\r\n\r\n    const availableLanguages = Object.keys(allTranslations).map(langKey => {\r\n        // Extract a more user-friendly name if possible, otherwise use the key\r\n        let name = allTranslations[langKey]?.languageNameInEnglish || \r\n                   langKey.replace('COSY', '').replace('ТАКОЙ', ''); // Basic cleanup\r\n        if (langKey === 'ΚΟΖΥελληνικά') name = 'Greek'; // Specific override if needed\r\n        else if (langKey === 'ТАКОЙрусский') name = 'Russian';\r\n        else if (langKey === 'ԾՈՍՅհայկական') name = 'Armenian';\r\n        \r\n        // Attempt to get native name if available in translations\r\n        const nativeName = allTranslations[langKey]?.languageNameNative;\r\n        if (nativeName) {\r\n            name = `${nativeName} (${name})`;\r\n        }\r\n\r\n        return { key: langKey, name: name };\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        changeLanguage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"language-selector-container\">\r\n            <label htmlFor=\"language-select\" className=\"language-select-label\">\r\n                🌎: {/* Simple emoji label, could be translated too */}\r\n            </label>\r\n            <select id=\"language-select\" value={language} onChange={handleChange} className=\"language-select-dropdown\">\r\n                {availableLanguages.map(lang => (\r\n                    <option key={lang.key} value={lang.key}>\r\n                        {lang.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LanguageSelector;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,wBAAwB,CAAE;AAClD,MAAO,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAEC,QAAQ,CAAEC,cAAc,CAAEC,eAAgB,CAAC,CAAGR,OAAO,CAAC,CAAC,CAE/D,KAAM,CAAAS,kBAAkB,CAAGC,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACI,GAAG,CAACC,OAAO,EAAI,KAAAC,qBAAA,CAAAC,sBAAA,CACnE;AACA,GAAI,CAAAC,IAAI,CAAG,EAAAF,qBAAA,CAAAN,eAAe,CAACK,OAAO,CAAC,UAAAC,qBAAA,iBAAxBA,qBAAA,CAA0BG,qBAAqB,GAC/CJ,OAAO,CAACK,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAAE;AAC7D,GAAIL,OAAO,GAAK,cAAc,CAAEG,IAAI,CAAG,OAAO,CAAE;AAAA,IAC3C,IAAIH,OAAO,GAAK,cAAc,CAAEG,IAAI,CAAG,SAAS,CAAC,IACjD,IAAIH,OAAO,GAAK,cAAc,CAAEG,IAAI,CAAG,UAAU,CAEtD;AACA,KAAM,CAAAG,UAAU,EAAAJ,sBAAA,CAAGP,eAAe,CAACK,OAAO,CAAC,UAAAE,sBAAA,iBAAxBA,sBAAA,CAA0BK,kBAAkB,CAC/D,GAAID,UAAU,CAAE,CACZH,IAAI,IAAAK,MAAA,CAAMF,UAAU,OAAAE,MAAA,CAAKL,IAAI,KAAG,CACpC,CAEA,MAAO,CAAEM,GAAG,CAAET,OAAO,CAAEG,IAAI,CAAEA,IAAK,CAAC,CACvC,CAAC,CAAC,CAEF,KAAM,CAAAO,YAAY,CAAIC,KAAK,EAAK,CAC5BjB,cAAc,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACtC,CAAC,CAED,mBACItB,KAAA,QAAKuB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC1B,IAAA,UAAO2B,OAAO,CAAC,iBAAiB,CAACF,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,gBAC3D,CACD,CAAC,cACR1B,IAAA,WAAQ4B,EAAE,CAAC,iBAAiB,CAACJ,KAAK,CAAEpB,QAAS,CAACyB,QAAQ,CAAER,YAAa,CAACI,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACrGnB,kBAAkB,CAACG,GAAG,CAACoB,IAAI,eACxB9B,IAAA,WAAuBwB,KAAK,CAAEM,IAAI,CAACV,GAAI,CAAAM,QAAA,CAClCI,IAAI,CAAChB,IAAI,EADDgB,IAAI,CAACV,GAEV,CACX,CAAC,CACE,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}