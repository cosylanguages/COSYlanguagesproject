{"ast":null,"code":"var _jsxFileName = \"/workspaces/COSYlanguagesproject/src/components/Freestyle/PracticeCategoryNav.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useI18n } from '../../i18n/I18nContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracticeCategoryNav = ({\n  activeCategory,\n  onCategorySelect\n}) => {\n  _s();\n  const {\n    t,\n    allTranslations,\n    language\n  } = useI18n();\n\n  // Get main categories from the translations for the current language\n  // The mainCategory object should have keys like 'vocabulary', 'grammar', etc.\n  // and values like 'ðŸ”  Vocabulary', 'ðŸ§© Grammar', etc.\n  const currentLanguageTranslations = allTranslations[language] || allTranslations.COSYenglish;\n  // Ensure mainCategory exists and is an object, default to COSYenglish's mainCategory if not found or if it's not an object\n  let mainCategoriesSource = currentLanguageTranslations.mainCategory;\n  if (typeof mainCategoriesSource !== 'object' || mainCategoriesSource === null) {\n    mainCategoriesSource = allTranslations.COSYenglish.mainCategory || {};\n  }\n  const mainCategories = mainCategoriesSource;\n  const practiceCategories = Object.keys(mainCategories).map(key => ({\n    id: key,\n    // e.g., 'vocabulary'\n    // The label is directly from the mainCategory object's value, which is already translated.\n    // If mainCategory values were keys (e.g., 'mainCategory.vocabulary'), we'd use t() here.\n    label: mainCategories[key]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 0',\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      gap: '10px'\n    },\n    children: practiceCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onCategorySelect(category.id),\n      style: {\n        padding: '10px 15px',\n        fontSize: '1rem',\n        cursor: 'pointer',\n        backgroundColor: activeCategory === category.id ? '#007bff' : '#f0f0f0',\n        color: activeCategory === category.id ? 'white' : 'black',\n        border: '1px solid #ccc',\n        borderRadius: '5px'\n      },\n      \"aria-pressed\": activeCategory === category.id,\n      children: category.label\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeCategoryNav, \"+3AUlsIBR20SEz/bx/6baiHwzPI=\", false, function () {\n  return [useI18n];\n});\n_c = PracticeCategoryNav;\nexport default PracticeCategoryNav;\nvar _c;\n$RefreshReg$(_c, \"PracticeCategoryNav\");","map":{"version":3,"names":["React","useI18n","jsxDEV","_jsxDEV","PracticeCategoryNav","activeCategory","onCategorySelect","_s","t","allTranslations","language","currentLanguageTranslations","COSYenglish","mainCategoriesSource","mainCategory","mainCategories","practiceCategories","Object","keys","map","key","id","label","style","margin","display","justifyContent","flexWrap","gap","children","category","onClick","padding","fontSize","cursor","backgroundColor","color","border","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/COSYlanguagesproject/src/components/Freestyle/PracticeCategoryNav.js"],"sourcesContent":["import React from 'react';\r\nimport { useI18n } from '../../i18n/I18nContext';\r\n\r\nconst PracticeCategoryNav = ({ activeCategory, onCategorySelect }) => {\r\n  const { t, allTranslations, language } = useI18n();\r\n\r\n  // Get main categories from the translations for the current language\r\n  // The mainCategory object should have keys like 'vocabulary', 'grammar', etc.\r\n  // and values like 'ðŸ”  Vocabulary', 'ðŸ§© Grammar', etc.\r\n  const currentLanguageTranslations = allTranslations[language] || allTranslations.COSYenglish;\r\n  // Ensure mainCategory exists and is an object, default to COSYenglish's mainCategory if not found or if it's not an object\r\n  let mainCategoriesSource = currentLanguageTranslations.mainCategory;\r\n  if (typeof mainCategoriesSource !== 'object' || mainCategoriesSource === null) {\r\n    mainCategoriesSource = allTranslations.COSYenglish.mainCategory || {};\r\n  }\r\n  \r\n  const mainCategories = mainCategoriesSource;\r\n\r\n  const practiceCategories = Object.keys(mainCategories).map(key => ({\r\n    id: key, // e.g., 'vocabulary'\r\n    // The label is directly from the mainCategory object's value, which is already translated.\r\n    // If mainCategory values were keys (e.g., 'mainCategory.vocabulary'), we'd use t() here.\r\n    label: mainCategories[key] \r\n  }));\r\n\r\n  return (\r\n    <div style={{ margin: '20px 0', display: 'flex', justifyContent: 'center', flexWrap: 'wrap', gap: '10px' }}>\r\n      {practiceCategories.map((category) => (\r\n        <button\r\n          key={category.id}\r\n          onClick={() => onCategorySelect(category.id)}\r\n          style={{\r\n            padding: '10px 15px',\r\n            fontSize: '1rem',\r\n            cursor: 'pointer',\r\n            backgroundColor: activeCategory === category.id ? '#007bff' : '#f0f0f0',\r\n            color: activeCategory === category.id ? 'white' : 'black',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '5px',\r\n          }}\r\n          aria-pressed={activeCategory === category.id}\r\n        >\r\n          {category.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticeCategoryNav;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM;IAAEC,CAAC;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAElD;EACA;EACA;EACA,MAAMU,2BAA2B,GAAGF,eAAe,CAACC,QAAQ,CAAC,IAAID,eAAe,CAACG,WAAW;EAC5F;EACA,IAAIC,oBAAoB,GAAGF,2BAA2B,CAACG,YAAY;EACnE,IAAI,OAAOD,oBAAoB,KAAK,QAAQ,IAAIA,oBAAoB,KAAK,IAAI,EAAE;IAC7EA,oBAAoB,GAAGJ,eAAe,CAACG,WAAW,CAACE,YAAY,IAAI,CAAC,CAAC;EACvE;EAEA,MAAMC,cAAc,GAAGF,oBAAoB;EAE3C,MAAMG,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACH,cAAc,CAAC,CAACI,GAAG,CAACC,GAAG,KAAK;IACjEC,EAAE,EAAED,GAAG;IAAE;IACT;IACA;IACAE,KAAK,EAAEP,cAAc,CAACK,GAAG;EAC3B,CAAC,CAAC,CAAC;EAEH,oBACEjB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,EACxGb,kBAAkB,CAACG,GAAG,CAAEW,QAAQ,iBAC/B3B,OAAA;MAEE4B,OAAO,EAAEA,CAAA,KAAMzB,gBAAgB,CAACwB,QAAQ,CAACT,EAAE,CAAE;MAC7CE,KAAK,EAAE;QACLS,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,SAAS;QACjBC,eAAe,EAAE9B,cAAc,KAAKyB,QAAQ,CAACT,EAAE,GAAG,SAAS,GAAG,SAAS;QACvEe,KAAK,EAAE/B,cAAc,KAAKyB,QAAQ,CAACT,EAAE,GAAG,OAAO,GAAG,OAAO;QACzDgB,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE;MAChB,CAAE;MACF,gBAAcjC,cAAc,KAAKyB,QAAQ,CAACT,EAAG;MAAAQ,QAAA,EAE5CC,QAAQ,CAACR;IAAK,GAbVQ,QAAQ,CAACT,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcV,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CA5CIH,mBAAmB;EAAA,QACkBH,OAAO;AAAA;AAAA0C,EAAA,GAD5CvC,mBAAmB;AA8CzB,eAAeA,mBAAmB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}