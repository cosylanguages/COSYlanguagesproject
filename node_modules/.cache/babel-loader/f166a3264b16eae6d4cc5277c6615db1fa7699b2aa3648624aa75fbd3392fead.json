{"ast":null,"code":"import React,{useState}from'react';import{useAuth}from'../../AuthContext';// Adjusted path\nimport{useNavigate}from'react-router-dom';import'./Login.css';// We'll create this for basic styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[pin,setPin]=useState('');const{login,loadingAuth,authError}=useAuth();const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(!pin.trim()){// setErrorState locally if preferred, or rely on authError from context\nalert('PIN cannot be empty.');return;}const success=await login(pin);if(success){navigate('/');// Redirect to home/dashboard after successful login\n}// authError from context will display API errors\n};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Teacher Login\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pin\",children:\"PIN:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"pin\",value:pin,onChange:e=>setPin(e.target.value),disabled:loadingAuth,autoFocus:true})]}),authError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:authError}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",disabled:loadingAuth,children:loadingAuth?'Logging in...':'Login'})]})});};export default Login;","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","pin","setPin","login","loadingAuth","authError","navigate","handleSubmit","e","preventDefault","trim","alert","success","className","children","onSubmit","htmlFor","type","id","value","onChange","target","disabled","autoFocus"],"sources":["/workspaces/COSYlanguagesproject/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../../AuthContext'; // Adjusted path\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css'; // We'll create this for basic styling\r\n\r\nconst Login = () => {\r\n    const [pin, setPin] = useState('');\r\n    const { login, loadingAuth, authError } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!pin.trim()) {\r\n            // setErrorState locally if preferred, or rely on authError from context\r\n            alert('PIN cannot be empty.'); \r\n            return;\r\n        }\r\n        const success = await login(pin);\r\n        if (success) {\r\n            navigate('/'); // Redirect to home/dashboard after successful login\r\n        }\r\n        // authError from context will display API errors\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleSubmit} className=\"login-form\">\r\n                <h2>Teacher Login</h2>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"pin\">PIN:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"pin\"\r\n                        value={pin}\r\n                        onChange={(e) => setPin(e.target.value)}\r\n                        disabled={loadingAuth}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                {authError && <p className=\"error-message\">{authError}</p>}\r\n                <button type=\"submit\" className=\"login-button\" disabled={loadingAuth}>\r\n                    {loadingAuth ? 'Logging in...' : 'Login'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,OAAO,KAAQ,mBAAmB,CAAE;AAC7C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,aAAa,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,GAAG,CAAEC,MAAM,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAAEU,KAAK,CAAEC,WAAW,CAAEC,SAAU,CAAC,CAAGX,OAAO,CAAC,CAAC,CACnD,KAAM,CAAAY,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAY,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACR,GAAG,CAACS,IAAI,CAAC,CAAC,CAAE,CACb;AACAC,KAAK,CAAC,sBAAsB,CAAC,CAC7B,OACJ,CACA,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAT,KAAK,CAACF,GAAG,CAAC,CAChC,GAAIW,OAAO,CAAE,CACTN,QAAQ,CAAC,GAAG,CAAC,CAAE;AACnB,CACA;AACJ,CAAC,CAED,mBACIT,IAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5Bf,KAAA,SAAMgB,QAAQ,CAAER,YAAa,CAACM,SAAS,CAAC,YAAY,CAAAC,QAAA,eAChDjB,IAAA,OAAAiB,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBf,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBjB,IAAA,UAAOmB,OAAO,CAAC,KAAK,CAAAF,QAAA,CAAC,MAAI,CAAO,CAAC,cACjCjB,IAAA,UACIoB,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,KAAK,CACRC,KAAK,CAAElB,GAAI,CACXmB,QAAQ,CAAGZ,CAAC,EAAKN,MAAM,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CACxCG,QAAQ,CAAElB,WAAY,CACtBmB,SAAS,MACZ,CAAC,EACD,CAAC,CACLlB,SAAS,eAAIR,IAAA,MAAGgB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAET,SAAS,CAAI,CAAC,cAC1DR,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAACJ,SAAS,CAAC,cAAc,CAACS,QAAQ,CAAElB,WAAY,CAAAU,QAAA,CAChEV,WAAW,CAAG,eAAe,CAAG,OAAO,CACpC,CAAC,EACP,CAAC,CACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAAJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}