{"ast":null,"code":"// frontend/src/utils/transliteration.js\n\n// Function to latinize Russian text\nfunction latinizeRussian(text) {\n  const russianToLatinMap = {\n    'А': 'A',\n    'а': 'a',\n    'Б': 'B',\n    'б': 'b',\n    'В': 'V',\n    'в': 'v',\n    'Г': 'G',\n    'г': 'g',\n    'Д': 'D',\n    'д': 'd',\n    'Е': 'E',\n    'е': 'e',\n    'Ё': 'YO',\n    'ё': 'yo',\n    'Ж': 'ZH',\n    'ж': 'zh',\n    'З': 'Z',\n    'з': 'z',\n    'И': 'I',\n    'и': 'i',\n    'Й': 'Y',\n    'й': 'y',\n    'К': 'K',\n    'к': 'k',\n    'Л': 'L',\n    'л': 'l',\n    'М': 'M',\n    'м': 'm',\n    'Н': 'N',\n    'н': 'n',\n    'О': 'O',\n    'о': 'o',\n    'П': 'P',\n    'п': 'p',\n    'Р': 'R',\n    'р': 'r',\n    'С': 'S',\n    'с': 's',\n    'Т': 'T',\n    'т': 't',\n    'У': 'U',\n    'у': 'u',\n    'Ф': 'F',\n    'ф': 'f',\n    'Х': 'KH',\n    'х': 'kh',\n    'Ц': 'TS',\n    'ц': 'ts',\n    'Ч': 'CH',\n    'ч': 'ch',\n    'Ш': 'SH',\n    'ш': 'sh',\n    'Щ': 'SHCH',\n    'щ': 'shch',\n    'Ъ': '',\n    'ъ': '',\n    // Hard sign often omitted or handled by context in some systems\n    'Ы': 'Y',\n    'ы': 'y',\n    'Ь': '',\n    'ь': '',\n    // Soft sign often omitted or handled by context\n    'Э': 'E',\n    'э': 'e',\n    'Ю': 'YU',\n    'ю': 'yu',\n    'Я': 'YA',\n    'я': 'ya'\n  };\n  let latinizedText = '';\n  for (let i = 0; i < text.length; i++) {\n    const char = text[i];\n    latinizedText += russianToLatinMap[char] || char;\n  }\n  return latinizedText;\n}\n\n// Function to latinize Armenian text\nfunction latinizeArmenian(text) {\n  const simplerArmenianMap = {\n    'Ա': 'A',\n    'Բ': 'B',\n    'Գ': 'G',\n    'Դ': 'D',\n    'Ե': 'YE',\n    'Զ': 'Z',\n    'Է': 'E',\n    'Ը': 'E',\n    'Թ': 'T\\'',\n    'Ժ': 'ZH',\n    'Ի': 'I',\n    'Լ': 'L',\n    'Խ': 'KH',\n    'Ծ': 'TS',\n    'Կ': 'K',\n    'Հ': 'H',\n    'Ձ': 'DZ',\n    'Ղ': 'GH',\n    'Ճ': 'CH',\n    'Մ': 'M',\n    'Յ': 'Y',\n    'Ն': 'N',\n    'Շ': 'SH',\n    'Ո': 'VO',\n    'Չ': 'CH\\'',\n    'Պ': 'P',\n    'Ջ': 'J',\n    'Ռ': 'R',\n    'Ս': 'S',\n    'Վ': 'V',\n    'Տ': 'T',\n    'Ր': 'R',\n    'Ց': 'TS\\'',\n    'Ւ': 'V',\n    'Փ': 'P\\'',\n    'Ք': 'K\\'',\n    'Օ': 'O',\n    'Ֆ': 'F',\n    'ա': 'a',\n    'բ': 'b',\n    'գ': 'g',\n    'դ': 'd',\n    'ե': 'ye',\n    'զ': 'z',\n    'է': 'e',\n    'ը': 'e',\n    'թ': 't\\'',\n    'ժ': 'zh',\n    'ի': 'i',\n    'լ': 'l',\n    'խ': 'kh',\n    'ծ': 'ts',\n    'կ': 'k',\n    'հ': 'h',\n    'ձ': 'dz',\n    'ղ': 'gh',\n    'ճ': 'ch',\n    'մ': 'm',\n    'յ': 'y',\n    'ն': 'n',\n    'շ': 'sh',\n    'ո': 'vo',\n    'չ': 'ch\\'',\n    'պ': 'p',\n    'ջ': 'j',\n    'ռ': 'r',\n    'ս': 's',\n    'վ': 'v',\n    'տ': 't',\n    'ր': 'r',\n    'ց': 'ts\\'',\n    'ւ': 'v',\n    'փ': 'p\\'',\n    'ք': 'k\\'',\n    'օ': 'o',\n    'ֆ': 'f',\n    'և': 'ev'\n  };\n  let latinizedText = '';\n  for (let i = 0; i < text.length; i++) {\n    const char = text[i];\n    latinizedText += simplerArmenianMap[char] || char;\n  }\n  return latinizedText;\n}\n\n// Function to latinize Greek text\nfunction latinizeGreek(text) {\n  const greekToLatinMap = {\n    // Uppercase\n    'Α': 'A',\n    'Β': 'V',\n    'Γ': 'G',\n    'Δ': 'D',\n    'Ε': 'E',\n    'Ζ': 'Z',\n    'Η': 'I',\n    'Θ': 'TH',\n    'Ι': 'I',\n    'Κ': 'K',\n    'Λ': 'L',\n    'Μ': 'M',\n    'Ν': 'N',\n    'Ξ': 'X',\n    'Ο': 'O',\n    'Π': 'P',\n    'Ρ': 'R',\n    'Σ': 'S',\n    'Τ': 'T',\n    'Υ': 'Y',\n    'Φ': 'F',\n    'Χ': 'CH',\n    'Ψ': 'PS',\n    'Ω': 'O',\n    // Lowercase\n    'α': 'a',\n    'β': 'v',\n    'γ': 'g',\n    'δ': 'd',\n    'ε': 'e',\n    'ζ': 'z',\n    'η': 'i',\n    'θ': 'th',\n    'ι': 'i',\n    'κ': 'k',\n    'λ': 'l',\n    'μ': 'm',\n    'ν': 'n',\n    'ξ': 'x',\n    'ο': 'o',\n    'π': 'p',\n    'ρ': 'r',\n    'σ': 's',\n    'ς': 's',\n    'τ': 't',\n    'υ': 'y',\n    'φ': 'f',\n    'χ': 'ch',\n    'ψ': 'ps',\n    'ω': 'o',\n    // Accented Uppercase\n    'Ά': 'A',\n    'Έ': 'E',\n    'Ή': 'I',\n    'Ί': 'I',\n    'Ό': 'O',\n    'Ύ': 'Y',\n    'Ώ': 'O',\n    // Accented Lowercase\n    'ά': 'a',\n    'έ': 'e',\n    'ή': 'i',\n    'ί': 'i',\n    'ό': 'o',\n    'ύ': 'y',\n    'ώ': 'o',\n    // Lowercase with diaeresis\n    'ϊ': 'i',\n    'ϋ': 'y',\n    // Accented with diaeresis\n    'ΐ': 'i',\n    'ΰ': 'y',\n    // Digraphs\n    'αι': 'ai',\n    'ει': 'ei',\n    'οι': 'oi',\n    'ου': 'ou',\n    'γγ': 'ng',\n    'γκ': 'gk',\n    'γχ': 'nch',\n    'τσ': 'ts',\n    'μπ': 'b',\n    'ντ': 'd',\n    // Uppercase Digraphs\n    'ΑΙ': 'AI',\n    'ΕΙ': 'EI',\n    'ΟΙ': 'OI',\n    'ΟΥ': 'OU',\n    'ΓΓ': 'NG',\n    'ΓΚ': 'GK',\n    'ΓΧ': 'NCH',\n    'ΤΣ': 'TS',\n    'ΜΠ': 'B',\n    'ΝΤ': 'D',\n    // Accented Digraphs\n    'άι': 'ai',\n    'έι': 'ei',\n    'όι': 'oi',\n    'ού': 'ou'\n  };\n  let latinizedText = \"\";\n  let i = 0;\n  while (i < text.length) {\n    let foundDigraph = false;\n    // Check for 2-character digraphs\n    if (i + 1 < text.length) {\n      const digraph = text.substring(i, i + 2);\n      if (greekToLatinMap.hasOwnProperty(digraph)) {\n        latinizedText += greekToLatinMap[digraph];\n        i += 2;\n        foundDigraph = true;\n      }\n    }\n    if (!foundDigraph) {\n      const char = text[i];\n      if (greekToLatinMap.hasOwnProperty(char)) {\n        latinizedText += greekToLatinMap[char];\n      } else {\n        latinizedText += char; // Append original character if not in map\n      }\n      i += 1;\n    }\n  }\n  return latinizedText;\n}\n\n// Add other specific latinization functions here if needed (e.g., Tatar, Bashkir)\n// For now, they will fall through in getLatinization\n\n/**\r\n * Main latinization dispatcher function.\r\n * @param {string} text - The text to latinize.\r\n * @param {string} languageIdentifier - The COSYlanguages internal code (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The latinized text or original text if no specific latinizer is found.\r\n */\nexport function getLatinization(text, languageIdentifier) {\n  if (!text || typeof text.trim !== 'function' || text.trim() === '') {\n    return text;\n  }\n  const normalizedIdentifier = (languageIdentifier || '').toLowerCase();\n  if (normalizedIdentifier.includes('русский') || normalizedIdentifier.includes('russian') || languageIdentifier === 'ТАКОЙрусский') {\n    return latinizeRussian(text);\n  } else if (normalizedIdentifier.includes('ελληνικά') || normalizedIdentifier.includes('greek') || languageIdentifier === 'ΚΟΖΥελληνικά') {\n    return latinizeGreek(text);\n  } else if (normalizedIdentifier.includes('հայկական') || normalizedIdentifier.includes('armenian') || languageIdentifier === 'ԾՈՍՅհայկական') {\n    return latinizeArmenian(text);\n  }\n  // Add more language conditions here:\n  // else if (languageIdentifier === 'COSYtatarça') { return latinizeTatar(text); }\n  // else if (languageIdentifier === 'COSYbashkort') { return latinizeBashkir(text); }\n\n  return text; // Return original text if no specific latinizer matches\n}","map":{"version":3,"names":["latinizeRussian","text","russianToLatinMap","latinizedText","i","length","char","latinizeArmenian","simplerArmenianMap","latinizeGreek","greekToLatinMap","foundDigraph","digraph","substring","hasOwnProperty","getLatinization","languageIdentifier","trim","normalizedIdentifier","toLowerCase","includes"],"sources":["/workspaces/COSYlanguagesproject/src/utils/transliteration.js"],"sourcesContent":["// frontend/src/utils/transliteration.js\r\n\r\n// Function to latinize Russian text\r\nfunction latinizeRussian(text) {\r\n  const russianToLatinMap = {\r\n    'А': 'A', 'а': 'a', 'Б': 'B', 'б': 'b', 'В': 'V', 'в': 'v',\r\n    'Г': 'G', 'г': 'g', 'Д': 'D', 'д': 'd', 'Е': 'E', 'е': 'e',\r\n    'Ё': 'YO', 'ё': 'yo', 'Ж': 'ZH', 'ж': 'zh', 'З': 'Z', 'з': 'z',\r\n    'И': 'I', 'и': 'i', 'Й': 'Y', 'й': 'y', 'К': 'K', 'к': 'k',\r\n    'Л': 'L', 'л': 'l', 'М': 'M', 'м': 'm', 'Н': 'N', 'н': 'n',\r\n    'О': 'O', 'о': 'o', 'П': 'P', 'п': 'p', 'Р': 'R', 'р': 'r',\r\n    'С': 'S', 'с': 's', 'Т': 'T', 'т': 't', 'У': 'U', 'у': 'u',\r\n    'Ф': 'F', 'ф': 'f', 'Х': 'KH', 'х': 'kh', 'Ц': 'TS', 'ц': 'ts',\r\n    'Ч': 'CH', 'ч': 'ch', 'Ш': 'SH', 'ш': 'sh', 'Щ': 'SHCH', 'щ': 'shch',\r\n    'Ъ': '', 'ъ': '', // Hard sign often omitted or handled by context in some systems\r\n    'Ы': 'Y', 'ы': 'y',\r\n    'Ь': '', 'ь': '', // Soft sign often omitted or handled by context\r\n    'Э': 'E', 'э': 'e', 'Ю': 'YU', 'ю': 'yu', 'Я': 'YA', 'я': 'ya'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += russianToLatinMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Armenian text\r\nfunction latinizeArmenian(text) {\r\n  const simplerArmenianMap = {\r\n    'Ա': 'A', 'Բ': 'B', 'Գ': 'G', 'Դ': 'D', 'Ե': 'YE', 'Զ': 'Z', 'Է': 'E', 'Ը': 'E',\r\n    'Թ': 'T\\'', 'Ժ': 'ZH', 'Ի': 'I', 'Լ': 'L', 'Խ': 'KH', 'Ծ': 'TS', 'Կ': 'K', 'Հ': 'H',\r\n    'Ձ': 'DZ', 'Ղ': 'GH', 'Ճ': 'CH', 'Մ': 'M', 'Յ': 'Y', 'Ն': 'N', 'Շ': 'SH', 'Ո': 'VO',\r\n    'Չ': 'CH\\'', 'Պ': 'P', 'Ջ': 'J', 'Ռ': 'R', 'Ս': 'S', 'Վ': 'V', 'Տ': 'T', 'Ր': 'R',\r\n    'Ց': 'TS\\'', 'Ւ': 'V', 'Փ': 'P\\'', 'Ք': 'K\\'', 'Օ': 'O', 'Ֆ': 'F',\r\n    'ա': 'a', 'բ': 'b', 'գ': 'g', 'դ': 'd', 'ե': 'ye', 'զ': 'z', 'է': 'e', 'ը': 'e',\r\n    'թ': 't\\'', 'ժ': 'zh', 'ի': 'i', 'լ': 'l', 'խ': 'kh', 'ծ': 'ts', 'կ': 'k', 'հ': 'h',\r\n    'ձ': 'dz', 'ղ': 'gh', 'ճ': 'ch', 'մ': 'm', 'յ': 'y', 'ն': 'n', 'շ': 'sh', 'ո': 'vo',\r\n    'չ': 'ch\\'', 'պ': 'p', 'ջ': 'j', 'ռ': 'r', 'ս': 's', 'վ': 'v', 'տ': 't', 'ր': 'r',\r\n    'ց': 'ts\\'', 'ւ': 'v', 'փ': 'p\\'', 'ք': 'k\\'', 'օ': 'o', 'ֆ': 'f',\r\n    'և': 'ev'\r\n  };\r\n  let latinizedText = '';\r\n  for (let i = 0; i < text.length; i++) {\r\n    const char = text[i];\r\n    latinizedText += simplerArmenianMap[char] || char;\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Function to latinize Greek text\r\nfunction latinizeGreek(text) {\r\n  const greekToLatinMap = {\r\n    // Uppercase\r\n    'Α': 'A', 'Β': 'V', 'Γ': 'G', 'Δ': 'D', 'Ε': 'E', 'Ζ': 'Z', 'Η': 'I', 'Θ': 'TH',\r\n    'Ι': 'I', 'Κ': 'K', 'Λ': 'L', 'Μ': 'M', 'Ν': 'N', 'Ξ': 'X', 'Ο': 'O', 'Π': 'P',\r\n    'Ρ': 'R', 'Σ': 'S', 'Τ': 'T', 'Υ': 'Y', 'Φ': 'F', 'Χ': 'CH', 'Ψ': 'PS', 'Ω': 'O',\r\n    // Lowercase\r\n    'α': 'a', 'β': 'v', 'γ': 'g', 'δ': 'd', 'ε': 'e', 'ζ': 'z', 'η': 'i', 'θ': 'th',\r\n    'ι': 'i', 'κ': 'k', 'λ': 'l', 'μ': 'm', 'ν': 'n', 'ξ': 'x', 'ο': 'o', 'π': 'p',\r\n    'ρ': 'r', 'σ': 's', 'ς': 's', 'τ': 't', 'υ': 'y', 'φ': 'f', 'χ': 'ch', 'ψ': 'ps', 'ω': 'o',\r\n    // Accented Uppercase\r\n    'Ά': 'A', 'Έ': 'E', 'Ή': 'I', 'Ί': 'I', 'Ό': 'O', 'Ύ': 'Y', 'Ώ': 'O',\r\n    // Accented Lowercase\r\n    'ά': 'a', 'έ': 'e', 'ή': 'i', 'ί': 'i', 'ό': 'o', 'ύ': 'y', 'ώ': 'o',\r\n    // Lowercase with diaeresis\r\n    'ϊ': 'i', 'ϋ': 'y',\r\n    // Accented with diaeresis\r\n    'ΐ': 'i', 'ΰ': 'y',\r\n    // Digraphs\r\n    'αι': 'ai', 'ει': 'ei', 'οι': 'oi', 'ου': 'ou', 'γγ': 'ng', 'γκ': 'gk', 'γχ': 'nch', 'τσ': 'ts',\r\n    'μπ': 'b', 'ντ': 'd',\r\n    // Uppercase Digraphs\r\n    'ΑΙ': 'AI', 'ΕΙ': 'EI', 'ΟΙ': 'OI', 'ΟΥ': 'OU', 'ΓΓ': 'NG', 'ΓΚ': 'GK', 'ΓΧ': 'NCH', 'ΤΣ': 'TS',\r\n    'ΜΠ': 'B', 'ΝΤ': 'D',\r\n    // Accented Digraphs\r\n    'άι': 'ai', 'έι': 'ei', 'όι': 'oi', 'ού': 'ou'\r\n  };\r\n\r\n  let latinizedText = \"\";\r\n  let i = 0;\r\n  while (i < text.length) {\r\n    let foundDigraph = false;\r\n    // Check for 2-character digraphs\r\n    if (i + 1 < text.length) {\r\n      const digraph = text.substring(i, i + 2);\r\n      if (greekToLatinMap.hasOwnProperty(digraph)) {\r\n        latinizedText += greekToLatinMap[digraph];\r\n        i += 2;\r\n        foundDigraph = true;\r\n      }\r\n    }\r\n    \r\n    if (!foundDigraph) {\r\n      const char = text[i];\r\n      if (greekToLatinMap.hasOwnProperty(char)) {\r\n        latinizedText += greekToLatinMap[char];\r\n      } else {\r\n        latinizedText += char; // Append original character if not in map\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n  return latinizedText;\r\n}\r\n\r\n// Add other specific latinization functions here if needed (e.g., Tatar, Bashkir)\r\n// For now, they will fall through in getLatinization\r\n\r\n/**\r\n * Main latinization dispatcher function.\r\n * @param {string} text - The text to latinize.\r\n * @param {string} languageIdentifier - The COSYlanguages internal code (e.g., 'ТАКОЙрусский').\r\n * @returns {string} The latinized text or original text if no specific latinizer is found.\r\n */\r\nexport function getLatinization(text, languageIdentifier) {\r\n  if (!text || typeof text.trim !== 'function' || text.trim() === '') {\r\n    return text;\r\n  }\r\n\r\n  const normalizedIdentifier = (languageIdentifier || '').toLowerCase();\r\n\r\n  if (normalizedIdentifier.includes('русский') || normalizedIdentifier.includes('russian') || languageIdentifier === 'ТАКОЙрусский') {\r\n    return latinizeRussian(text);\r\n  } else if (normalizedIdentifier.includes('ελληνικά') || normalizedIdentifier.includes('greek') || languageIdentifier === 'ΚΟΖΥελληνικά') {\r\n    return latinizeGreek(text);\r\n  } else if (normalizedIdentifier.includes('հայկական') || normalizedIdentifier.includes('armenian') || languageIdentifier === 'ԾՈՍՅհայկական') {\r\n    return latinizeArmenian(text);\r\n  }\r\n  // Add more language conditions here:\r\n  // else if (languageIdentifier === 'COSYtatarça') { return latinizeTatar(text); }\r\n  // else if (languageIdentifier === 'COSYbashkort') { return latinizeBashkir(text); }\r\n  \r\n  return text; // Return original text if no specific latinizer matches\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}